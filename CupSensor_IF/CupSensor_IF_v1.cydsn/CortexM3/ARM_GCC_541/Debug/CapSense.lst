ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_Enable, %function
  25              	CapSense_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense.c"
   1:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:Generated_Source\PSoC5/CapSense.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense.c **** *
   5:Generated_Source\PSoC5/CapSense.c **** * Description:
   6:Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense.c **** *  component.
   8:Generated_Source\PSoC5/CapSense.c **** *
   9:Generated_Source\PSoC5/CapSense.c **** * Note:
  10:Generated_Source\PSoC5/CapSense.c **** *
  11:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense.c **** 
  18:Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:Generated_Source\PSoC5/CapSense.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense.c **** 
  21:Generated_Source\PSoC5/CapSense.c **** 
  22:Generated_Source\PSoC5/CapSense.c **** static uint8 CapSense_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense.c ****             
  24:Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense.c **** 
  28:Generated_Source\PSoC5/CapSense.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 1u;
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 2


  31:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense.c **** 
  33:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_extRbCh0Cur = CapSense_RBLEED1;
  35:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_extRbCh1Cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
  37:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense.c ****         
  40:Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense.c **** 
  43:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense.c **** 0x1u, };
  45:Generated_Source\PSoC5/CapSense.c **** 
  46:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Generic0_0__GEN__PC, 
  48:Generated_Source\PSoC5/CapSense.c **** };
  49:Generated_Source\PSoC5/CapSense.c **** 
  50:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
  51:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Generic0_0__GEN__PORT, 
  52:Generated_Source\PSoC5/CapSense.c **** };
  53:Generated_Source\PSoC5/CapSense.c **** 
  54:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
  55:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Generic0_0__GEN__MASK,
  56:Generated_Source\PSoC5/CapSense.c **** };
  57:Generated_Source\PSoC5/CapSense.c **** 
  58:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
  59:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  60:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  61:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  62:Generated_Source\PSoC5/CapSense.c **** };
  63:Generated_Source\PSoC5/CapSense.c **** 
  64:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_idacSettings[] = {
  65:Generated_Source\PSoC5/CapSense.c ****     200u,
  66:Generated_Source\PSoC5/CapSense.c **** };
  67:Generated_Source\PSoC5/CapSense.c **** 
  68:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_widgetResolution[] = {
  69:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_10_BITS,
  70:Generated_Source\PSoC5/CapSense.c **** };
  71:Generated_Source\PSoC5/CapSense.c **** 
  72:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_analogSwitchDivider[CapSense_TOTAL_SCANSLOT_COUNT];
  73:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
  74:Generated_Source\PSoC5/CapSense.c ****     0u, /* Generic0__GEN */
  75:Generated_Source\PSoC5/CapSense.c ****     
  76:Generated_Source\PSoC5/CapSense.c **** };
  77:Generated_Source\PSoC5/CapSense.c **** 
  78:Generated_Source\PSoC5/CapSense.c **** 
  79:Generated_Source\PSoC5/CapSense.c **** 
  80:Generated_Source\PSoC5/CapSense.c **** 
  81:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
  82:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
  83:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  84:Generated_Source\PSoC5/CapSense.c **** *
  85:Generated_Source\PSoC5/CapSense.c **** * Summary:
  86:Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
  87:Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 3


  88:Generated_Source\PSoC5/CapSense.c **** *
  89:Generated_Source\PSoC5/CapSense.c **** * Parameters:
  90:Generated_Source\PSoC5/CapSense.c **** *  None
  91:Generated_Source\PSoC5/CapSense.c **** *
  92:Generated_Source\PSoC5/CapSense.c **** * Return:
  93:Generated_Source\PSoC5/CapSense.c **** *  None
  94:Generated_Source\PSoC5/CapSense.c **** *
  95:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  96:Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
  97:Generated_Source\PSoC5/CapSense.c **** {
  98:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
  99:Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 100:Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 101:Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 102:Generated_Source\PSoC5/CapSense.c ****         
 103:Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 104:Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 105:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 106:Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 107:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 108:Generated_Source\PSoC5/CapSense.c ****            */
 109:Generated_Source\PSoC5/CapSense.c ****     
 110:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 111:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 112:Generated_Source\PSoC5/CapSense.c **** 
 113:Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 114:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 115:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 116:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 117:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 118:Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 119:Generated_Source\PSoC5/CapSense.c ****                                                
 120:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 121:Generated_Source\PSoC5/CapSense.c ****     #else
 122:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 123:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 124:Generated_Source\PSoC5/CapSense.c **** 
 125:Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 126:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 127:Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 128:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 129:Generated_Source\PSoC5/CapSense.c **** 
 130:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 131:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 132:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 133:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 134:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 135:Generated_Source\PSoC5/CapSense.c ****         
 136:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 137:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 138:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 139:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 140:Generated_Source\PSoC5/CapSense.c ****         
 141:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
 142:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 143:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 144:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 4


 145:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 146:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 147:Generated_Source\PSoC5/CapSense.c ****         
 148:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 149:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 150:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 151:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 152:Generated_Source\PSoC5/CapSense.c ****                 
 153:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 154:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 155:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 156:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 157:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 158:Generated_Source\PSoC5/CapSense.c ****         
 159:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 160:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 161:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 162:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 163:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 164:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 165:Generated_Source\PSoC5/CapSense.c ****         
 166:Generated_Source\PSoC5/CapSense.c ****     #else
 167:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 168:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 169:Generated_Source\PSoC5/CapSense.c ****     
 170:Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
 171:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 172:Generated_Source\PSoC5/CapSense.c ****     
 173:Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 174:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 175:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 176:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 177:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 178:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 179:Generated_Source\PSoC5/CapSense.c ****         
 180:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 181:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 182:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 183:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 184:Generated_Source\PSoC5/CapSense.c ****     
 185:Generated_Source\PSoC5/CapSense.c ****     #else
 186:Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 187:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 188:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 189:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 190:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 191:Generated_Source\PSoC5/CapSense.c ****         
 192:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 193:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 194:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 195:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 196:Generated_Source\PSoC5/CapSense.c ****         
 197:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 198:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 199:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 200:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 201:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 5


 202:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 203:Generated_Source\PSoC5/CapSense.c ****     
 204:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 205:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 206:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 207:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 208:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 209:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 210:Generated_Source\PSoC5/CapSense.c ****             
 211:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 212:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 213:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 214:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 215:Generated_Source\PSoC5/CapSense.c ****            
 216:Generated_Source\PSoC5/CapSense.c ****         #else
 217:Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 218:Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 219:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 220:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 221:Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
 222:Generated_Source\PSoC5/CapSense.c ****             
 223:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 224:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 225:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 226:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 227:Generated_Source\PSoC5/CapSense.c ****             
 228:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 229:Generated_Source\PSoC5/CapSense.c ****             
 230:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 231:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 232:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 233:Generated_Source\PSoC5/CapSense.c ****             
 234:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 235:Generated_Source\PSoC5/CapSense.c ****     
 236:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 237:Generated_Source\PSoC5/CapSense.c ****     
 238:Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
 239:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 240:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 241:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 242:Generated_Source\PSoC5/CapSense.c ****     
 243:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 244:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 245:Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 246:Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
 247:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 248:Generated_Source\PSoC5/CapSense.c ****     
 249:Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 250:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 251:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 252:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 253:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 254:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 255:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 256:Generated_Source\PSoC5/CapSense.c ****     
 257:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 258:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 6


 259:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 260:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 261:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 262:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 263:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 264:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 265:Generated_Source\PSoC5/CapSense.c ****     
 266:Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 267:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 268:Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 269:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 270:Generated_Source\PSoC5/CapSense.c ****     
 271:Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 272:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 273:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 274:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 275:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 276:Generated_Source\PSoC5/CapSense.c ****     
 277:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 278:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 279:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 280:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 281:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 282:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 283:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 284:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 285:Generated_Source\PSoC5/CapSense.c ****     
 286:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 287:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
 288:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 289:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
 290:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 291:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 292:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 293:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 294:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 295:Generated_Source\PSoC5/CapSense.c ****     
 296:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 297:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 298:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 299:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 300:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 301:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 302:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 303:Generated_Source\PSoC5/CapSense.c **** }
 304:Generated_Source\PSoC5/CapSense.c **** 
 305:Generated_Source\PSoC5/CapSense.c **** 
 306:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 307:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 308:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 309:Generated_Source\PSoC5/CapSense.c **** *
 310:Generated_Source\PSoC5/CapSense.c **** * Summary:
 311:Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 312:Generated_Source\PSoC5/CapSense.c **** *  CapSense.
 313:Generated_Source\PSoC5/CapSense.c **** *
 314:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 315:Generated_Source\PSoC5/CapSense.c **** *  None
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 7


 316:Generated_Source\PSoC5/CapSense.c **** *
 317:Generated_Source\PSoC5/CapSense.c **** * Return:
 318:Generated_Source\PSoC5/CapSense.c **** *  None
 319:Generated_Source\PSoC5/CapSense.c **** *
 320:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 321:Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 322:Generated_Source\PSoC5/CapSense.c **** {
  28              		.loc 1 322 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 323:Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 324:Generated_Source\PSoC5/CapSense.c ****     
 325:Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 325 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  39 0006 0446     		mov	r4, r0
  40              	.LVL1:
 326:Generated_Source\PSoC5/CapSense.c ****     
 327:Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
 328:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 329:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 330:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 331:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
 332:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
 333:Generated_Source\PSoC5/CapSense.c ****         
 334:Generated_Source\PSoC5/CapSense.c ****     #else
 335:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 336:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 337:Generated_Source\PSoC5/CapSense.c ****     
 338:Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 339:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
  41              		.loc 1 339 0
  42 0008 134A     		ldr	r2, .L3
  43 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  44 000c 43F02003 		orr	r3, r3, #32
  45 0010 1370     		strb	r3, [r2]
 340:Generated_Source\PSoC5/CapSense.c ****     
 341:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
 342:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 343:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 344:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 345:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 346:Generated_Source\PSoC5/CapSense.c ****         
 347:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 348:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 349:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 350:Generated_Source\PSoC5/CapSense.c ****         
 351:Generated_Source\PSoC5/CapSense.c ****     #else
 352:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 353:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 354:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 8


 355:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 356:Generated_Source\PSoC5/CapSense.c ****     
 357:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
 358:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 359:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 360:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 361:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 362:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 363:Generated_Source\PSoC5/CapSense.c ****             
 364:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 365:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 366:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 367:Generated_Source\PSoC5/CapSense.c ****            
 368:Generated_Source\PSoC5/CapSense.c ****         #else
 369:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 370:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 371:Generated_Source\PSoC5/CapSense.c ****         
 372:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 373:Generated_Source\PSoC5/CapSense.c ****     
 374:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 375:Generated_Source\PSoC5/CapSense.c ****     
 376:Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
 377:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 378:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
  46              		.loc 1 378 0
  47 0012 FFF7FEFF 		bl	CapSense_IntClock_Start
  48              	.LVL2:
 379:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 380:Generated_Source\PSoC5/CapSense.c ****     
 381:Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 382:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
  49              		.loc 1 382 0
  50 0016 FFF7FEFF 		bl	CapSense_CompCH0_Enable
  51              	.LVL3:
 383:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 384:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
  52              		.loc 1 384 0
  53 001a FFF7FEFF 		bl	CapSense_IdacCH0_Enable
  54              	.LVL4:
 385:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 386:Generated_Source\PSoC5/CapSense.c ****     
 387:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 388:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
 389:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 390:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
 391:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 392:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 393:Generated_Source\PSoC5/CapSense.c ****     
 394:Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 395:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 396:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 397:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 398:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 399:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
 400:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 401:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 402:Generated_Source\PSoC5/CapSense.c ****     #else
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 9


 403:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 404:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
  55              		.loc 1 404 0
  56 001e 0F4A     		ldr	r2, .L3+4
  57 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  58 0022 43F01003 		orr	r3, r3, #16
  59 0026 1370     		strb	r3, [r2]
 405:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
  60              		.loc 1 405 0
  61 0028 103A     		subs	r2, r2, #16
  62 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  63 002c 43F01003 		orr	r3, r3, #16
  64 0030 1370     		strb	r3, [r2]
 406:Generated_Source\PSoC5/CapSense.c ****         
 407:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 408:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 409:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 410:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 411:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 412:Generated_Source\PSoC5/CapSense.c ****     
 413:Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
 414:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 415:Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 416:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
 417:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 418:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 419:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 420:Generated_Source\PSoC5/CapSense.c ****         
 421:Generated_Source\PSoC5/CapSense.c ****     #else
 422:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 423:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
  65              		.loc 1 423 0
  66 0032 02F5A652 		add	r2, r2, #5312
  67 0036 0532     		adds	r2, r2, #5
  68 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  69 003a 43F00103 		orr	r3, r3, #1
  70 003e 1370     		strb	r3, [r2]
 424:Generated_Source\PSoC5/CapSense.c ****         
 425:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 426:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 427:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 428:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 429:Generated_Source\PSoC5/CapSense.c ****     
 430:Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
  71              		.loc 1 430 0
  72 0040 2046     		mov	r0, r4
  73 0042 FFF7FEFF 		bl	CyExitCriticalSection
  74              	.LVL5:
 431:Generated_Source\PSoC5/CapSense.c ****     
 432:Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 433:Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
  75              		.loc 1 433 0
  76 0046 0122     		movs	r2, #1
  77 0048 054B     		ldr	r3, .L3+8
  78 004a 1A60     		str	r2, [r3]
 434:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 435:Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 10


 436:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 437:Generated_Source\PSoC5/CapSense.c ****     
 438:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 439:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
  79              		.loc 1 439 0
  80 004c 054A     		ldr	r2, .L3+12
  81 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  82 0050 43F08003 		orr	r3, r3, #128
  83 0054 1370     		strb	r3, [r2]
  84 0056 10BD     		pop	{r4, pc}
  85              	.LVL6:
  86              	.L4:
  87              		.align	2
  88              	.L3:
  89 0058 9A640040 		.word	1073767578
  90 005c BB430040 		.word	1073759163
  91 0060 00E100E0 		.word	-536813312
  92 0064 79640040 		.word	1073767545
  93              		.cfi_endproc
  94              	.LFE1:
  95              		.size	CapSense_Enable, .-CapSense_Enable
  96              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
  97              		.align	2
  98              		.global	CapSense_FindNextSensor
  99              		.thumb
 100              		.thumb_func
 101              		.type	CapSense_FindNextSensor, %function
 102              	CapSense_FindNextSensor:
 103              	.LFB4:
 440:Generated_Source\PSoC5/CapSense.c **** }
 441:Generated_Source\PSoC5/CapSense.c **** 
 442:Generated_Source\PSoC5/CapSense.c **** 
 443:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 444:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 445:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 446:Generated_Source\PSoC5/CapSense.c **** *
 447:Generated_Source\PSoC5/CapSense.c **** * Summary:
 448:Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 449:Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 450:Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 451:Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
 452:Generated_Source\PSoC5/CapSense.c **** *
 453:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 454:Generated_Source\PSoC5/CapSense.c **** *  None
 455:Generated_Source\PSoC5/CapSense.c **** *
 456:Generated_Source\PSoC5/CapSense.c **** * Return:
 457:Generated_Source\PSoC5/CapSense.c **** *  None
 458:Generated_Source\PSoC5/CapSense.c **** *
 459:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 460:Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 461:Generated_Source\PSoC5/CapSense.c **** *  first function call.
 462:Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 463:Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 464:Generated_Source\PSoC5/CapSense.c **** *
 465:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 466:Generated_Source\PSoC5/CapSense.c **** *  No
 467:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 11


 468:Generated_Source\PSoC5/CapSense.c **** * Note:
 469:Generated_Source\PSoC5/CapSense.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 470:Generated_Source\PSoC5/CapSense.c **** *  must be manually enabled as their long scan time is incompatible 
 471:Generated_Source\PSoC5/CapSense.c **** *  with the fast response required of other widget types. 
 472:Generated_Source\PSoC5/CapSense.c **** *
 473:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 474:Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 475:Generated_Source\PSoC5/CapSense.c **** {
 476:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 477:Generated_Source\PSoC5/CapSense.c ****     {
 478:Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 479:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 480:Generated_Source\PSoC5/CapSense.c ****     }
 481:Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 482:Generated_Source\PSoC5/CapSense.c ****     
 483:Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 484:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 485:Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 486:Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 487:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 488:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 489:Generated_Source\PSoC5/CapSense.c **** }
 490:Generated_Source\PSoC5/CapSense.c **** 
 491:Generated_Source\PSoC5/CapSense.c **** 
 492:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 493:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 494:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 495:Generated_Source\PSoC5/CapSense.c **** *
 496:Generated_Source\PSoC5/CapSense.c **** * Summary:
 497:Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 498:Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 499:Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 500:Generated_Source\PSoC5/CapSense.c **** *
 501:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 502:Generated_Source\PSoC5/CapSense.c **** *  None
 503:Generated_Source\PSoC5/CapSense.c **** *
 504:Generated_Source\PSoC5/CapSense.c **** * Return:
 505:Generated_Source\PSoC5/CapSense.c **** *  None
 506:Generated_Source\PSoC5/CapSense.c **** *
 507:Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 508:Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
 509:Generated_Source\PSoC5/CapSense.c **** *
 510:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 511:Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 512:Generated_Source\PSoC5/CapSense.c **** {
 513:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 514:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 515:Generated_Source\PSoC5/CapSense.c ****     
 516:Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
 517:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 518:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 519:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 520:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 521:Generated_Source\PSoC5/CapSense.c ****     
 522:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 523:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 524:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 12


 525:Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 526:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 527:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 528:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 529:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 530:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 531:Generated_Source\PSoC5/CapSense.c ****         
 532:Generated_Source\PSoC5/CapSense.c ****     #else
 533:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 534:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 535:Generated_Source\PSoC5/CapSense.c ****     
 536:Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 537:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 538:Generated_Source\PSoC5/CapSense.c ****     
 539:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 540:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 541:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 542:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 543:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 544:Generated_Source\PSoC5/CapSense.c **** 
 545:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 546:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 547:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 548:Generated_Source\PSoC5/CapSense.c **** 
 549:Generated_Source\PSoC5/CapSense.c ****     #else
 550:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 551:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 552:Generated_Source\PSoC5/CapSense.c ****         
 553:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 554:Generated_Source\PSoC5/CapSense.c ****     
 555:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 556:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 557:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 558:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 559:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
 560:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 561:Generated_Source\PSoC5/CapSense.c ****     
 562:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 563:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 564:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 565:Generated_Source\PSoC5/CapSense.c ****            
 566:Generated_Source\PSoC5/CapSense.c ****         #else
 567:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 568:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 569:Generated_Source\PSoC5/CapSense.c ****         
 570:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 571:Generated_Source\PSoC5/CapSense.c ****     
 572:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 573:Generated_Source\PSoC5/CapSense.c ****     
 574:Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 575:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 576:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 577:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 578:Generated_Source\PSoC5/CapSense.c ****     
 579:Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 580:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 581:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 13


 582:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 583:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 584:Generated_Source\PSoC5/CapSense.c ****     
 585:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 586:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
 587:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 588:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 589:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 590:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 591:Generated_Source\PSoC5/CapSense.c ****     
 592:Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 593:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 594:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 595:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 596:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 597:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 598:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 599:Generated_Source\PSoC5/CapSense.c **** 
 600:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 601:Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 602:Generated_Source\PSoC5/CapSense.c ****     #else
 603:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 604:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 605:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 606:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 607:Generated_Source\PSoC5/CapSense.c ****         
 608:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 609:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 610:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_ACT_PWR_EN);
 611:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_STBY_PWR_EN);
 612:Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 613:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 614:Generated_Source\PSoC5/CapSense.c ****     
 615:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 616:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 617:Generated_Source\PSoC5/CapSense.c **** }
 618:Generated_Source\PSoC5/CapSense.c **** 
 619:Generated_Source\PSoC5/CapSense.c **** 
 620:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 621:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 622:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
 623:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 624:Generated_Source\PSoC5/CapSense.c ****     *
 625:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 626:Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
 627:Generated_Source\PSoC5/CapSense.c ****     *
 628:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 629:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 630:Generated_Source\PSoC5/CapSense.c ****     *
 631:Generated_Source\PSoC5/CapSense.c ****     * Return:
 632:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 633:Generated_Source\PSoC5/CapSense.c ****     *
 634:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 635:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 636:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 637:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 638:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 14


 639:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 640:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 641:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 642:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 643:Generated_Source\PSoC5/CapSense.c ****     *
 644:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 645:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
 646:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 647:Generated_Source\PSoC5/CapSense.c ****     *
 648:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 649:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 650:Generated_Source\PSoC5/CapSense.c ****     {
 104              		.loc 1 650 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              	.LVL7:
 110              	.L7:
 651:Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 652:Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 653:Generated_Source\PSoC5/CapSense.c ****         
 654:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 655:Generated_Source\PSoC5/CapSense.c ****         do
 656:Generated_Source\PSoC5/CapSense.c ****         {
 657:Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 658:Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 111              		.loc 1 658 0
 112 0000 0130     		adds	r0, r0, #1
 113 0002 C0B2     		uxtb	r0, r0
 114              	.LVL8:
 659:Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 115              		.loc 1 659 0
 116 0004 0128     		cmp	r0, #1
 117 0006 08D0     		beq	.L6
 660:Generated_Source\PSoC5/CapSense.c ****             {
 661:Generated_Source\PSoC5/CapSense.c ****                 break;
 662:Generated_Source\PSoC5/CapSense.c ****             }
 663:Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 118              		.loc 1 663 0
 119 0008 C208     		lsrs	r2, r0, #3
 664:Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 120              		.loc 1 664 0
 121 000a 00F00701 		and	r1, r0, #7
 122 000e 0123     		movs	r3, #1
 123 0010 8B40     		lsls	r3, r3, r1
 124              	.LVL9:
 665:Generated_Source\PSoC5/CapSense.c ****         }    
 666:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[pos] & enMask) == 0u);
 125              		.loc 1 666 0
 126 0012 0249     		ldr	r1, .L8
 127 0014 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 128 0016 1342     		tst	r3, r2
 129 0018 F2D0     		beq	.L7
 130              	.LVL10:
 131              	.L6:
 667:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 15


 668:Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 669:Generated_Source\PSoC5/CapSense.c ****     }
 132              		.loc 1 669 0
 133 001a 7047     		bx	lr
 134              	.L9:
 135              		.align	2
 136              	.L8:
 137 001c 00000000 		.word	.LANCHOR0
 138              		.cfi_endproc
 139              	.LFE4:
 140              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 141              		.section	.text.CapSense_IsBusy,"ax",%progbits
 142              		.align	2
 143              		.global	CapSense_IsBusy
 144              		.thumb
 145              		.thumb_func
 146              		.type	CapSense_IsBusy, %function
 147              	CapSense_IsBusy:
 148              	.LFB8:
 670:Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 671:Generated_Source\PSoC5/CapSense.c ****  
 672:Generated_Source\PSoC5/CapSense.c ****  
 673:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 674:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 675:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
 676:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 677:Generated_Source\PSoC5/CapSense.c ****     *
 678:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 679:Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 680:Generated_Source\PSoC5/CapSense.c ****     *  
 681:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 682:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 683:Generated_Source\PSoC5/CapSense.c ****     *
 684:Generated_Source\PSoC5/CapSense.c ****     * Return:
 685:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 686:Generated_Source\PSoC5/CapSense.c ****     *
 687:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 688:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 689:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 690:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 691:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 692:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 693:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 694:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 695:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 696:Generated_Source\PSoC5/CapSense.c ****     *
 697:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 698:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 699:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 700:Generated_Source\PSoC5/CapSense.c ****     *
 701:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 702:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 703:Generated_Source\PSoC5/CapSense.c ****     {
 704:Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
 705:Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 706:Generated_Source\PSoC5/CapSense.c ****         uint8 newRegValue;
 707:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 16


 708:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 709:Generated_Source\PSoC5/CapSense.c ****         
 710:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
 711:Generated_Source\PSoC5/CapSense.c ****         do
 712:Generated_Source\PSoC5/CapSense.c ****         {
 713:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 714:Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 715:Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 716:Generated_Source\PSoC5/CapSense.c ****             {
 717:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 718:Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 719:Generated_Source\PSoC5/CapSense.c ****                 break;
 720:Generated_Source\PSoC5/CapSense.c ****             }
 721:Generated_Source\PSoC5/CapSense.c ****             
 722:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 723:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 724:Generated_Source\PSoC5/CapSense.c ****         }
 725:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 726:Generated_Source\PSoC5/CapSense.c ****         
 727:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 728:Generated_Source\PSoC5/CapSense.c ****         do
 729:Generated_Source\PSoC5/CapSense.c ****         {
 730:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 731:Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
 732:Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
 733:Generated_Source\PSoC5/CapSense.c ****             {
 734:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 735:Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 736:Generated_Source\PSoC5/CapSense.c ****                 break;
 737:Generated_Source\PSoC5/CapSense.c ****             }
 738:Generated_Source\PSoC5/CapSense.c ****             
 739:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 740:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 741:Generated_Source\PSoC5/CapSense.c ****         } 
 742:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 743:Generated_Source\PSoC5/CapSense.c ****         
 744:Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 745:Generated_Source\PSoC5/CapSense.c ****         
 746:Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 747:Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 748:Generated_Source\PSoC5/CapSense.c ****         {
 749:Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 750:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 751:Generated_Source\PSoC5/CapSense.c ****             
 752:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= (CapSense_CTRL_WINDOW_EN__CH0 | 
 753:Generated_Source\PSoC5/CapSense.c ****                                              CapSense_CTRL_WINDOW_EN__CH1);
 754:Generated_Source\PSoC5/CapSense.c ****         }
 755:Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 756:Generated_Source\PSoC5/CapSense.c ****         {
 757:Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 758:Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 759:Generated_Source\PSoC5/CapSense.c ****            
 760:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 761:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH0;
 762:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH1;
 763:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 764:Generated_Source\PSoC5/CapSense.c ****         }
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 17


 765:Generated_Source\PSoC5/CapSense.c ****         else
 766:Generated_Source\PSoC5/CapSense.c ****         {
 767:Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
 768:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 769:Generated_Source\PSoC5/CapSense.c ****             
 770:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 771:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH1;
 772:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH0;
 773:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 774:Generated_Source\PSoC5/CapSense.c ****         }
 775:Generated_Source\PSoC5/CapSense.c ****         
 776:Generated_Source\PSoC5/CapSense.c ****         return (snsIndex);
 777:Generated_Source\PSoC5/CapSense.c ****     }
 778:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 779:Generated_Source\PSoC5/CapSense.c **** 
 780:Generated_Source\PSoC5/CapSense.c **** 
 781:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 782:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 783:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 784:Generated_Source\PSoC5/CapSense.c **** *
 785:Generated_Source\PSoC5/CapSense.c **** * Summary:
 786:Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 787:Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 788:Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 789:Generated_Source\PSoC5/CapSense.c **** *  widget.
 790:Generated_Source\PSoC5/CapSense.c **** *
 791:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 792:Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 793:Generated_Source\PSoC5/CapSense.c **** *
 794:Generated_Source\PSoC5/CapSense.c **** * Return:
 795:Generated_Source\PSoC5/CapSense.c **** *  None
 796:Generated_Source\PSoC5/CapSense.c **** *
 797:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 798:Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
 799:Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 800:Generated_Source\PSoC5/CapSense.c **** *  widget.
 801:Generated_Source\PSoC5/CapSense.c **** *
 802:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 803:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 804:Generated_Source\PSoC5/CapSense.c **** {
 805:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 806:Generated_Source\PSoC5/CapSense.c ****     
 807:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 808:Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 809:Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
 810:Generated_Source\PSoC5/CapSense.c ****         
 811:Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 812:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 813:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 814:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 815:Generated_Source\PSoC5/CapSense.c ****         
 816:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 817:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 818:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 819:Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 820:Generated_Source\PSoC5/CapSense.c ****         #else
 821:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 18


 822:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 823:Generated_Source\PSoC5/CapSense.c **** 
 824:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 825:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 826:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 827:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 828:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 829:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 830:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 831:Generated_Source\PSoC5/CapSense.c ****                */
 832:Generated_Source\PSoC5/CapSense.c **** 
 833:Generated_Source\PSoC5/CapSense.c ****     #else
 834:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 835:Generated_Source\PSoC5/CapSense.c ****         {
 836:Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 837:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 838:Generated_Source\PSoC5/CapSense.c ****             
 839:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 840:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 841:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 842:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 843:Generated_Source\PSoC5/CapSense.c ****             
 844:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 845:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 846:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 847:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 848:Generated_Source\PSoC5/CapSense.c ****             #else
 849:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 850:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 851:Generated_Source\PSoC5/CapSense.c ****         }
 852:Generated_Source\PSoC5/CapSense.c ****         
 853:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 854:Generated_Source\PSoC5/CapSense.c ****         {
 855:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
 856:Generated_Source\PSoC5/CapSense.c ****         
 857:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 858:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 859:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 860:Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 861:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 862:Generated_Source\PSoC5/CapSense.c ****             
 863:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 864:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 865:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 866:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 867:Generated_Source\PSoC5/CapSense.c ****             #else
 868:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 869:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 870:Generated_Source\PSoC5/CapSense.c ****         }
 871:Generated_Source\PSoC5/CapSense.c **** 
 872:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 873:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 874:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 875:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 876:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 877:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 878:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 19


 879:Generated_Source\PSoC5/CapSense.c ****                */
 880:Generated_Source\PSoC5/CapSense.c **** 
 881:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 882:Generated_Source\PSoC5/CapSense.c **** }
 883:Generated_Source\PSoC5/CapSense.c **** 
 884:Generated_Source\PSoC5/CapSense.c **** 
 885:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 886:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
 887:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 888:Generated_Source\PSoC5/CapSense.c **** *
 889:Generated_Source\PSoC5/CapSense.c **** * Summary:
 890:Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 891:Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 892:Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
 893:Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 894:Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 895:Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 896:Generated_Source\PSoC5/CapSense.c **** *
 897:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 898:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
 899:Generated_Source\PSoC5/CapSense.c **** *
 900:Generated_Source\PSoC5/CapSense.c **** * Return:
 901:Generated_Source\PSoC5/CapSense.c **** *  None
 902:Generated_Source\PSoC5/CapSense.c **** *
 903:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 904:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 905:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 906:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 907:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
 908:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 909:Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
 910:Generated_Source\PSoC5/CapSense.c **** *
 911:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 912:Generated_Source\PSoC5/CapSense.c **** *  No
 913:Generated_Source\PSoC5/CapSense.c **** *
 914:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 915:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
 916:Generated_Source\PSoC5/CapSense.c **** {
 917:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 918:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 919:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 920:Generated_Source\PSoC5/CapSense.c ****     
 921:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 922:Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
 923:Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 924:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 925:Generated_Source\PSoC5/CapSense.c ****         
 926:Generated_Source\PSoC5/CapSense.c ****     #else
 927:Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
 928:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 929:Generated_Source\PSoC5/CapSense.c ****         {
 930:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 931:Generated_Source\PSoC5/CapSense.c ****         }
 932:Generated_Source\PSoC5/CapSense.c ****         else
 933:Generated_Source\PSoC5/CapSense.c ****         {
 934:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
 935:Generated_Source\PSoC5/CapSense.c ****         }
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 20


 936:Generated_Source\PSoC5/CapSense.c ****         
 937:Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
 938:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 939:Generated_Source\PSoC5/CapSense.c ****         {
 940:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 941:Generated_Source\PSoC5/CapSense.c ****         }
 942:Generated_Source\PSoC5/CapSense.c ****         else
 943:Generated_Source\PSoC5/CapSense.c ****         {
 944:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
 945:Generated_Source\PSoC5/CapSense.c ****         }
 946:Generated_Source\PSoC5/CapSense.c ****         
 947:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
 948:Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
 949:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
 950:Generated_Source\PSoC5/CapSense.c ****         {
 951:Generated_Source\PSoC5/CapSense.c ****         
 952:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 953:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
 954:Generated_Source\PSoC5/CapSense.c ****         }
 955:Generated_Source\PSoC5/CapSense.c ****         
 956:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 957:Generated_Source\PSoC5/CapSense.c **** }
 958:Generated_Source\PSoC5/CapSense.c **** 
 959:Generated_Source\PSoC5/CapSense.c **** 
 960:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 961:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
 962:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 963:Generated_Source\PSoC5/CapSense.c **** *
 964:Generated_Source\PSoC5/CapSense.c **** * Summary:
 965:Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 966:Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 967:Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 968:Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 969:Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 970:Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
 971:Generated_Source\PSoC5/CapSense.c **** *
 972:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 973:Generated_Source\PSoC5/CapSense.c **** *  None
 974:Generated_Source\PSoC5/CapSense.c **** *
 975:Generated_Source\PSoC5/CapSense.c **** * Return:
 976:Generated_Source\PSoC5/CapSense.c **** *  None
 977:Generated_Source\PSoC5/CapSense.c **** *
 978:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 979:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 980:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
 981:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 982:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
 983:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 984:Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
 985:Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
 986:Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
 987:Generated_Source\PSoC5/CapSense.c **** *
 988:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 989:Generated_Source\PSoC5/CapSense.c **** *  No
 990:Generated_Source\PSoC5/CapSense.c **** *
 991:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 992:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 21


 993:Generated_Source\PSoC5/CapSense.c **** {
 994:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 995:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 996:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 997:Generated_Source\PSoC5/CapSense.c ****     
 998:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 999:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1000:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
1001:Generated_Source\PSoC5/CapSense.c **** 
1002:Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1003:Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
1004:Generated_Source\PSoC5/CapSense.c ****         {
1005:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1006:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1007:Generated_Source\PSoC5/CapSense.c ****         }
1008:Generated_Source\PSoC5/CapSense.c ****         
1009:Generated_Source\PSoC5/CapSense.c ****     #else
1010:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
1011:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
1012:Generated_Source\PSoC5/CapSense.c ****         
1013:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1014:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
1015:Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
1016:Generated_Source\PSoC5/CapSense.c ****         {
1017:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1018:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1019:Generated_Source\PSoC5/CapSense.c ****         }
1020:Generated_Source\PSoC5/CapSense.c ****         
1021:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1022:Generated_Source\PSoC5/CapSense.c **** }
1023:Generated_Source\PSoC5/CapSense.c **** 
1024:Generated_Source\PSoC5/CapSense.c **** 
1025:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1026:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1027:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1028:Generated_Source\PSoC5/CapSense.c **** *
1029:Generated_Source\PSoC5/CapSense.c **** * Summary:
1030:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1031:Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1032:Generated_Source\PSoC5/CapSense.c **** *
1033:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1034:Generated_Source\PSoC5/CapSense.c **** *  None
1035:Generated_Source\PSoC5/CapSense.c **** *
1036:Generated_Source\PSoC5/CapSense.c **** * Return:
1037:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1038:Generated_Source\PSoC5/CapSense.c **** *  completed.
1039:Generated_Source\PSoC5/CapSense.c **** *
1040:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1041:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1042:Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1043:Generated_Source\PSoC5/CapSense.c **** *
1044:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1045:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1046:Generated_Source\PSoC5/CapSense.c **** {
 149              		.loc 1 1046 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 22


 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
1047:Generated_Source\PSoC5/CapSense.c ****     return ((0u != (CapSense_csv & CapSense_SW_STS_BUSY)) ? 1u : 0u);
 154              		.loc 1 1047 0
 155 0000 024B     		ldr	r3, .L11
 156 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1048:Generated_Source\PSoC5/CapSense.c **** }
 157              		.loc 1 1048 0
 158 0004 00F00100 		and	r0, r0, #1
 159 0008 7047     		bx	lr
 160              	.L12:
 161 000a 00BF     		.align	2
 162              	.L11:
 163 000c 00000000 		.word	CapSense_csv
 164              		.cfi_endproc
 165              	.LFE8:
 166              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 167              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 168              		.align	2
 169              		.global	CapSense_ReadSensorRaw
 170              		.thumb
 171              		.thumb_func
 172              		.type	CapSense_ReadSensorRaw, %function
 173              	CapSense_ReadSensorRaw:
 174              	.LFB9:
1049:Generated_Source\PSoC5/CapSense.c **** 
1050:Generated_Source\PSoC5/CapSense.c **** 
1051:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1052:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1053:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1054:Generated_Source\PSoC5/CapSense.c **** *
1055:Generated_Source\PSoC5/CapSense.c **** * Summary:
1056:Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_sensorRaw[] array. 
1057:Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1058:Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1059:Generated_Source\PSoC5/CapSense.c **** *
1060:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1061:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1062:Generated_Source\PSoC5/CapSense.c **** *
1063:Generated_Source\PSoC5/CapSense.c **** * Return:
1064:Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
1065:Generated_Source\PSoC5/CapSense.c **** *
1066:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1067:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1068:Generated_Source\PSoC5/CapSense.c **** *
1069:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1070:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1071:Generated_Source\PSoC5/CapSense.c **** {
 175              		.loc 1 1071 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL11:
1072:Generated_Source\PSoC5/CapSense.c ****     return (CapSense_sensorRaw[sensor]);
1073:Generated_Source\PSoC5/CapSense.c **** }
 181              		.loc 1 1073 0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 23


 182 0000 014B     		ldr	r3, .L14
 183 0002 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 184              	.LVL12:
 185 0006 7047     		bx	lr
 186              	.L15:
 187              		.align	2
 188              	.L14:
 189 0008 00000000 		.word	CapSense_sensorRaw
 190              		.cfi_endproc
 191              	.LFE9:
 192              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 193              		.section	.text.CapSense_EnableSensor,"ax",%progbits
 194              		.align	2
 195              		.global	CapSense_EnableSensor
 196              		.thumb
 197              		.thumb_func
 198              		.type	CapSense_EnableSensor, %function
 199              	CapSense_EnableSensor:
 200              	.LFB11:
1074:Generated_Source\PSoC5/CapSense.c **** 
1075:Generated_Source\PSoC5/CapSense.c **** 
1076:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1077:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1078:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1079:Generated_Source\PSoC5/CapSense.c **** *
1080:Generated_Source\PSoC5/CapSense.c **** * Summary:
1081:Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1082:Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1083:Generated_Source\PSoC5/CapSense.c **** *
1084:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1085:Generated_Source\PSoC5/CapSense.c **** *  None
1086:Generated_Source\PSoC5/CapSense.c **** *
1087:Generated_Source\PSoC5/CapSense.c **** * Return:
1088:Generated_Source\PSoC5/CapSense.c **** *  None
1089:Generated_Source\PSoC5/CapSense.c **** *
1090:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1091:Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1092:Generated_Source\PSoC5/CapSense.c **** {
1093:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1094:Generated_Source\PSoC5/CapSense.c ****    
1095:Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
1096:Generated_Source\PSoC5/CapSense.c ****     {
1097:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
1098:Generated_Source\PSoC5/CapSense.c ****     }
1099:Generated_Source\PSoC5/CapSense.c **** }
1100:Generated_Source\PSoC5/CapSense.c **** 
1101:Generated_Source\PSoC5/CapSense.c **** 
1102:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1103:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1104:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
1105:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1106:Generated_Source\PSoC5/CapSense.c ****     *
1107:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1108:Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
1109:Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1110:Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1111:Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 24


1112:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1113:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1114:Generated_Source\PSoC5/CapSense.c ****     *
1115:Generated_Source\PSoC5/CapSense.c ****     * Return:
1116:Generated_Source\PSoC5/CapSense.c ****     *  None
1117:Generated_Source\PSoC5/CapSense.c ****     *
1118:Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1119:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1120:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1121:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1122:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1123:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1124:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1125:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1126:Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1127:Generated_Source\PSoC5/CapSense.c ****     *
1128:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1129:Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1130:Generated_Source\PSoC5/CapSense.c ****     {
1131:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1132:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1133:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1134:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1135:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1136:Generated_Source\PSoC5/CapSense.c ****         
1137:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1138:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1139:Generated_Source\PSoC5/CapSense.c ****         {
1140:Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1141:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
1142:Generated_Source\PSoC5/CapSense.c ****         }
1143:Generated_Source\PSoC5/CapSense.c ****         else
1144:Generated_Source\PSoC5/CapSense.c ****         {
1145:Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
1146:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1147:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1148:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1149:Generated_Source\PSoC5/CapSense.c ****                         
1150:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1151:Generated_Source\PSoC5/CapSense.c ****             {
1152:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
1153:Generated_Source\PSoC5/CapSense.c ****             }
1154:Generated_Source\PSoC5/CapSense.c ****         } 
1155:Generated_Source\PSoC5/CapSense.c ****     }
1156:Generated_Source\PSoC5/CapSense.c ****     
1157:Generated_Source\PSoC5/CapSense.c ****     
1158:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1159:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1160:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1161:Generated_Source\PSoC5/CapSense.c ****     *
1162:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1163:Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1164:Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1165:Generated_Source\PSoC5/CapSense.c ****     *
1166:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1167:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1168:Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 25


1169:Generated_Source\PSoC5/CapSense.c ****     * Return:
1170:Generated_Source\PSoC5/CapSense.c ****     *  None
1171:Generated_Source\PSoC5/CapSense.c ****     *
1172:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1173:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1174:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1175:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1176:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1177:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1178:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1179:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1180:Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1181:Generated_Source\PSoC5/CapSense.c ****     *
1182:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1183:Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1184:Generated_Source\PSoC5/CapSense.c ****     {
1185:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1186:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1187:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1188:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1189:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1190:Generated_Source\PSoC5/CapSense.c ****         
1191:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1192:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1193:Generated_Source\PSoC5/CapSense.c ****         {
1194:Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1195:Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1196:Generated_Source\PSoC5/CapSense.c ****         }
1197:Generated_Source\PSoC5/CapSense.c ****         else
1198:Generated_Source\PSoC5/CapSense.c ****         {
1199:Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1200:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1201:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1202:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1203:Generated_Source\PSoC5/CapSense.c ****                         
1204:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1205:Generated_Source\PSoC5/CapSense.c ****             {
1206:Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1207:Generated_Source\PSoC5/CapSense.c ****             }
1208:Generated_Source\PSoC5/CapSense.c ****         } 
1209:Generated_Source\PSoC5/CapSense.c ****     }
1210:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1211:Generated_Source\PSoC5/CapSense.c **** 
1212:Generated_Source\PSoC5/CapSense.c **** 
1213:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1214:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1215:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1216:Generated_Source\PSoC5/CapSense.c **** *
1217:Generated_Source\PSoC5/CapSense.c **** * Summary:
1218:Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1219:Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1220:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1221:Generated_Source\PSoC5/CapSense.c **** *
1222:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1223:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1224:Generated_Source\PSoC5/CapSense.c **** *
1225:Generated_Source\PSoC5/CapSense.c **** * Return:
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 26


1226:Generated_Source\PSoC5/CapSense.c **** *  None
1227:Generated_Source\PSoC5/CapSense.c **** *
1228:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1229:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1230:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1231:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1232:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1233:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1234:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1235:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1236:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1237:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1238:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1239:Generated_Source\PSoC5/CapSense.c **** *
1240:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1241:Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1242:Generated_Source\PSoC5/CapSense.c **** {
 201              		.loc 1 1242 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              	.LVL13:
 206 0000 08B5     		push	{r3, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 210              	.LVL14:
1243:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
1244:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
1245:Generated_Source\PSoC5/CapSense.c ****     
1246:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1247:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1248:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1249:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1250:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1251:Generated_Source\PSoC5/CapSense.c ****             */
1252:Generated_Source\PSoC5/CapSense.c ****     
1253:Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
1254:Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 211              		.loc 1 1254 0
 212 0002 0922     		movs	r2, #9
 213 0004 044B     		ldr	r3, .L18
 214 0006 1A70     		strb	r2, [r3]
1255:Generated_Source\PSoC5/CapSense.c ****     
1256:Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1257:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
1258:Generated_Source\PSoC5/CapSense.c **** 	{
1259:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
1260:Generated_Source\PSoC5/CapSense.c **** 	}
1261:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
 215              		.loc 1 1261 0
 216 0008 044A     		ldr	r2, .L18+4
 217 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 218 000c 43F00103 		orr	r3, r3, #1
 219 0010 1370     		strb	r3, [r2]
1262:Generated_Source\PSoC5/CapSense.c ****     
1263:Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 27


1264:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1265:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1266:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
1267:Generated_Source\PSoC5/CapSense.c ****         #else
1268:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
 220              		.loc 1 1268 0
 221 0012 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 222              	.LVL15:
 223 0016 08BD     		pop	{r3, pc}
 224              	.L19:
 225              		.align	2
 226              	.L18:
 227 0018 00500040 		.word	1073762304
 228 001c 06520040 		.word	1073762822
 229              		.cfi_endproc
 230              	.LFE11:
 231              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 232              		.section	.text.CapSense_DisableSensor,"ax",%progbits
 233              		.align	2
 234              		.global	CapSense_DisableSensor
 235              		.thumb
 236              		.thumb_func
 237              		.type	CapSense_DisableSensor, %function
 238              	CapSense_DisableSensor:
 239              	.LFB12:
1269:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1270:Generated_Source\PSoC5/CapSense.c ****                 
1271:Generated_Source\PSoC5/CapSense.c ****     #else
1272:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1273:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1274:Generated_Source\PSoC5/CapSense.c ****             {
1275:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1276:Generated_Source\PSoC5/CapSense.c ****             } 
1277:Generated_Source\PSoC5/CapSense.c ****             else
1278:Generated_Source\PSoC5/CapSense.c ****             {
1279:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1280:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1281:Generated_Source\PSoC5/CapSense.c ****             }
1282:Generated_Source\PSoC5/CapSense.c ****             
1283:Generated_Source\PSoC5/CapSense.c ****         #else
1284:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1285:Generated_Source\PSoC5/CapSense.c ****             {
1286:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
1287:Generated_Source\PSoC5/CapSense.c ****             } 
1288:Generated_Source\PSoC5/CapSense.c ****             else
1289:Generated_Source\PSoC5/CapSense.c ****             {
1290:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1291:Generated_Source\PSoC5/CapSense.c ****             }
1292:Generated_Source\PSoC5/CapSense.c ****             
1293:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1294:Generated_Source\PSoC5/CapSense.c ****         
1295:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1296:Generated_Source\PSoC5/CapSense.c **** }
1297:Generated_Source\PSoC5/CapSense.c **** 
1298:Generated_Source\PSoC5/CapSense.c **** 
1299:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1300:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 28


1301:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1302:Generated_Source\PSoC5/CapSense.c **** *
1303:Generated_Source\PSoC5/CapSense.c **** * Summary:
1304:Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1305:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1306:Generated_Source\PSoC5/CapSense.c **** *
1307:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1308:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1309:Generated_Source\PSoC5/CapSense.c **** *
1310:Generated_Source\PSoC5/CapSense.c **** * Return:
1311:Generated_Source\PSoC5/CapSense.c **** *  None
1312:Generated_Source\PSoC5/CapSense.c **** *
1313:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1314:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1315:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1316:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1317:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1318:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1319:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1320:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1321:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1322:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1323:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1324:Generated_Source\PSoC5/CapSense.c **** *
1325:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1326:Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1327:Generated_Source\PSoC5/CapSense.c **** {
 240              		.loc 1 1327 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              	.LVL16:
 245 0000 08B5     		push	{r3, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 3, -8
 248              		.cfi_offset 14, -4
 249              	.LVL17:
1328:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
1329:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
1330:Generated_Source\PSoC5/CapSense.c ****     
1331:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1332:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1333:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1334:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1335:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1336:Generated_Source\PSoC5/CapSense.c ****             */
1337:Generated_Source\PSoC5/CapSense.c ****     
1338:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1339:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1340:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1341:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1342:Generated_Source\PSoC5/CapSense.c ****         #else
1343:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
 250              		.loc 1 1343 0
 251 0002 FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
 252              	.LVL18:
1344:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 29


1345:Generated_Source\PSoC5/CapSense.c ****                 
1346:Generated_Source\PSoC5/CapSense.c ****     #else
1347:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1348:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1349:Generated_Source\PSoC5/CapSense.c ****             {
1350:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1351:Generated_Source\PSoC5/CapSense.c ****             } 
1352:Generated_Source\PSoC5/CapSense.c ****             else
1353:Generated_Source\PSoC5/CapSense.c ****             {
1354:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1355:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1356:Generated_Source\PSoC5/CapSense.c ****             }
1357:Generated_Source\PSoC5/CapSense.c ****             
1358:Generated_Source\PSoC5/CapSense.c ****         #else
1359:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1360:Generated_Source\PSoC5/CapSense.c ****             {
1361:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
1362:Generated_Source\PSoC5/CapSense.c ****             } 
1363:Generated_Source\PSoC5/CapSense.c ****             else
1364:Generated_Source\PSoC5/CapSense.c ****             {
1365:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1366:Generated_Source\PSoC5/CapSense.c ****             }
1367:Generated_Source\PSoC5/CapSense.c ****             
1368:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1369:Generated_Source\PSoC5/CapSense.c ****         
1370:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1371:Generated_Source\PSoC5/CapSense.c ****     
1372:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1373:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
1374:Generated_Source\PSoC5/CapSense.c **** 	{
1375:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
1376:Generated_Source\PSoC5/CapSense.c **** 	}
1377:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= (uint8)~mask;
 253              		.loc 1 1377 0
 254 0006 044A     		ldr	r2, .L22
 255 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 256 000a 23F00103 		bic	r3, r3, #1
 257 000e 1370     		strb	r3, [r2]
1378:Generated_Source\PSoC5/CapSense.c ****     
1379:Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
1380:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
1381:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
 258              		.loc 1 1381 0
 259 0010 0822     		movs	r2, #8
 260 0012 024B     		ldr	r3, .L22+4
 261 0014 1A70     		strb	r2, [r3]
 262 0016 08BD     		pop	{r3, pc}
 263              	.L23:
 264              		.align	2
 265              	.L22:
 266 0018 06520040 		.word	1073762822
 267 001c 00500040 		.word	1073762304
 268              		.cfi_endproc
 269              	.LFE12:
 270              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 271              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 272              		.align	2
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 30


 273              		.global	CapSense_ClearSensors
 274              		.thumb
 275              		.thumb_func
 276              		.type	CapSense_ClearSensors, %function
 277              	CapSense_ClearSensors:
 278              	.LFB10:
1092:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
 279              		.loc 1 1092 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283 0000 10B5     		push	{r4, lr}
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 4, -8
 286              		.cfi_offset 14, -4
 287              	.LVL19:
1095:Generated_Source\PSoC5/CapSense.c ****     {
 288              		.loc 1 1095 0
 289 0002 0024     		movs	r4, #0
 290 0004 04E0     		b	.L25
 291              	.LVL20:
 292              	.L26:
1097:Generated_Source\PSoC5/CapSense.c ****     }
 293              		.loc 1 1097 0 discriminator 3
 294 0006 2046     		mov	r0, r4
 295 0008 FFF7FEFF 		bl	CapSense_DisableSensor
 296              	.LVL21:
1095:Generated_Source\PSoC5/CapSense.c ****     {
 297              		.loc 1 1095 0 discriminator 3
 298 000c 0134     		adds	r4, r4, #1
 299              	.LVL22:
 300 000e E4B2     		uxtb	r4, r4
 301              	.LVL23:
 302              	.L25:
1095:Generated_Source\PSoC5/CapSense.c ****     {
 303              		.loc 1 1095 0 is_stmt 0 discriminator 1
 304 0010 002C     		cmp	r4, #0
 305 0012 F8D0     		beq	.L26
1099:Generated_Source\PSoC5/CapSense.c **** 
 306              		.loc 1 1099 0 is_stmt 1
 307 0014 10BD     		pop	{r4, pc}
 308              		.cfi_endproc
 309              	.LFE10:
 310              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 311 0016 00BF     		.section	.text.CapSense_Stop,"ax",%progbits
 312              		.align	2
 313              		.global	CapSense_Stop
 314              		.thumb
 315              		.thumb_func
 316              		.type	CapSense_Stop, %function
 317              	CapSense_Stop:
 318              	.LFB3:
 512:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 319              		.loc 1 512 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 31


 323 0000 10B5     		push	{r4, lr}
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 4, -8
 326              		.cfi_offset 14, -4
 514:Generated_Source\PSoC5/CapSense.c ****     
 327              		.loc 1 514 0
 328 0002 154C     		ldr	r4, .L30
 329 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 330 0006 03F0FD03 		and	r3, r3, #253
 331 000a 2370     		strb	r3, [r4]
 517:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 332              		.loc 1 517 0
 333 000c 0122     		movs	r2, #1
 334 000e 134B     		ldr	r3, .L30+4
 335 0010 1A60     		str	r2, [r3]
 523:Generated_Source\PSoC5/CapSense.c ****     
 336              		.loc 1 523 0
 337 0012 FFF7FEFF 		bl	CapSense_ClearSensors
 338              	.LVL24:
 537:Generated_Source\PSoC5/CapSense.c ****     
 339              		.loc 1 537 0
 340 0016 124A     		ldr	r2, .L30+8
 341 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 342 001a 03F0DF03 		and	r3, r3, #223
 343 001e 1370     		strb	r3, [r2]
 576:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 344              		.loc 1 576 0
 345 0020 FFF7FEFF 		bl	CapSense_IntClock_Stop
 346              	.LVL25:
 580:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 347              		.loc 1 580 0
 348 0024 FFF7FEFF 		bl	CapSense_CompCH0_Stop
 349              	.LVL26:
 582:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 350              		.loc 1 582 0
 351 0028 FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 352              	.LVL27:
 604:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 353              		.loc 1 604 0
 354 002c 0D4A     		ldr	r2, .L30+12
 355 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 356 0030 03F0FE03 		and	r3, r3, #254
 357 0034 1370     		strb	r3, [r2]
 605:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 358              		.loc 1 605 0
 359 0036 A2F5A652 		sub	r2, r2, #5312
 360 003a 053A     		subs	r2, r2, #5
 361 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 362 003e 03F0EF03 		and	r3, r3, #239
 363 0042 1370     		strb	r3, [r2]
 606:Generated_Source\PSoC5/CapSense.c ****         
 364              		.loc 1 606 0
 365 0044 1032     		adds	r2, r2, #16
 366 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 367 0048 03F0EF03 		and	r3, r3, #239
 368 004c 1370     		strb	r3, [r2]
 616:Generated_Source\PSoC5/CapSense.c **** }
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 32


 369              		.loc 1 616 0
 370 004e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 371 0050 03F07F03 		and	r3, r3, #127
 372 0054 2370     		strb	r3, [r4]
 373 0056 10BD     		pop	{r4, pc}
 374              	.L31:
 375              		.align	2
 376              	.L30:
 377 0058 79640040 		.word	1073767545
 378 005c 80E100E0 		.word	-536813184
 379 0060 9A640040 		.word	1073767578
 380 0064 70580040 		.word	1073764464
 381              		.cfi_endproc
 382              	.LFE3:
 383              		.size	CapSense_Stop, .-CapSense_Stop
 384              		.section	.text.CapSense_PostScan,"ax",%progbits
 385              		.align	2
 386              		.global	CapSense_PostScan
 387              		.thumb
 388              		.thumb_func
 389              		.type	CapSense_PostScan, %function
 390              	CapSense_PostScan:
 391              	.LFB14:
1382:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1383:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
1384:Generated_Source\PSoC5/CapSense.c ****     #else
1385:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1386:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1387:Generated_Source\PSoC5/CapSense.c **** }
1388:Generated_Source\PSoC5/CapSense.c **** 
1389:Generated_Source\PSoC5/CapSense.c **** 
1390:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1391:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1392:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1393:Generated_Source\PSoC5/CapSense.c **** *
1394:Generated_Source\PSoC5/CapSense.c **** * Summary:
1395:Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1396:Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
1397:Generated_Source\PSoC5/CapSense.c **** *
1398:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1399:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1400:Generated_Source\PSoC5/CapSense.c **** *
1401:Generated_Source\PSoC5/CapSense.c **** * Return:
1402:Generated_Source\PSoC5/CapSense.c **** *  None
1403:Generated_Source\PSoC5/CapSense.c **** *
1404:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1405:Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
1406:Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1407:Generated_Source\PSoC5/CapSense.c **** *  resistor.
1408:Generated_Source\PSoC5/CapSense.c **** *
1409:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1410:Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1411:Generated_Source\PSoC5/CapSense.c **** {
1412:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
1413:Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
1414:Generated_Source\PSoC5/CapSense.c ****     
1415:Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 33


1416:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1417:Generated_Source\PSoC5/CapSense.c **** 
1418:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1419:Generated_Source\PSoC5/CapSense.c ****     
1420:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_DISABLE_INT_CALLBACK
1421:Generated_Source\PSoC5/CapSense.c ****     CapSense_PreScan_DisableInt_Callback();
1422:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_DISABLE_INT_CALLBACK */
1423:Generated_Source\PSoC5/CapSense.c **** 
1424:Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1425:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
1426:Generated_Source\PSoC5/CapSense.c ****         
1427:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1428:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1429:Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
1430:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1431:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1432:Generated_Source\PSoC5/CapSense.c ****             #else
1433:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1434:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1435:Generated_Source\PSoC5/CapSense.c **** 
1436:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1437:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1438:Generated_Source\PSoC5/CapSense.c ****             
1439:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1440:Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1441:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1442:Generated_Source\PSoC5/CapSense.c ****             
1443:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1444:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1445:Generated_Source\PSoC5/CapSense.c ****                 
1446:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1447:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSBUF_ENABLE;
1448:Generated_Source\PSoC5/CapSense.c ****             
1449:Generated_Source\PSoC5/CapSense.c ****         #else
1450:Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1451:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1452:Generated_Source\PSoC5/CapSense.c ****             
1453:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1454:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1455:Generated_Source\PSoC5/CapSense.c ****              
1456:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1457:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1458:Generated_Source\PSoC5/CapSense.c ****         
1459:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1460:Generated_Source\PSoC5/CapSense.c ****         
1461:Generated_Source\PSoC5/CapSense.c ****     #else
1462:Generated_Source\PSoC5/CapSense.c **** 
1463:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
1464:Generated_Source\PSoC5/CapSense.c ****         {
1465:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1466:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1467:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1468:Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1469:Generated_Source\PSoC5/CapSense.c ****                 #else
1470:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1471:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1472:Generated_Source\PSoC5/CapSense.c ****                 
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 34


1473:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1474:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1475:Generated_Source\PSoC5/CapSense.c ****                 
1476:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1477:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1478:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1479:Generated_Source\PSoC5/CapSense.c ****                 
1480:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1481:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1482:Generated_Source\PSoC5/CapSense.c ****                     
1483:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1484:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1485:Generated_Source\PSoC5/CapSense.c ****                 
1486:Generated_Source\PSoC5/CapSense.c ****             #else
1487:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1488:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1489:Generated_Source\PSoC5/CapSense.c ****                 
1490:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1491:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1492:Generated_Source\PSoC5/CapSense.c ****                     
1493:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1494:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1495:Generated_Source\PSoC5/CapSense.c ****             
1496:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1497:Generated_Source\PSoC5/CapSense.c ****             
1498:Generated_Source\PSoC5/CapSense.c ****         }
1499:Generated_Source\PSoC5/CapSense.c ****         
1500:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
1501:Generated_Source\PSoC5/CapSense.c ****         {
1502:Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
1503:Generated_Source\PSoC5/CapSense.c ****             
1504:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1505:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1506:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1507:Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1508:Generated_Source\PSoC5/CapSense.c ****                 #else 
1509:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1510:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1511:Generated_Source\PSoC5/CapSense.c ****                 
1512:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1513:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1514:Generated_Source\PSoC5/CapSense.c ****                 
1515:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1516:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1517:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
1518:Generated_Source\PSoC5/CapSense.c ****                 
1519:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1520:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1521:Generated_Source\PSoC5/CapSense.c ****                     
1522:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1523:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1524:Generated_Source\PSoC5/CapSense.c ****                 
1525:Generated_Source\PSoC5/CapSense.c ****             #else
1526:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1527:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh1Cur] |= CapSense_BYP_MASK;
1528:Generated_Source\PSoC5/CapSense.c ****                 
1529:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 35


1530:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1531:Generated_Source\PSoC5/CapSense.c ****                 
1532:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1533:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1534:Generated_Source\PSoC5/CapSense.c ****             
1535:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1536:Generated_Source\PSoC5/CapSense.c ****         }
1537:Generated_Source\PSoC5/CapSense.c ****     
1538:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1539:Generated_Source\PSoC5/CapSense.c ****     
1540:Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1541:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
1542:Generated_Source\PSoC5/CapSense.c ****     
1543:Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1544:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1545:Generated_Source\PSoC5/CapSense.c **** 
1546:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1547:Generated_Source\PSoC5/CapSense.c **** 
1548:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_ENABLE_INT_CALLBACK
1549:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan_EnableInt_Callback();
1550:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_ENABLE_INT_CALLBACK */
1551:Generated_Source\PSoC5/CapSense.c **** }
1552:Generated_Source\PSoC5/CapSense.c **** 
1553:Generated_Source\PSoC5/CapSense.c **** 
1554:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1555:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1556:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1557:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1558:Generated_Source\PSoC5/CapSense.c ****     *
1559:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1560:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1561:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1562:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1563:Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1564:Generated_Source\PSoC5/CapSense.c ****     *
1565:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1566:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1567:Generated_Source\PSoC5/CapSense.c ****     *
1568:Generated_Source\PSoC5/CapSense.c ****     * Return:
1569:Generated_Source\PSoC5/CapSense.c ****     *  None
1570:Generated_Source\PSoC5/CapSense.c ****     *
1571:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1572:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1573:Generated_Source\PSoC5/CapSense.c ****     *
1574:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1575:Generated_Source\PSoC5/CapSense.c ****     *  No
1576:Generated_Source\PSoC5/CapSense.c ****     *
1577:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1578:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1579:Generated_Source\PSoC5/CapSense.c ****     {
 392              		.loc 1 1579 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              	.LVL28:
 397 0000 10B5     		push	{r4, lr}
 398              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 36


 399              		.cfi_offset 4, -8
 400              		.cfi_offset 14, -4
1580:Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1581:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= (uint8)~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 401              		.loc 1 1581 0
 402 0002 0E4A     		ldr	r2, .L34
 403 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 404 0006 03F0FC03 		and	r3, r3, #252
 405 000a 1370     		strb	r3, [r2]
1582:Generated_Source\PSoC5/CapSense.c ****         
1583:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1584:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1585:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1586:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1587:Generated_Source\PSoC5/CapSense.c ****         #else
1588:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 406              		.loc 1 1588 0
 407 000c 0C4B     		ldr	r3, .L34+4
 408 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 409 0010 1B02     		lsls	r3, r3, #8
 410 0012 0C49     		ldr	r1, .L34+8
 411 0014 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1589:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 412              		.loc 1 1589 0
 413 0018 6C3A     		subs	r2, r2, #108
 414 001a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 415 001c 1343     		orrs	r3, r3, r2
1590:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 416              		.loc 1 1590 0
 417 001e DB43     		mvns	r3, r3
 418 0020 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1591:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1592:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1593:Generated_Source\PSoC5/CapSense.c ****         
1594:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1595:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 419              		.loc 1 1595 0
 420 0024 FFF7FEFF 		bl	CapSense_DisableSensor
 421              	.LVL29:
1596:Generated_Source\PSoC5/CapSense.c ****         
1597:Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1598:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1599:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 422              		.loc 1 1599 0
 423 0028 0020     		movs	r0, #0
 424 002a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 425              	.LVL30:
1600:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1601:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1602:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1603:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1604:Generated_Source\PSoC5/CapSense.c ****         #else
1605:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1606:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1607:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1608:Generated_Source\PSoC5/CapSense.c ****             
1609:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 37


1610:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1611:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1612:Generated_Source\PSoC5/CapSense.c ****         #else
1613:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 426              		.loc 1 1613 0
 427 002e 064A     		ldr	r2, .L34+12
 428 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 429 0032 43F00103 		orr	r3, r3, #1
 430 0036 1370     		strb	r3, [r2]
 431 0038 10BD     		pop	{r4, pc}
 432              	.L35:
 433 003a 00BF     		.align	2
 434              	.L34:
 435 003c 79640040 		.word	1073767545
 436 0040 1D640040 		.word	1073767453
 437 0044 00000000 		.word	CapSense_sensorRaw
 438 0048 70580040 		.word	1073764464
 439              		.cfi_endproc
 440              	.LFE14:
 441              		.size	CapSense_PostScan, .-CapSense_PostScan
 442              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
 443              		.align	2
 444              		.global	CapSense_SetPrescaler
 445              		.thumb
 446              		.thumb_func
 447              		.type	CapSense_SetPrescaler, %function
 448              	CapSense_SetPrescaler:
 449              	.LFB15:
1614:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1615:Generated_Source\PSoC5/CapSense.c ****     }
1616:Generated_Source\PSoC5/CapSense.c ****     
1617:Generated_Source\PSoC5/CapSense.c **** #else
1618:Generated_Source\PSoC5/CapSense.c **** 
1619:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1620:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1621:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1622:Generated_Source\PSoC5/CapSense.c ****     *
1623:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1624:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1625:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1626:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1627:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
1628:Generated_Source\PSoC5/CapSense.c ****     *
1629:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1630:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1631:Generated_Source\PSoC5/CapSense.c ****     *
1632:Generated_Source\PSoC5/CapSense.c ****     * Return:
1633:Generated_Source\PSoC5/CapSense.c ****     *  None
1634:Generated_Source\PSoC5/CapSense.c ****     *
1635:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1636:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1637:Generated_Source\PSoC5/CapSense.c ****     *
1638:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1639:Generated_Source\PSoC5/CapSense.c ****     *  No
1640:Generated_Source\PSoC5/CapSense.c ****     *
1641:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1642:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 38


1643:Generated_Source\PSoC5/CapSense.c ****     {
1644:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1645:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
1646:Generated_Source\PSoC5/CapSense.c ****         {
1647:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1648:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1649:Generated_Source\PSoC5/CapSense.c ****         }
1650:Generated_Source\PSoC5/CapSense.c ****         
1651:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1652:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1653:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1654:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1655:Generated_Source\PSoC5/CapSense.c ****         #else
1656:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1657:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1658:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1659:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1660:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1661:Generated_Source\PSoC5/CapSense.c ****         
1662:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1663:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1664:Generated_Source\PSoC5/CapSense.c ****         
1665:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1666:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1667:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1668:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1669:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1670:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1671:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1672:Generated_Source\PSoC5/CapSense.c ****         #else
1673:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1674:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1675:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1676:Generated_Source\PSoC5/CapSense.c ****         
1677:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1678:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1679:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1680:Generated_Source\PSoC5/CapSense.c ****         #else
1681:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1682:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1683:Generated_Source\PSoC5/CapSense.c ****     }
1684:Generated_Source\PSoC5/CapSense.c ****     
1685:Generated_Source\PSoC5/CapSense.c ****     
1686:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1687:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1688:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1689:Generated_Source\PSoC5/CapSense.c ****     *
1690:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1691:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1692:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1693:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1694:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1695:Generated_Source\PSoC5/CapSense.c ****     *
1696:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1697:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1698:Generated_Source\PSoC5/CapSense.c ****     *
1699:Generated_Source\PSoC5/CapSense.c ****     * Return:
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 39


1700:Generated_Source\PSoC5/CapSense.c ****     *  None
1701:Generated_Source\PSoC5/CapSense.c ****     *
1702:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1703:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1704:Generated_Source\PSoC5/CapSense.c ****     *
1705:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1706:Generated_Source\PSoC5/CapSense.c ****     *  No
1707:Generated_Source\PSoC5/CapSense.c ****     *
1708:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1709:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1710:Generated_Source\PSoC5/CapSense.c ****     {
1711:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1712:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
1713:Generated_Source\PSoC5/CapSense.c ****         {
1714:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1715:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1716:Generated_Source\PSoC5/CapSense.c ****         }
1717:Generated_Source\PSoC5/CapSense.c ****         
1718:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1719:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
1720:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1721:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1722:Generated_Source\PSoC5/CapSense.c ****         #else
1723:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
1724:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
1725:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1726:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1727:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1728:Generated_Source\PSoC5/CapSense.c ****         
1729:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1730:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1731:Generated_Source\PSoC5/CapSense.c ****         
1732:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1733:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1734:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
1735:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1736:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1737:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1738:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1739:Generated_Source\PSoC5/CapSense.c ****         #else
1740:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1741:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh1Cur] &= ~CapSense_BYP_MASK; 
1742:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1743:Generated_Source\PSoC5/CapSense.c **** 
1744:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1745:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1746:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
1747:Generated_Source\PSoC5/CapSense.c ****         #else
1748:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1749:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1750:Generated_Source\PSoC5/CapSense.c ****     }
1751:Generated_Source\PSoC5/CapSense.c ****     
1752:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1753:Generated_Source\PSoC5/CapSense.c **** 
1754:Generated_Source\PSoC5/CapSense.c **** 
1755:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1756:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 40


1757:Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1758:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1759:Generated_Source\PSoC5/CapSense.c ****     *
1760:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1761:Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1762:Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1763:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1764:Generated_Source\PSoC5/CapSense.c ****     *
1765:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1766:Generated_Source\PSoC5/CapSense.c ****     *  None
1767:Generated_Source\PSoC5/CapSense.c ****     *
1768:Generated_Source\PSoC5/CapSense.c ****     * Return:
1769:Generated_Source\PSoC5/CapSense.c ****     *  None
1770:Generated_Source\PSoC5/CapSense.c ****     *
1771:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1772:Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1773:Generated_Source\PSoC5/CapSense.c ****     {
1774:Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1775:Generated_Source\PSoC5/CapSense.c ****         
1776:Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
1777:Generated_Source\PSoC5/CapSense.c ****         for(i = 0u; i < CapSense_TOTAL_RB_NUMBER; i++)
1778:Generated_Source\PSoC5/CapSense.c ****         {
1779:Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
1780:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1781:Generated_Source\PSoC5/CapSense.c ****         }
1782:Generated_Source\PSoC5/CapSense.c ****     }
1783:Generated_Source\PSoC5/CapSense.c ****     
1784:Generated_Source\PSoC5/CapSense.c ****     
1785:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1786:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
1787:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1788:Generated_Source\PSoC5/CapSense.c ****     *
1789:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1790:Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1791:Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1792:Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1793:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1794:Generated_Source\PSoC5/CapSense.c ****     * 
1795:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1796:Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1797:Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1798:Generated_Source\PSoC5/CapSense.c ****     *
1799:Generated_Source\PSoC5/CapSense.c ****     * Return:
1800:Generated_Source\PSoC5/CapSense.c ****     *  None
1801:Generated_Source\PSoC5/CapSense.c ****     *
1802:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1803:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh0Cur - used to store current number of active 
1804:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1805:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh1Cur - used to store current number of active 
1806:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1807:Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1808:Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1809:Generated_Source\PSoC5/CapSense.c ****     *
1810:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1811:Generated_Source\PSoC5/CapSense.c ****     *  No
1812:Generated_Source\PSoC5/CapSense.c ****     *
1813:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 41


1814:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1815:Generated_Source\PSoC5/CapSense.c ****     {
1816:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1817:Generated_Source\PSoC5/CapSense.c ****             CapSense_extRbCh0Cur = rbleed;
1818:Generated_Source\PSoC5/CapSense.c ****             
1819:Generated_Source\PSoC5/CapSense.c ****         #else
1820:Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
1821:Generated_Source\PSoC5/CapSense.c ****             {
1822:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh0Cur = rbleed;
1823:Generated_Source\PSoC5/CapSense.c ****             }
1824:Generated_Source\PSoC5/CapSense.c ****             else
1825:Generated_Source\PSoC5/CapSense.c ****             {
1826:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh1Cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1827:Generated_Source\PSoC5/CapSense.c ****             }
1828:Generated_Source\PSoC5/CapSense.c ****     
1829:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1830:Generated_Source\PSoC5/CapSense.c ****     }
1831:Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1832:Generated_Source\PSoC5/CapSense.c **** 
1833:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
1834:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1835:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1836:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1837:Generated_Source\PSoC5/CapSense.c ****     *
1838:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1839:Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1840:Generated_Source\PSoC5/CapSense.c ****     *
1841:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1842:Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1843:Generated_Source\PSoC5/CapSense.c ****     *
1844:Generated_Source\PSoC5/CapSense.c ****     * Return:
1845:Generated_Source\PSoC5/CapSense.c ****     *  None
1846:Generated_Source\PSoC5/CapSense.c ****     *
1847:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1848:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1849:Generated_Source\PSoC5/CapSense.c ****     {
 450              		.loc 1 1849 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455              	.LVL31:
1850:Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1851:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1852:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
 456              		.loc 1 1852 0
 457 0000 024B     		ldr	r3, .L37
 458 0002 1870     		strb	r0, [r3]
1853:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 459              		.loc 1 1853 0
 460 0004 4008     		lsrs	r0, r0, #1
 461              	.LVL32:
 462 0006 1033     		adds	r3, r3, #16
 463              	.LVL33:
 464 0008 1870     		strb	r0, [r3]
 465              	.LVL34:
 466 000a 7047     		bx	lr
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 42


 467              	.L38:
 468              		.align	2
 469              	.L37:
 470 000c 28640040 		.word	1073767464
 471              		.cfi_endproc
 472              	.LFE15:
 473              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
 474              		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 475              		.align	2
 476              		.global	CapSense_SetScanSlotSettings
 477              		.thumb
 478              		.thumb_func
 479              		.type	CapSense_SetScanSlotSettings, %function
 480              	CapSense_SetScanSlotSettings:
 481              	.LFB5:
 804:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 482              		.loc 1 804 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              	.LVL35:
 487 0000 38B5     		push	{r3, r4, r5, lr}
 488              		.cfi_def_cfa_offset 16
 489              		.cfi_offset 3, -16
 490              		.cfi_offset 4, -12
 491              		.cfi_offset 5, -8
 492              		.cfi_offset 14, -4
 493 0002 0446     		mov	r4, r0
 494              	.LVL36:
 813:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 495              		.loc 1 813 0
 496 0004 064D     		ldr	r5, .L41
 497 0006 2B18     		adds	r3, r5, r0
 498 0008 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 499              	.LVL37:
 500 000a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 501              	.LVL38:
 821:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 502              		.loc 1 821 0
 503 000e 2A7A     		ldrb	r2, [r5, #8]	@ zero_extendqisi2
 504 0010 044B     		ldr	r3, .L41+4
 505 0012 1A70     		strb	r2, [r3]
 826:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 506              		.loc 1 826 0
 507 0014 044B     		ldr	r3, .L41+8
 508 0016 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 509 0018 FFF7FEFF 		bl	CapSense_SetPrescaler
 510              	.LVL39:
 511 001c 38BD     		pop	{r3, r4, r5, pc}
 512              	.L42:
 513 001e 00BF     		.align	2
 514              	.L41:
 515 0020 00000000 		.word	.LANCHOR0
 516 0024 5C640040 		.word	1073767516
 517 0028 00000000 		.word	CapSense_analogSwitchDivider
 518              		.cfi_endproc
 519              	.LFE5:
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 43


 520              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
 521              		.section	.text.CapSense_PreScan,"ax",%progbits
 522              		.align	2
 523              		.global	CapSense_PreScan
 524              		.thumb
 525              		.thumb_func
 526              		.type	CapSense_PreScan, %function
 527              	CapSense_PreScan:
 528              	.LFB13:
1411:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
 529              		.loc 1 1411 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              	.LVL40:
 534 0000 38B5     		push	{r3, r4, r5, lr}
 535              		.cfi_def_cfa_offset 16
 536              		.cfi_offset 3, -16
 537              		.cfi_offset 4, -12
 538              		.cfi_offset 5, -8
 539              		.cfi_offset 14, -4
 540 0002 0546     		mov	r5, r0
1413:Generated_Source\PSoC5/CapSense.c ****     
 541              		.loc 1 1413 0
 542 0004 FFF7FEFF 		bl	CapSense_SetScanSlotSettings
 543              	.LVL41:
1425:Generated_Source\PSoC5/CapSense.c ****         
 544              		.loc 1 1425 0
 545 0008 084C     		ldr	r4, .L45
 546 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 547 000c 43F00103 		orr	r3, r3, #1
 548 0010 2370     		strb	r3, [r4]
1433:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
 549              		.loc 1 1433 0
 550 0012 074A     		ldr	r2, .L45+4
 551 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 552 0016 03F0FE03 		and	r3, r3, #254
 553 001a 1370     		strb	r3, [r2]
1437:Generated_Source\PSoC5/CapSense.c ****             
 554              		.loc 1 1437 0
 555 001c 2846     		mov	r0, r5
 556 001e FFF7FEFF 		bl	CapSense_EnableSensor
 557              	.LVL42:
1541:Generated_Source\PSoC5/CapSense.c ****     
 558              		.loc 1 1541 0
 559 0022 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 560 0024 43F00203 		orr	r3, r3, #2
 561 0028 2370     		strb	r3, [r4]
 562 002a 38BD     		pop	{r3, r4, r5, pc}
 563              	.L46:
 564              		.align	2
 565              	.L45:
 566 002c 79640040 		.word	1073767545
 567 0030 70580040 		.word	1073764464
 568              		.cfi_endproc
 569              	.LFE13:
 570              		.size	CapSense_PreScan, .-CapSense_PreScan
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 44


 571              		.section	.text.CapSense_ScanSensor,"ax",%progbits
 572              		.align	2
 573              		.global	CapSense_ScanSensor
 574              		.thumb
 575              		.thumb_func
 576              		.type	CapSense_ScanSensor, %function
 577              	CapSense_ScanSensor:
 578              	.LFB6:
 916:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 579              		.loc 1 916 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              	.LVL43:
 584 0000 08B5     		push	{r3, lr}
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 3, -8
 587              		.cfi_offset 14, -4
 918:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 588              		.loc 1 918 0
 589 0002 054B     		ldr	r3, .L49
 590 0004 0022     		movs	r2, #0
 591 0006 1A70     		strb	r2, [r3]
 919:Generated_Source\PSoC5/CapSense.c ****     
 592              		.loc 1 919 0
 593 0008 044A     		ldr	r2, .L49+4
 594 000a 1070     		strb	r0, [r2]
 923:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 595              		.loc 1 923 0
 596 000c 8122     		movs	r2, #129
 597 000e 1A70     		strb	r2, [r3]
 924:Generated_Source\PSoC5/CapSense.c ****         
 598              		.loc 1 924 0
 599 0010 FFF7FEFF 		bl	CapSense_PreScan
 600              	.LVL44:
 601 0014 08BD     		pop	{r3, pc}
 602              	.L50:
 603 0016 00BF     		.align	2
 604              	.L49:
 605 0018 00000000 		.word	CapSense_csv
 606 001c 00000000 		.word	CapSense_sensorIndex
 607              		.cfi_endproc
 608              	.LFE6:
 609              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 610              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 611              		.align	2
 612              		.global	CapSense_ScanEnabledWidgets
 613              		.thumb
 614              		.thumb_func
 615              		.type	CapSense_ScanEnabledWidgets, %function
 616              	CapSense_ScanEnabledWidgets:
 617              	.LFB7:
 993:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 618              		.loc 1 993 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 45


 622 0000 10B5     		push	{r4, lr}
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 4, -8
 625              		.cfi_offset 14, -4
 995:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 626              		.loc 1 995 0
 627 0002 0022     		movs	r2, #0
 628 0004 0A4B     		ldr	r3, .L54
 629 0006 1A70     		strb	r2, [r3]
 996:Generated_Source\PSoC5/CapSense.c ****     
 630              		.loc 1 996 0
 631 0008 0A4C     		ldr	r4, .L54+4
 632 000a FF23     		movs	r3, #255
 633 000c 2370     		strb	r3, [r4]
1000:Generated_Source\PSoC5/CapSense.c **** 
 634              		.loc 1 1000 0
 635 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 636 0010 FFF7FEFF 		bl	CapSense_FindNextSensor
 637              	.LVL45:
 638 0014 2070     		strb	r0, [r4]
1003:Generated_Source\PSoC5/CapSense.c ****         {
 639              		.loc 1 1003 0
 640 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 641 0018 13F0FF0F 		tst	r3, #255
 642 001c 07D1     		bne	.L51
1005:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 643              		.loc 1 1005 0
 644 001e 044A     		ldr	r2, .L54
 645 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 646 0022 43F00103 		orr	r3, r3, #1
 647 0026 1370     		strb	r3, [r2]
1006:Generated_Source\PSoC5/CapSense.c ****         }
 648              		.loc 1 1006 0
 649 0028 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 650 002a FFF7FEFF 		bl	CapSense_PreScan
 651              	.LVL46:
 652              	.L51:
 653 002e 10BD     		pop	{r4, pc}
 654              	.L55:
 655              		.align	2
 656              	.L54:
 657 0030 00000000 		.word	CapSense_csv
 658 0034 00000000 		.word	CapSense_sensorIndex
 659              		.cfi_endproc
 660              	.LFE7:
 661              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 662              		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 663              		.align	2
 664              		.global	CapSense_GetPrescaler
 665              		.thumb
 666              		.thumb_func
 667              		.type	CapSense_GetPrescaler, %function
 668              	CapSense_GetPrescaler:
 669              	.LFB16:
1854:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1855:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1856:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 46


1857:Generated_Source\PSoC5/CapSense.c ****         #else
1858:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1859:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1860:Generated_Source\PSoC5/CapSense.c ****     }
1861:Generated_Source\PSoC5/CapSense.c **** 
1862:Generated_Source\PSoC5/CapSense.c **** 
1863:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1864:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1865:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1866:Generated_Source\PSoC5/CapSense.c ****     *
1867:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1868:Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1869:Generated_Source\PSoC5/CapSense.c ****     *
1870:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1871:Generated_Source\PSoC5/CapSense.c ****     *  None
1872:Generated_Source\PSoC5/CapSense.c ****     *
1873:Generated_Source\PSoC5/CapSense.c ****     * Return:
1874:Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
1875:Generated_Source\PSoC5/CapSense.c ****     *
1876:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1877:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
1878:Generated_Source\PSoC5/CapSense.c ****     {
 670              		.loc 1 1878 0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              		@ link register save eliminated.
 675              	.LVL47:
1879:Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
1880:Generated_Source\PSoC5/CapSense.c **** 
1881:Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
1882:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1883:Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
 676              		.loc 1 1883 0
 677 0000 014B     		ldr	r3, .L57
 678 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 679              	.LVL48:
1884:Generated_Source\PSoC5/CapSense.c ****             
1885:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1886:Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
1887:Generated_Source\PSoC5/CapSense.c ****             
1888:Generated_Source\PSoC5/CapSense.c ****         #else
1889:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1890:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1891:Generated_Source\PSoC5/CapSense.c ****         
1892:Generated_Source\PSoC5/CapSense.c ****         return (prescaler);
1893:Generated_Source\PSoC5/CapSense.c ****     }
 680              		.loc 1 1893 0
 681 0004 7047     		bx	lr
 682              	.L58:
 683 0006 00BF     		.align	2
 684              	.L57:
 685 0008 28640040 		.word	1073767464
 686              		.cfi_endproc
 687              	.LFE16:
 688              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 689              		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 47


 690              		.align	2
 691              		.global	CapSense_SetScanSpeed
 692              		.thumb
 693              		.thumb_func
 694              		.type	CapSense_SetScanSpeed, %function
 695              	CapSense_SetScanSpeed:
 696              	.LFB17:
1894:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
1895:Generated_Source\PSoC5/CapSense.c **** 
1896:Generated_Source\PSoC5/CapSense.c **** 
1897:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1898:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
1899:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1900:Generated_Source\PSoC5/CapSense.c **** *
1901:Generated_Source\PSoC5/CapSense.c **** * Summary:
1902:Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
1903:Generated_Source\PSoC5/CapSense.c **** *
1904:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1905:Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
1906:Generated_Source\PSoC5/CapSense.c **** *
1907:Generated_Source\PSoC5/CapSense.c **** * Return:
1908:Generated_Source\PSoC5/CapSense.c **** *  None
1909:Generated_Source\PSoC5/CapSense.c **** *
1910:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1911:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanSpeed) 
1912:Generated_Source\PSoC5/CapSense.c **** {
 697              		.loc 1 1912 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 702              	.LVL49:
1913:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanSpeed; 
 703              		.loc 1 1913 0
 704 0000 014B     		ldr	r3, .L60
 705 0002 1870     		strb	r0, [r3]
 706 0004 7047     		bx	lr
 707              	.L61:
 708 0006 00BF     		.align	2
 709              	.L60:
 710 0008 8A640040 		.word	1073767562
 711              		.cfi_endproc
 712              	.LFE17:
 713              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 714              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 715              		.align	2
 716              		.global	CapSense_SetAnalogSwitchesSource
 717              		.thumb
 718              		.thumb_func
 719              		.type	CapSense_SetAnalogSwitchesSource, %function
 720              	CapSense_SetAnalogSwitchesSource:
 721              	.LFB18:
1914:Generated_Source\PSoC5/CapSense.c **** }
1915:Generated_Source\PSoC5/CapSense.c **** 
1916:Generated_Source\PSoC5/CapSense.c **** 
1917:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
1918:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 48


1919:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
1920:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1921:Generated_Source\PSoC5/CapSense.c ****     *
1922:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1923:Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1924:Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1925:Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
1926:Generated_Source\PSoC5/CapSense.c ****     *
1927:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1928:Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
1929:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1930:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
1931:Generated_Source\PSoC5/CapSense.c ****     *
1932:Generated_Source\PSoC5/CapSense.c ****     * Return:
1933:Generated_Source\PSoC5/CapSense.c ****     *  None
1934:Generated_Source\PSoC5/CapSense.c ****     *
1935:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1936:Generated_Source\PSoC5/CapSense.c ****     *  No
1937:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1938:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
1939:Generated_Source\PSoC5/CapSense.c ****                       
1940:Generated_Source\PSoC5/CapSense.c ****     {
 722              		.loc 1 1940 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726              		@ link register save eliminated.
 727              	.LVL50:
1941:Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
 728              		.loc 1 1941 0
 729 0000 0128     		cmp	r0, #1
 730 0002 05D1     		bne	.L63
1942:Generated_Source\PSoC5/CapSense.c ****         {
1943:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= (uint8)~0x10u;
 731              		.loc 1 1943 0
 732 0004 054A     		ldr	r2, .L65
 733 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 734 0008 03F0EF03 		and	r3, r3, #239
 735 000c 1370     		strb	r3, [r2]
 736 000e 7047     		bx	lr
 737              	.L63:
1944:Generated_Source\PSoC5/CapSense.c ****         }
1945:Generated_Source\PSoC5/CapSense.c ****         else
1946:Generated_Source\PSoC5/CapSense.c ****         {
1947:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
 738              		.loc 1 1947 0
 739 0010 024A     		ldr	r2, .L65
 740 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 741 0014 43F01003 		orr	r3, r3, #16
 742 0018 1370     		strb	r3, [r2]
 743 001a 7047     		bx	lr
 744              	.L66:
 745              		.align	2
 746              	.L65:
 747 001c 79640040 		.word	1073767545
 748              		.cfi_endproc
 749              	.LFE18:
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 49


 750              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
 751              		.section	.text.CapSense_Init,"ax",%progbits
 752              		.align	2
 753              		.global	CapSense_Init
 754              		.thumb
 755              		.thumb_func
 756              		.type	CapSense_Init, %function
 757              	CapSense_Init:
 758              	.LFB0:
  97:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 759              		.loc 1 97 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763 0000 38B5     		push	{r3, r4, r5, lr}
 764              		.cfi_def_cfa_offset 16
 765              		.cfi_offset 3, -16
 766              		.cfi_offset 4, -12
 767              		.cfi_offset 5, -8
 768              		.cfi_offset 14, -4
 111:Generated_Source\PSoC5/CapSense.c **** 
 769              		.loc 1 111 0
 770 0002 FFF7FEFF 		bl	CapSense_ClearSensors
 771              	.LVL51:
 127:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 772              		.loc 1 127 0
 773 0006 0220     		movs	r0, #2
 774 0008 FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 775              	.LVL52:
 143:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 776              		.loc 1 143 0
 777 000c FFF7FEFF 		bl	CyEnterCriticalSection
 778              	.LVL53:
 144:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 779              		.loc 1 144 0
 780 0010 2E4A     		ldr	r2, .L69
 781 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 782 0014 43F00303 		orr	r3, r3, #3
 783 0018 1370     		strb	r3, [r2]
 145:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 784              		.loc 1 145 0
 785 001a 0132     		adds	r2, r2, #1
 786 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 787 001e 43F00303 		orr	r3, r3, #3
 788 0022 1370     		strb	r3, [r2]
 146:Generated_Source\PSoC5/CapSense.c ****         
 789              		.loc 1 146 0
 790 0024 FFF7FEFF 		bl	CyExitCriticalSection
 791              	.LVL54:
 149:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 792              		.loc 1 149 0
 793 0028 4FF43442 		mov	r2, #46080
 794 002c 284B     		ldr	r3, .L69+4
 795 002e 1A80     		strh	r2, [r3]	@ movhi
 151:Generated_Source\PSoC5/CapSense.c ****                 
 796              		.loc 1 151 0
 797 0030 4FF6FF74 		movw	r4, #65535
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 50


 798 0034 2033     		adds	r3, r3, #32
 799 0036 1C80     		strh	r4, [r3]	@ movhi
 171:Generated_Source\PSoC5/CapSense.c ****     
 800              		.loc 1 171 0
 801 0038 0725     		movs	r5, #7
 802 003a 4033     		adds	r3, r3, #64
 803 003c 1D70     		strb	r5, [r3]
 187:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 804              		.loc 1 187 0
 805 003e FFF7FEFF 		bl	CyEnterCriticalSection
 806              	.LVL55:
 188:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 807              		.loc 1 188 0
 808 0042 244A     		ldr	r2, .L69+8
 809 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 810 0046 43F00303 		orr	r3, r3, #3
 811 004a 1370     		strb	r3, [r2]
 189:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 812              		.loc 1 189 0
 813 004c 0132     		adds	r2, r2, #1
 814 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 815 0050 43F00303 		orr	r3, r3, #3
 816 0054 1370     		strb	r3, [r2]
 190:Generated_Source\PSoC5/CapSense.c ****         
 817              		.loc 1 190 0
 818 0056 FFF7FEFF 		bl	CyExitCriticalSection
 819              	.LVL56:
 193:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 820              		.loc 1 193 0
 821 005a FF23     		movs	r3, #255
 822 005c 1E4A     		ldr	r2, .L69+12
 823 005e 1470     		strb	r4, [r2]
 194:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 824              		.loc 1 194 0
 825 0060 2032     		adds	r2, r2, #32
 826 0062 1370     		strb	r3, [r2]
 195:Generated_Source\PSoC5/CapSense.c ****         
 827              		.loc 1 195 0
 828 0064 403A     		subs	r2, r2, #64
 829 0066 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 830              		.loc 1 198 0
 831 0068 2132     		adds	r2, r2, #33
 832 006a 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 833              		.loc 1 199 0
 834 006c 3032     		adds	r2, r2, #48
 835 006e 1370     		strb	r3, [r2]
 200:Generated_Source\PSoC5/CapSense.c ****         
 836              		.loc 1 200 0
 837 0070 103A     		subs	r2, r2, #16
 838 0072 1370     		strb	r3, [r2]
 239:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 839              		.loc 1 239 0
 840 0074 0124     		movs	r4, #1
 841 0076 03F1E023 		add	r3, r3, #-536813568
 842 007a 8133     		adds	r3, r3, #129
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 51


 843 007c 1C60     		str	r4, [r3]
 240:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 844              		.loc 1 240 0
 845 007e 1749     		ldr	r1, .L69+16
 846 0080 0020     		movs	r0, #0
 847 0082 FFF7FEFF 		bl	CyIntSetVector
 848              	.LVL57:
 241:Generated_Source\PSoC5/CapSense.c ****     
 849              		.loc 1 241 0
 850 0086 2946     		mov	r1, r5
 851 0088 0020     		movs	r0, #0
 852 008a FFF7FEFF 		bl	CyIntSetPriority
 853              	.LVL58:
 250:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 854              		.loc 1 250 0
 855 008e FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 856              	.LVL59:
 251:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 857              		.loc 1 251 0
 858 0092 2046     		mov	r0, r4
 859 0094 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 860              	.LVL60:
 252:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 861              		.loc 1 252 0
 862 0098 0220     		movs	r0, #2
 863 009a FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 864              	.LVL61:
 254:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 865              		.loc 1 254 0
 866 009e 0320     		movs	r0, #3
 867 00a0 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 868              	.LVL62:
 272:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 869              		.loc 1 272 0
 870 00a4 0E4A     		ldr	r2, .L69+20
 871 00a6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 872 00a8 43F00403 		orr	r3, r3, #4
 873 00ac 1370     		strb	r3, [r2]
 278:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 874              		.loc 1 278 0
 875 00ae FFF7FEFF 		bl	CapSense_CompCH0_Init
 876              	.LVL63:
 280:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 877              		.loc 1 280 0
 878 00b2 FFF7FEFF 		bl	CapSense_IdacCH0_Init
 879              	.LVL64:
 281:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 880              		.loc 1 281 0
 881 00b6 0020     		movs	r0, #0
 882 00b8 FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 883              	.LVL65:
 282:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 884              		.loc 1 282 0
 885 00bc 0420     		movs	r0, #4
 886 00be FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 887              	.LVL66:
 283:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 52


 888              		.loc 1 283 0
 889 00c2 0020     		movs	r0, #0
 890 00c4 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 891              	.LVL67:
 892 00c8 38BD     		pop	{r3, r4, r5, pc}
 893              	.L70:
 894 00ca 00BF     		.align	2
 895              	.L69:
 896 00cc 9A640040 		.word	1073767578
 897 00d0 2A640040 		.word	1073767466
 898 00d4 9C640040 		.word	1073767580
 899 00d8 2C640040 		.word	1073767468
 900 00dc 00000000 		.word	CapSense_IsrCH0_ISR
 901 00e0 79640040 		.word	1073767545
 902              		.cfi_endproc
 903              	.LFE0:
 904              		.size	CapSense_Init, .-CapSense_Init
 905              		.section	.text.CapSense_Start,"ax",%progbits
 906              		.align	2
 907              		.global	CapSense_Start
 908              		.thumb
 909              		.thumb_func
 910              		.type	CapSense_Start, %function
 911              	CapSense_Start:
 912              	.LFB2:
 475:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 913              		.loc 1 475 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 0
 916              		@ frame_needed = 0, uses_anonymous_args = 0
 917 0000 08B5     		push	{r3, lr}
 918              		.cfi_def_cfa_offset 8
 919              		.cfi_offset 3, -8
 920              		.cfi_offset 14, -4
 476:Generated_Source\PSoC5/CapSense.c ****     {
 921              		.loc 1 476 0
 922 0002 084B     		ldr	r3, .L74
 923 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 924 0006 23B9     		cbnz	r3, .L72
 478:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 925              		.loc 1 478 0
 926 0008 FFF7FEFF 		bl	CapSense_Init
 927              	.LVL68:
 479:Generated_Source\PSoC5/CapSense.c ****     }
 928              		.loc 1 479 0
 929 000c 0122     		movs	r2, #1
 930 000e 054B     		ldr	r3, .L74
 931 0010 1A70     		strb	r2, [r3]
 932              	.L72:
 481:Generated_Source\PSoC5/CapSense.c ****     
 933              		.loc 1 481 0
 934 0012 FFF7FEFF 		bl	CapSense_Enable
 935              	.LVL69:
 486:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 936              		.loc 1 486 0
 937 0016 FFF7FEFF 		bl	CapSense_AutoTune
 938              	.LVL70:
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 53


 487:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 939              		.loc 1 487 0
 940 001a 0122     		movs	r2, #1
 941 001c 024B     		ldr	r3, .L74+4
 942 001e 5A72     		strb	r2, [r3, #9]
 943 0020 08BD     		pop	{r3, pc}
 944              	.L75:
 945 0022 00BF     		.align	2
 946              	.L74:
 947 0024 00000000 		.word	.LANCHOR1
 948 0028 00000000 		.word	.LANCHOR0
 949              		.cfi_endproc
 950              	.LFE2:
 951              		.size	CapSense_Start, .-CapSense_Start
 952              		.global	CapSense_widgetNumber
 953              		.comm	CapSense_analogSwitchDivider,1,4
 954              		.global	CapSense_widgetResolution
 955              		.global	CapSense_idacSettings
 956              		.global	CapSense_csTable
 957              		.global	CapSense_maskTable
 958              		.global	CapSense_portTable
 959              		.global	CapSense_pcTable
 960              		.global	CapSense_sensorEnableMask
 961              		.comm	CapSense_sensorRaw,2,4
 962              		.global	CapSense_lowLevelTuningDone
 963              		.comm	CapSense_sensorIndex,1,1
 964              		.comm	CapSense_csv,1,1
 965              		.section	.rodata
 966              		.align	2
 967              		.type	CapSense_widgetNumber, %object
 968              		.size	CapSense_widgetNumber, 1
 969              	CapSense_widgetNumber:
 970 0000 00       		.space	1
 971 0001 000000   		.space	3
 972              		.type	CapSense_csTable, %object
 973              		.size	CapSense_csTable, 32
 974              	CapSense_csTable:
 975 0004 06520040 		.word	1073762822
 976 0008 0E520040 		.word	1073762830
 977 000c 16520040 		.word	1073762838
 978 0010 1E520040 		.word	1073762846
 979 0014 26520040 		.word	1073762854
 980 0018 2E520040 		.word	1073762862
 981 001c 36520040 		.word	1073762870
 982 0020 7E520040 		.word	1073762942
 983              		.type	CapSense_maskTable, %object
 984              		.size	CapSense_maskTable, 1
 985              	CapSense_maskTable:
 986 0024 01       		.byte	1
 987 0025 000000   		.space	3
 988              		.type	CapSense_portTable, %object
 989              		.size	CapSense_portTable, 1
 990              	CapSense_portTable:
 991 0028 00       		.space	1
 992 0029 000000   		.space	3
 993              		.type	CapSense_pcTable, %object
 994              		.size	CapSense_pcTable, 4
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 54


 995              	CapSense_pcTable:
 996 002c 00500040 		.word	1073762304
 997              		.data
 998              		.align	2
 999              		.set	.LANCHOR0,. + 0
 1000              		.type	CapSense_sensorEnableMask, %object
 1001              		.size	CapSense_sensorEnableMask, 1
 1002              	CapSense_sensorEnableMask:
 1003 0000 01       		.byte	1
 1004 0001 000000   		.space	3
 1005              		.type	CapSense_idacSettings, %object
 1006              		.size	CapSense_idacSettings, 1
 1007              	CapSense_idacSettings:
 1008 0004 C8       		.byte	-56
 1009 0005 000000   		.space	3
 1010              		.type	CapSense_widgetResolution, %object
 1011              		.size	CapSense_widgetResolution, 1
 1012              	CapSense_widgetResolution:
 1013 0008 03       		.byte	3
 1014              		.type	CapSense_lowLevelTuningDone, %object
 1015              		.size	CapSense_lowLevelTuningDone, 1
 1016              	CapSense_lowLevelTuningDone:
 1017 0009 01       		.byte	1
 1018              		.bss
 1019              		.set	.LANCHOR1,. + 0
 1020              		.type	CapSense_initVar, %object
 1021              		.size	CapSense_initVar, 1
 1022              	CapSense_initVar:
 1023 0000 00       		.space	1
 1024              		.text
 1025              	.Letext0:
 1026              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1027              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1028              		.file 4 "Generated_Source\\PSoC5\\CapSense_IntClock.h"
 1029              		.file 5 "Generated_Source\\PSoC5\\CapSense_CompCH0.h"
 1030              		.file 6 "Generated_Source\\PSoC5\\CapSense_IdacCH0.h"
 1031              		.file 7 "Generated_Source\\PSoC5\\cyfitter_cfg.h"
 1032              		.file 8 "Generated_Source\\PSoC5\\CapSense_AMuxCH0.h"
 1033              		.file 9 "Generated_Source\\PSoC5\\CapSense.h"
 1034              		.section	.debug_info,"",%progbits
 1035              	.Ldebug_info0:
 1036 0000 16080000 		.4byte	0x816
 1037 0004 0400     		.2byte	0x4
 1038 0006 00000000 		.4byte	.Ldebug_abbrev0
 1039 000a 04       		.byte	0x4
 1040 000b 01       		.uleb128 0x1
 1041 000c E9040000 		.4byte	.LASF81
 1042 0010 0C       		.byte	0xc
 1043 0011 2A000000 		.4byte	.LASF82
 1044 0015 6E000000 		.4byte	.LASF83
 1045 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1046 001d 00000000 		.4byte	0
 1047 0021 00000000 		.4byte	.Ldebug_line0
 1048 0025 02       		.uleb128 0x2
 1049 0026 01       		.byte	0x1
 1050 0027 06       		.byte	0x6
 1051 0028 71010000 		.4byte	.LASF0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 55


 1052 002c 02       		.uleb128 0x2
 1053 002d 01       		.byte	0x1
 1054 002e 08       		.byte	0x8
 1055 002f 67040000 		.4byte	.LASF1
 1056 0033 02       		.uleb128 0x2
 1057 0034 02       		.byte	0x2
 1058 0035 05       		.byte	0x5
 1059 0036 A5040000 		.4byte	.LASF2
 1060 003a 02       		.uleb128 0x2
 1061 003b 02       		.byte	0x2
 1062 003c 07       		.byte	0x7
 1063 003d 2C030000 		.4byte	.LASF3
 1064 0041 02       		.uleb128 0x2
 1065 0042 04       		.byte	0x4
 1066 0043 05       		.byte	0x5
 1067 0044 9E010000 		.4byte	.LASF4
 1068 0048 02       		.uleb128 0x2
 1069 0049 04       		.byte	0x4
 1070 004a 07       		.byte	0x7
 1071 004b C5020000 		.4byte	.LASF5
 1072 004f 02       		.uleb128 0x2
 1073 0050 08       		.byte	0x8
 1074 0051 05       		.byte	0x5
 1075 0052 63010000 		.4byte	.LASF6
 1076 0056 02       		.uleb128 0x2
 1077 0057 08       		.byte	0x8
 1078 0058 07       		.byte	0x7
 1079 0059 0E010000 		.4byte	.LASF7
 1080 005d 03       		.uleb128 0x3
 1081 005e 04       		.byte	0x4
 1082 005f 05       		.byte	0x5
 1083 0060 696E7400 		.ascii	"int\000"
 1084 0064 02       		.uleb128 0x2
 1085 0065 04       		.byte	0x4
 1086 0066 07       		.byte	0x7
 1087 0067 88020000 		.4byte	.LASF8
 1088 006b 04       		.uleb128 0x4
 1089 006c AD010000 		.4byte	.LASF9
 1090 0070 02       		.byte	0x2
 1091 0071 E401     		.2byte	0x1e4
 1092 0073 2C000000 		.4byte	0x2c
 1093 0077 04       		.uleb128 0x4
 1094 0078 00000000 		.4byte	.LASF10
 1095 007c 02       		.byte	0x2
 1096 007d E501     		.2byte	0x1e5
 1097 007f 3A000000 		.4byte	0x3a
 1098 0083 04       		.uleb128 0x4
 1099 0084 29020000 		.4byte	.LASF11
 1100 0088 02       		.byte	0x2
 1101 0089 E601     		.2byte	0x1e6
 1102 008b 48000000 		.4byte	0x48
 1103 008f 02       		.uleb128 0x2
 1104 0090 04       		.byte	0x4
 1105 0091 04       		.byte	0x4
 1106 0092 3A040000 		.4byte	.LASF12
 1107 0096 02       		.uleb128 0x2
 1108 0097 08       		.byte	0x8
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 56


 1109 0098 04       		.byte	0x4
 1110 0099 C9010000 		.4byte	.LASF13
 1111 009d 02       		.uleb128 0x2
 1112 009e 01       		.byte	0x1
 1113 009f 08       		.byte	0x8
 1114 00a0 77050000 		.4byte	.LASF14
 1115 00a4 04       		.uleb128 0x4
 1116 00a5 4A040000 		.4byte	.LASF15
 1117 00a9 02       		.byte	0x2
 1118 00aa 8E02     		.2byte	0x28e
 1119 00ac B0000000 		.4byte	0xb0
 1120 00b0 05       		.uleb128 0x5
 1121 00b1 6B000000 		.4byte	0x6b
 1122 00b5 04       		.uleb128 0x4
 1123 00b6 A7010000 		.4byte	.LASF16
 1124 00ba 02       		.byte	0x2
 1125 00bb 8F02     		.2byte	0x28f
 1126 00bd C1000000 		.4byte	0xc1
 1127 00c1 05       		.uleb128 0x5
 1128 00c2 77000000 		.4byte	0x77
 1129 00c6 04       		.uleb128 0x4
 1130 00c7 8E030000 		.4byte	.LASF17
 1131 00cb 02       		.byte	0x2
 1132 00cc 9002     		.2byte	0x290
 1133 00ce D2000000 		.4byte	0xd2
 1134 00d2 05       		.uleb128 0x5
 1135 00d3 83000000 		.4byte	0x83
 1136 00d7 02       		.uleb128 0x2
 1137 00d8 08       		.byte	0x8
 1138 00d9 04       		.byte	0x4
 1139 00da CB030000 		.4byte	.LASF18
 1140 00de 02       		.uleb128 0x2
 1141 00df 04       		.byte	0x4
 1142 00e0 07       		.byte	0x7
 1143 00e1 B1030000 		.4byte	.LASF19
 1144 00e5 06       		.uleb128 0x6
 1145 00e6 3D010000 		.4byte	.LASF26
 1146 00ea 01       		.byte	0x1
 1147 00eb 4101     		.2byte	0x141
 1148 00ed 00000000 		.4byte	.LFB1
 1149 00f1 68000000 		.4byte	.LFE1-.LFB1
 1150 00f5 01       		.uleb128 0x1
 1151 00f6 9C       		.byte	0x9c
 1152 00f7 40010000 		.4byte	0x140
 1153 00fb 07       		.uleb128 0x7
 1154 00fc E0050000 		.4byte	.LASF20
 1155 0100 01       		.byte	0x1
 1156 0101 4301     		.2byte	0x143
 1157 0103 6B000000 		.4byte	0x6b
 1158 0107 00000000 		.4byte	.LLST0
 1159 010b 08       		.uleb128 0x8
 1160 010c 06000000 		.4byte	.LVL0
 1161 0110 47070000 		.4byte	0x747
 1162 0114 08       		.uleb128 0x8
 1163 0115 16000000 		.4byte	.LVL2
 1164 0119 52070000 		.4byte	0x752
 1165 011d 08       		.uleb128 0x8
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 57


 1166 011e 1A000000 		.4byte	.LVL3
 1167 0122 5D070000 		.4byte	0x75d
 1168 0126 08       		.uleb128 0x8
 1169 0127 1E000000 		.4byte	.LVL4
 1170 012b 68070000 		.4byte	0x768
 1171 012f 09       		.uleb128 0x9
 1172 0130 46000000 		.4byte	.LVL5
 1173 0134 73070000 		.4byte	0x773
 1174 0138 0A       		.uleb128 0xa
 1175 0139 01       		.uleb128 0x1
 1176 013a 50       		.byte	0x50
 1177 013b 02       		.uleb128 0x2
 1178 013c 74       		.byte	0x74
 1179 013d 00       		.sleb128 0
 1180 013e 00       		.byte	0
 1181 013f 00       		.byte	0
 1182 0140 0B       		.uleb128 0xb
 1183 0141 4F040000 		.4byte	.LASF22
 1184 0145 01       		.byte	0x1
 1185 0146 8902     		.2byte	0x289
 1186 0148 6B000000 		.4byte	0x6b
 1187 014c 00000000 		.4byte	.LFB4
 1188 0150 20000000 		.4byte	.LFE4-.LFB4
 1189 0154 01       		.uleb128 0x1
 1190 0155 9C       		.byte	0x9c
 1191 0156 89010000 		.4byte	0x189
 1192 015a 0C       		.uleb128 0xc
 1193 015b 05010000 		.4byte	.LASF24
 1194 015f 01       		.byte	0x1
 1195 0160 8902     		.2byte	0x289
 1196 0162 6B000000 		.4byte	0x6b
 1197 0166 13000000 		.4byte	.LLST1
 1198 016a 0D       		.uleb128 0xd
 1199 016b 706F7300 		.ascii	"pos\000"
 1200 016f 01       		.byte	0x1
 1201 0170 8B02     		.2byte	0x28b
 1202 0172 6B000000 		.4byte	0x6b
 1203 0176 01       		.uleb128 0x1
 1204 0177 52       		.byte	0x52
 1205 0178 07       		.uleb128 0x7
 1206 0179 EF030000 		.4byte	.LASF21
 1207 017d 01       		.byte	0x1
 1208 017e 8C02     		.2byte	0x28c
 1209 0180 6B000000 		.4byte	0x6b
 1210 0184 3F000000 		.4byte	.LLST2
 1211 0188 00       		.byte	0
 1212 0189 0E       		.uleb128 0xe
 1213 018a 83060000 		.4byte	.LASF84
 1214 018e 01       		.byte	0x1
 1215 018f 1504     		.2byte	0x415
 1216 0191 6B000000 		.4byte	0x6b
 1217 0195 00000000 		.4byte	.LFB8
 1218 0199 10000000 		.4byte	.LFE8-.LFB8
 1219 019d 01       		.uleb128 0x1
 1220 019e 9C       		.byte	0x9c
 1221 019f 0B       		.uleb128 0xb
 1222 01a0 12020000 		.4byte	.LASF23
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 58


 1223 01a4 01       		.byte	0x1
 1224 01a5 2E04     		.2byte	0x42e
 1225 01a7 77000000 		.4byte	0x77
 1226 01ab 00000000 		.4byte	.LFB9
 1227 01af 0C000000 		.4byte	.LFE9-.LFB9
 1228 01b3 01       		.uleb128 0x1
 1229 01b4 9C       		.byte	0x9c
 1230 01b5 CA010000 		.4byte	0x1ca
 1231 01b9 0C       		.uleb128 0xc
 1232 01ba 56030000 		.4byte	.LASF25
 1233 01be 01       		.byte	0x1
 1234 01bf 2E04     		.2byte	0x42e
 1235 01c1 6B000000 		.4byte	0x6b
 1236 01c5 52000000 		.4byte	.LLST3
 1237 01c9 00       		.byte	0
 1238 01ca 06       		.uleb128 0x6
 1239 01cb D0010000 		.4byte	.LASF27
 1240 01cf 01       		.byte	0x1
 1241 01d0 D904     		.2byte	0x4d9
 1242 01d2 00000000 		.4byte	.LFB11
 1243 01d6 20000000 		.4byte	.LFE11-.LFB11
 1244 01da 01       		.uleb128 0x1
 1245 01db 9C       		.byte	0x9c
 1246 01dc 14020000 		.4byte	0x214
 1247 01e0 0C       		.uleb128 0xc
 1248 01e1 56030000 		.4byte	.LASF25
 1249 01e5 01       		.byte	0x1
 1250 01e6 D904     		.2byte	0x4d9
 1251 01e8 6B000000 		.4byte	0x6b
 1252 01ec 73000000 		.4byte	.LLST4
 1253 01f0 0F       		.uleb128 0xf
 1254 01f1 5A020000 		.4byte	.LASF28
 1255 01f5 01       		.byte	0x1
 1256 01f6 DB04     		.2byte	0x4db
 1257 01f8 6B000000 		.4byte	0x6b
 1258 01fc 00       		.byte	0
 1259 01fd 0F       		.uleb128 0xf
 1260 01fe 3F020000 		.4byte	.LASF29
 1261 0202 01       		.byte	0x1
 1262 0203 DC04     		.2byte	0x4dc
 1263 0205 6B000000 		.4byte	0x6b
 1264 0209 01       		.byte	0x1
 1265 020a 08       		.uleb128 0x8
 1266 020b 16000000 		.4byte	.LVL15
 1267 020f 7E070000 		.4byte	0x77e
 1268 0213 00       		.byte	0
 1269 0214 06       		.uleb128 0x6
 1270 0215 07060000 		.4byte	.LASF30
 1271 0219 01       		.byte	0x1
 1272 021a 2E05     		.2byte	0x52e
 1273 021c 00000000 		.4byte	.LFB12
 1274 0220 20000000 		.4byte	.LFE12-.LFB12
 1275 0224 01       		.uleb128 0x1
 1276 0225 9C       		.byte	0x9c
 1277 0226 5E020000 		.4byte	0x25e
 1278 022a 0C       		.uleb128 0xc
 1279 022b 56030000 		.4byte	.LASF25
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 59


 1280 022f 01       		.byte	0x1
 1281 0230 2E05     		.2byte	0x52e
 1282 0232 6B000000 		.4byte	0x6b
 1283 0236 94000000 		.4byte	.LLST5
 1284 023a 0F       		.uleb128 0xf
 1285 023b 5A020000 		.4byte	.LASF28
 1286 023f 01       		.byte	0x1
 1287 0240 3005     		.2byte	0x530
 1288 0242 6B000000 		.4byte	0x6b
 1289 0246 00       		.byte	0
 1290 0247 0F       		.uleb128 0xf
 1291 0248 3F020000 		.4byte	.LASF29
 1292 024c 01       		.byte	0x1
 1293 024d 3105     		.2byte	0x531
 1294 024f 6B000000 		.4byte	0x6b
 1295 0253 01       		.byte	0x1
 1296 0254 08       		.uleb128 0x8
 1297 0255 06000000 		.4byte	.LVL18
 1298 0259 89070000 		.4byte	0x789
 1299 025d 00       		.byte	0
 1300 025e 06       		.uleb128 0x6
 1301 025f 95020000 		.4byte	.LASF31
 1302 0263 01       		.byte	0x1
 1303 0264 4304     		.2byte	0x443
 1304 0266 00000000 		.4byte	.LFB10
 1305 026a 16000000 		.4byte	.LFE10-.LFB10
 1306 026e 01       		.uleb128 0x1
 1307 026f 9C       		.byte	0x9c
 1308 0270 93020000 		.4byte	0x293
 1309 0274 10       		.uleb128 0x10
 1310 0275 6900     		.ascii	"i\000"
 1311 0277 01       		.byte	0x1
 1312 0278 4504     		.2byte	0x445
 1313 027a 6B000000 		.4byte	0x6b
 1314 027e B5000000 		.4byte	.LLST6
 1315 0282 09       		.uleb128 0x9
 1316 0283 0C000000 		.4byte	.LVL21
 1317 0287 14020000 		.4byte	0x214
 1318 028b 0A       		.uleb128 0xa
 1319 028c 01       		.uleb128 0x1
 1320 028d 50       		.byte	0x50
 1321 028e 02       		.uleb128 0x2
 1322 028f 74       		.byte	0x74
 1323 0290 00       		.sleb128 0
 1324 0291 00       		.byte	0
 1325 0292 00       		.byte	0
 1326 0293 06       		.uleb128 0x6
 1327 0294 D7030000 		.4byte	.LASF32
 1328 0298 01       		.byte	0x1
 1329 0299 FF01     		.2byte	0x1ff
 1330 029b 00000000 		.4byte	.LFB3
 1331 029f 68000000 		.4byte	.LFE3-.LFB3
 1332 02a3 01       		.uleb128 0x1
 1333 02a4 9C       		.byte	0x9c
 1334 02a5 CE020000 		.4byte	0x2ce
 1335 02a9 08       		.uleb128 0x8
 1336 02aa 16000000 		.4byte	.LVL24
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 60


 1337 02ae 5E020000 		.4byte	0x25e
 1338 02b2 08       		.uleb128 0x8
 1339 02b3 24000000 		.4byte	.LVL25
 1340 02b7 94070000 		.4byte	0x794
 1341 02bb 08       		.uleb128 0x8
 1342 02bc 28000000 		.4byte	.LVL26
 1343 02c0 9F070000 		.4byte	0x79f
 1344 02c4 08       		.uleb128 0x8
 1345 02c5 2C000000 		.4byte	.LVL27
 1346 02c9 AA070000 		.4byte	0x7aa
 1347 02cd 00       		.byte	0
 1348 02ce 06       		.uleb128 0x6
 1349 02cf CE050000 		.4byte	.LASF33
 1350 02d3 01       		.byte	0x1
 1351 02d4 2A06     		.2byte	0x62a
 1352 02d6 00000000 		.4byte	.LFB14
 1353 02da 4C000000 		.4byte	.LFE14-.LFB14
 1354 02de 01       		.uleb128 0x1
 1355 02df 9C       		.byte	0x9c
 1356 02e0 0D030000 		.4byte	0x30d
 1357 02e4 0C       		.uleb128 0xc
 1358 02e5 56030000 		.4byte	.LASF25
 1359 02e9 01       		.byte	0x1
 1360 02ea 2A06     		.2byte	0x62a
 1361 02ec 6B000000 		.4byte	0x6b
 1362 02f0 DF000000 		.4byte	.LLST7
 1363 02f4 08       		.uleb128 0x8
 1364 02f5 28000000 		.4byte	.LVL29
 1365 02f9 14020000 		.4byte	0x214
 1366 02fd 09       		.uleb128 0x9
 1367 02fe 2E000000 		.4byte	.LVL30
 1368 0302 B5070000 		.4byte	0x7b5
 1369 0306 0A       		.uleb128 0xa
 1370 0307 01       		.uleb128 0x1
 1371 0308 50       		.byte	0x50
 1372 0309 01       		.uleb128 0x1
 1373 030a 30       		.byte	0x30
 1374 030b 00       		.byte	0
 1375 030c 00       		.byte	0
 1376 030d 06       		.uleb128 0x6
 1377 030e 4D010000 		.4byte	.LASF34
 1378 0312 01       		.byte	0x1
 1379 0313 3807     		.2byte	0x738
 1380 0315 00000000 		.4byte	.LFB15
 1381 0319 10000000 		.4byte	.LFE15-.LFB15
 1382 031d 01       		.uleb128 0x1
 1383 031e 9C       		.byte	0x9c
 1384 031f 34030000 		.4byte	0x334
 1385 0323 0C       		.uleb128 0xc
 1386 0324 40040000 		.4byte	.LASF35
 1387 0328 01       		.byte	0x1
 1388 0329 3807     		.2byte	0x738
 1389 032b 6B000000 		.4byte	0x6b
 1390 032f 00010000 		.4byte	.LLST8
 1391 0333 00       		.byte	0
 1392 0334 06       		.uleb128 0x6
 1393 0335 B6040000 		.4byte	.LASF36
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 61


 1394 0339 01       		.byte	0x1
 1395 033a 2303     		.2byte	0x323
 1396 033c 00000000 		.4byte	.LFB5
 1397 0340 2C000000 		.4byte	.LFE5-.LFB5
 1398 0344 01       		.uleb128 0x1
 1399 0345 9C       		.byte	0x9c
 1400 0346 7A030000 		.4byte	0x37a
 1401 034a 0C       		.uleb128 0xc
 1402 034b 77030000 		.4byte	.LASF37
 1403 034f 01       		.byte	0x1
 1404 0350 2303     		.2byte	0x323
 1405 0352 6B000000 		.4byte	0x6b
 1406 0356 3C010000 		.4byte	.LLST9
 1407 035a 0F       		.uleb128 0xf
 1408 035b AF040000 		.4byte	.LASF38
 1409 035f 01       		.byte	0x1
 1410 0360 2503     		.2byte	0x325
 1411 0362 6B000000 		.4byte	0x6b
 1412 0366 00       		.byte	0
 1413 0367 08       		.uleb128 0x8
 1414 0368 0E000000 		.4byte	.LVL38
 1415 036c B5070000 		.4byte	0x7b5
 1416 0370 08       		.uleb128 0x8
 1417 0371 1C000000 		.4byte	.LVL39
 1418 0375 0D030000 		.4byte	0x30d
 1419 0379 00       		.byte	0
 1420 037a 06       		.uleb128 0x6
 1421 037b 1E060000 		.4byte	.LASF39
 1422 037f 01       		.byte	0x1
 1423 0380 8205     		.2byte	0x582
 1424 0382 00000000 		.4byte	.LFB13
 1425 0386 34000000 		.4byte	.LFE13-.LFB13
 1426 038a 01       		.uleb128 0x1
 1427 038b 9C       		.byte	0x9c
 1428 038c C5030000 		.4byte	0x3c5
 1429 0390 0C       		.uleb128 0xc
 1430 0391 56030000 		.4byte	.LASF25
 1431 0395 01       		.byte	0x1
 1432 0396 8205     		.2byte	0x582
 1433 0398 6B000000 		.4byte	0x6b
 1434 039c 5D010000 		.4byte	.LLST10
 1435 03a0 11       		.uleb128 0x11
 1436 03a1 08000000 		.4byte	.LVL41
 1437 03a5 34030000 		.4byte	0x334
 1438 03a9 B4030000 		.4byte	0x3b4
 1439 03ad 0A       		.uleb128 0xa
 1440 03ae 01       		.uleb128 0x1
 1441 03af 50       		.byte	0x50
 1442 03b0 02       		.uleb128 0x2
 1443 03b1 75       		.byte	0x75
 1444 03b2 00       		.sleb128 0
 1445 03b3 00       		.byte	0
 1446 03b4 09       		.uleb128 0x9
 1447 03b5 22000000 		.4byte	.LVL42
 1448 03b9 CA010000 		.4byte	0x1ca
 1449 03bd 0A       		.uleb128 0xa
 1450 03be 01       		.uleb128 0x1
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 62


 1451 03bf 50       		.byte	0x50
 1452 03c0 02       		.uleb128 0x2
 1453 03c1 75       		.byte	0x75
 1454 03c2 00       		.sleb128 0
 1455 03c3 00       		.byte	0
 1456 03c4 00       		.byte	0
 1457 03c5 06       		.uleb128 0x6
 1458 03c6 74020000 		.4byte	.LASF40
 1459 03ca 01       		.byte	0x1
 1460 03cb 9303     		.2byte	0x393
 1461 03cd 00000000 		.4byte	.LFB6
 1462 03d1 20000000 		.4byte	.LFE6-.LFB6
 1463 03d5 01       		.uleb128 0x1
 1464 03d6 9C       		.byte	0x9c
 1465 03d7 F5030000 		.4byte	0x3f5
 1466 03db 0C       		.uleb128 0xc
 1467 03dc 56030000 		.4byte	.LASF25
 1468 03e0 01       		.byte	0x1
 1469 03e1 9303     		.2byte	0x393
 1470 03e3 6B000000 		.4byte	0x6b
 1471 03e7 7E010000 		.4byte	.LLST11
 1472 03eb 08       		.uleb128 0x8
 1473 03ec 14000000 		.4byte	.LVL44
 1474 03f0 7A030000 		.4byte	0x37a
 1475 03f4 00       		.byte	0
 1476 03f5 06       		.uleb128 0x6
 1477 03f6 50060000 		.4byte	.LASF41
 1478 03fa 01       		.byte	0x1
 1479 03fb E003     		.2byte	0x3e0
 1480 03fd 00000000 		.4byte	.LFB7
 1481 0401 38000000 		.4byte	.LFE7-.LFB7
 1482 0405 01       		.uleb128 0x1
 1483 0406 9C       		.byte	0x9c
 1484 0407 1E040000 		.4byte	0x41e
 1485 040b 08       		.uleb128 0x8
 1486 040c 14000000 		.4byte	.LVL45
 1487 0410 40010000 		.4byte	0x140
 1488 0414 08       		.uleb128 0x8
 1489 0415 2E000000 		.4byte	.LVL46
 1490 0419 7A030000 		.4byte	0x37a
 1491 041d 00       		.byte	0
 1492 041e 0B       		.uleb128 0xb
 1493 041f D3040000 		.4byte	.LASF42
 1494 0423 01       		.byte	0x1
 1495 0424 5507     		.2byte	0x755
 1496 0426 6B000000 		.4byte	0x6b
 1497 042a 00000000 		.4byte	.LFB16
 1498 042e 0C000000 		.4byte	.LFE16-.LFB16
 1499 0432 01       		.uleb128 0x1
 1500 0433 9C       		.byte	0x9c
 1501 0434 49040000 		.4byte	0x449
 1502 0438 07       		.uleb128 0x7
 1503 0439 40040000 		.4byte	.LASF35
 1504 043d 01       		.byte	0x1
 1505 043e 5707     		.2byte	0x757
 1506 0440 6B000000 		.4byte	0x6b
 1507 0444 9F010000 		.4byte	.LLST12
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 63


 1508 0448 00       		.byte	0
 1509 0449 06       		.uleb128 0x6
 1510 044a 94050000 		.4byte	.LASF43
 1511 044e 01       		.byte	0x1
 1512 044f 7707     		.2byte	0x777
 1513 0451 00000000 		.4byte	.LFB17
 1514 0455 0C000000 		.4byte	.LFE17-.LFB17
 1515 0459 01       		.uleb128 0x1
 1516 045a 9C       		.byte	0x9c
 1517 045b 6E040000 		.4byte	0x46e
 1518 045f 12       		.uleb128 0x12
 1519 0460 E5030000 		.4byte	.LASF44
 1520 0464 01       		.byte	0x1
 1521 0465 7707     		.2byte	0x777
 1522 0467 6B000000 		.4byte	0x6b
 1523 046b 01       		.uleb128 0x1
 1524 046c 50       		.byte	0x50
 1525 046d 00       		.byte	0
 1526 046e 06       		.uleb128 0x6
 1527 046f 7D010000 		.4byte	.LASF45
 1528 0473 01       		.byte	0x1
 1529 0474 9207     		.2byte	0x792
 1530 0476 00000000 		.4byte	.LFB18
 1531 047a 20000000 		.4byte	.LFE18-.LFB18
 1532 047e 01       		.uleb128 0x1
 1533 047f 9C       		.byte	0x9c
 1534 0480 93040000 		.4byte	0x493
 1535 0484 13       		.uleb128 0x13
 1536 0485 73726300 		.ascii	"src\000"
 1537 0489 01       		.byte	0x1
 1538 048a 9207     		.2byte	0x792
 1539 048c 6B000000 		.4byte	0x6b
 1540 0490 01       		.uleb128 0x1
 1541 0491 50       		.byte	0x50
 1542 0492 00       		.byte	0
 1543 0493 14       		.uleb128 0x14
 1544 0494 2F060000 		.4byte	.LASF46
 1545 0498 01       		.byte	0x1
 1546 0499 60       		.byte	0x60
 1547 049a 00000000 		.4byte	.LFB0
 1548 049e E4000000 		.4byte	.LFE0-.LFB0
 1549 04a2 01       		.uleb128 0x1
 1550 04a3 9C       		.byte	0x9c
 1551 04a4 AE050000 		.4byte	0x5ae
 1552 04a8 15       		.uleb128 0x15
 1553 04a9 E0050000 		.4byte	.LASF20
 1554 04ad 01       		.byte	0x1
 1555 04ae 67       		.byte	0x67
 1556 04af 6B000000 		.4byte	0x6b
 1557 04b3 BE010000 		.4byte	.LLST13
 1558 04b7 08       		.uleb128 0x8
 1559 04b8 06000000 		.4byte	.LVL51
 1560 04bc 5E020000 		.4byte	0x25e
 1561 04c0 11       		.uleb128 0x11
 1562 04c1 0C000000 		.4byte	.LVL52
 1563 04c5 6E040000 		.4byte	0x46e
 1564 04c9 D3040000 		.4byte	0x4d3
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 64


 1565 04cd 0A       		.uleb128 0xa
 1566 04ce 01       		.uleb128 0x1
 1567 04cf 50       		.byte	0x50
 1568 04d0 01       		.uleb128 0x1
 1569 04d1 32       		.byte	0x32
 1570 04d2 00       		.byte	0
 1571 04d3 08       		.uleb128 0x8
 1572 04d4 10000000 		.4byte	.LVL53
 1573 04d8 47070000 		.4byte	0x747
 1574 04dc 08       		.uleb128 0x8
 1575 04dd 28000000 		.4byte	.LVL54
 1576 04e1 73070000 		.4byte	0x773
 1577 04e5 08       		.uleb128 0x8
 1578 04e6 42000000 		.4byte	.LVL55
 1579 04ea 47070000 		.4byte	0x747
 1580 04ee 08       		.uleb128 0x8
 1581 04ef 5A000000 		.4byte	.LVL56
 1582 04f3 73070000 		.4byte	0x773
 1583 04f7 11       		.uleb128 0x11
 1584 04f8 86000000 		.4byte	.LVL57
 1585 04fc C0070000 		.4byte	0x7c0
 1586 0500 0A050000 		.4byte	0x50a
 1587 0504 0A       		.uleb128 0xa
 1588 0505 01       		.uleb128 0x1
 1589 0506 50       		.byte	0x50
 1590 0507 01       		.uleb128 0x1
 1591 0508 30       		.byte	0x30
 1592 0509 00       		.byte	0
 1593 050a 11       		.uleb128 0x11
 1594 050b 8E000000 		.4byte	.LVL58
 1595 050f CB070000 		.4byte	0x7cb
 1596 0513 23050000 		.4byte	0x523
 1597 0517 0A       		.uleb128 0xa
 1598 0518 01       		.uleb128 0x1
 1599 0519 50       		.byte	0x50
 1600 051a 01       		.uleb128 0x1
 1601 051b 30       		.byte	0x30
 1602 051c 0A       		.uleb128 0xa
 1603 051d 01       		.uleb128 0x1
 1604 051e 51       		.byte	0x51
 1605 051f 02       		.uleb128 0x2
 1606 0520 75       		.byte	0x75
 1607 0521 00       		.sleb128 0
 1608 0522 00       		.byte	0
 1609 0523 08       		.uleb128 0x8
 1610 0524 92000000 		.4byte	.LVL59
 1611 0528 D6070000 		.4byte	0x7d6
 1612 052c 11       		.uleb128 0x11
 1613 052d 98000000 		.4byte	.LVL60
 1614 0531 7E070000 		.4byte	0x77e
 1615 0535 40050000 		.4byte	0x540
 1616 0539 0A       		.uleb128 0xa
 1617 053a 01       		.uleb128 0x1
 1618 053b 50       		.byte	0x50
 1619 053c 02       		.uleb128 0x2
 1620 053d 74       		.byte	0x74
 1621 053e 00       		.sleb128 0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 65


 1622 053f 00       		.byte	0
 1623 0540 11       		.uleb128 0x11
 1624 0541 9E000000 		.4byte	.LVL61
 1625 0545 7E070000 		.4byte	0x77e
 1626 0549 53050000 		.4byte	0x553
 1627 054d 0A       		.uleb128 0xa
 1628 054e 01       		.uleb128 0x1
 1629 054f 50       		.byte	0x50
 1630 0550 01       		.uleb128 0x1
 1631 0551 32       		.byte	0x32
 1632 0552 00       		.byte	0
 1633 0553 11       		.uleb128 0x11
 1634 0554 A4000000 		.4byte	.LVL62
 1635 0558 7E070000 		.4byte	0x77e
 1636 055c 66050000 		.4byte	0x566
 1637 0560 0A       		.uleb128 0xa
 1638 0561 01       		.uleb128 0x1
 1639 0562 50       		.byte	0x50
 1640 0563 01       		.uleb128 0x1
 1641 0564 33       		.byte	0x33
 1642 0565 00       		.byte	0
 1643 0566 08       		.uleb128 0x8
 1644 0567 B2000000 		.4byte	.LVL63
 1645 056b E1070000 		.4byte	0x7e1
 1646 056f 08       		.uleb128 0x8
 1647 0570 B6000000 		.4byte	.LVL64
 1648 0574 EC070000 		.4byte	0x7ec
 1649 0578 11       		.uleb128 0x11
 1650 0579 BC000000 		.4byte	.LVL65
 1651 057d F7070000 		.4byte	0x7f7
 1652 0581 8B050000 		.4byte	0x58b
 1653 0585 0A       		.uleb128 0xa
 1654 0586 01       		.uleb128 0x1
 1655 0587 50       		.byte	0x50
 1656 0588 01       		.uleb128 0x1
 1657 0589 30       		.byte	0x30
 1658 058a 00       		.byte	0
 1659 058b 11       		.uleb128 0x11
 1660 058c C2000000 		.4byte	.LVL66
 1661 0590 02080000 		.4byte	0x802
 1662 0594 9E050000 		.4byte	0x59e
 1663 0598 0A       		.uleb128 0xa
 1664 0599 01       		.uleb128 0x1
 1665 059a 50       		.byte	0x50
 1666 059b 01       		.uleb128 0x1
 1667 059c 34       		.byte	0x34
 1668 059d 00       		.byte	0
 1669 059e 09       		.uleb128 0x9
 1670 059f C8000000 		.4byte	.LVL67
 1671 05a3 B5070000 		.4byte	0x7b5
 1672 05a7 0A       		.uleb128 0xa
 1673 05a8 01       		.uleb128 0x1
 1674 05a9 50       		.byte	0x50
 1675 05aa 01       		.uleb128 0x1
 1676 05ab 30       		.byte	0x30
 1677 05ac 00       		.byte	0
 1678 05ad 00       		.byte	0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 66


 1679 05ae 06       		.uleb128 0x6
 1680 05af BF050000 		.4byte	.LASF47
 1681 05b3 01       		.byte	0x1
 1682 05b4 DA01     		.2byte	0x1da
 1683 05b6 00000000 		.4byte	.LFB2
 1684 05ba 2C000000 		.4byte	.LFE2-.LFB2
 1685 05be 01       		.uleb128 0x1
 1686 05bf 9C       		.byte	0x9c
 1687 05c0 E0050000 		.4byte	0x5e0
 1688 05c4 08       		.uleb128 0x8
 1689 05c5 0C000000 		.4byte	.LVL68
 1690 05c9 93040000 		.4byte	0x493
 1691 05cd 08       		.uleb128 0x8
 1692 05ce 16000000 		.4byte	.LVL69
 1693 05d2 E5000000 		.4byte	0xe5
 1694 05d6 08       		.uleb128 0x8
 1695 05d7 1A000000 		.4byte	.LVL70
 1696 05db 0D080000 		.4byte	0x80d
 1697 05df 00       		.byte	0
 1698 05e0 16       		.uleb128 0x16
 1699 05e1 4C000000 		.4byte	.LASF48
 1700 05e5 01       		.byte	0x1
 1701 05e6 16       		.byte	0x16
 1702 05e7 6B000000 		.4byte	0x6b
 1703 05eb 05       		.uleb128 0x5
 1704 05ec 03       		.byte	0x3
 1705 05ed 00000000 		.4byte	CapSense_initVar
 1706 05f1 17       		.uleb128 0x17
 1707 05f2 CF000000 		.4byte	.LASF49
 1708 05f6 01       		.byte	0x1
 1709 05f7 1E       		.byte	0x1e
 1710 05f8 6B000000 		.4byte	0x6b
 1711 05fc 05       		.uleb128 0x5
 1712 05fd 03       		.byte	0x3
 1713 05fe 00000000 		.4byte	CapSense_lowLevelTuningDone
 1714 0602 17       		.uleb128 0x17
 1715 0603 07000000 		.4byte	.LASF50
 1716 0607 01       		.byte	0x1
 1717 0608 19       		.byte	0x19
 1718 0609 B0000000 		.4byte	0xb0
 1719 060d 05       		.uleb128 0x5
 1720 060e 03       		.byte	0x3
 1721 060f 00000000 		.4byte	CapSense_csv
 1722 0613 17       		.uleb128 0x17
 1723 0614 5F020000 		.4byte	.LASF51
 1724 0618 01       		.byte	0x1
 1725 0619 1A       		.byte	0x1a
 1726 061a B0000000 		.4byte	0xb0
 1727 061e 05       		.uleb128 0x5
 1728 061f 03       		.byte	0x3
 1729 0620 00000000 		.4byte	CapSense_sensorIndex
 1730 0624 18       		.uleb128 0x18
 1731 0625 77000000 		.4byte	0x77
 1732 0629 34060000 		.4byte	0x634
 1733 062d 19       		.uleb128 0x19
 1734 062e DE000000 		.4byte	0xde
 1735 0632 00       		.byte	0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 67


 1736 0633 00       		.byte	0
 1737 0634 17       		.uleb128 0x17
 1738 0635 3D060000 		.4byte	.LASF52
 1739 0639 01       		.byte	0x1
 1740 063a 29       		.byte	0x29
 1741 063b 24060000 		.4byte	0x624
 1742 063f 05       		.uleb128 0x5
 1743 0640 03       		.byte	0x3
 1744 0641 00000000 		.4byte	CapSense_sensorRaw
 1745 0645 18       		.uleb128 0x18
 1746 0646 6B000000 		.4byte	0x6b
 1747 064a 55060000 		.4byte	0x655
 1748 064e 19       		.uleb128 0x19
 1749 064f DE000000 		.4byte	0xde
 1750 0653 00       		.byte	0
 1751 0654 00       		.byte	0
 1752 0655 17       		.uleb128 0x17
 1753 0656 5D030000 		.4byte	.LASF53
 1754 065a 01       		.byte	0x1
 1755 065b 2B       		.byte	0x2b
 1756 065c 45060000 		.4byte	0x645
 1757 0660 05       		.uleb128 0x5
 1758 0661 03       		.byte	0x3
 1759 0662 00000000 		.4byte	CapSense_sensorEnableMask
 1760 0666 18       		.uleb128 0x18
 1761 0667 7C060000 		.4byte	0x67c
 1762 066b 76060000 		.4byte	0x676
 1763 066f 19       		.uleb128 0x19
 1764 0670 DE000000 		.4byte	0xde
 1765 0674 00       		.byte	0
 1766 0675 00       		.byte	0
 1767 0676 1A       		.uleb128 0x1a
 1768 0677 04       		.byte	0x4
 1769 0678 6B000000 		.4byte	0x6b
 1770 067c 1B       		.uleb128 0x1b
 1771 067d 76060000 		.4byte	0x676
 1772 0681 17       		.uleb128 0x17
 1773 0682 5D000000 		.4byte	.LASF54
 1774 0686 01       		.byte	0x1
 1775 0687 2E       		.byte	0x2e
 1776 0688 92060000 		.4byte	0x692
 1777 068c 05       		.uleb128 0x5
 1778 068d 03       		.byte	0x3
 1779 068e 00000000 		.4byte	CapSense_pcTable
 1780 0692 1B       		.uleb128 0x1b
 1781 0693 66060000 		.4byte	0x666
 1782 0697 18       		.uleb128 0x18
 1783 0698 A7060000 		.4byte	0x6a7
 1784 069c A7060000 		.4byte	0x6a7
 1785 06a0 19       		.uleb128 0x19
 1786 06a1 DE000000 		.4byte	0xde
 1787 06a5 00       		.byte	0
 1788 06a6 00       		.byte	0
 1789 06a7 1B       		.uleb128 0x1b
 1790 06a8 6B000000 		.4byte	0x6b
 1791 06ac 17       		.uleb128 0x17
 1792 06ad EA020000 		.4byte	.LASF55
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 68


 1793 06b1 01       		.byte	0x1
 1794 06b2 32       		.byte	0x32
 1795 06b3 BD060000 		.4byte	0x6bd
 1796 06b7 05       		.uleb128 0x5
 1797 06b8 03       		.byte	0x3
 1798 06b9 00000000 		.4byte	CapSense_portTable
 1799 06bd 1B       		.uleb128 0x1b
 1800 06be 97060000 		.4byte	0x697
 1801 06c2 17       		.uleb128 0x17
 1802 06c3 D7020000 		.4byte	.LASF56
 1803 06c7 01       		.byte	0x1
 1804 06c8 36       		.byte	0x36
 1805 06c9 D3060000 		.4byte	0x6d3
 1806 06cd 05       		.uleb128 0x5
 1807 06ce 03       		.byte	0x3
 1808 06cf 00000000 		.4byte	CapSense_maskTable
 1809 06d3 1B       		.uleb128 0x1b
 1810 06d4 97060000 		.4byte	0x697
 1811 06d8 18       		.uleb128 0x18
 1812 06d9 7C060000 		.4byte	0x67c
 1813 06dd E8060000 		.4byte	0x6e8
 1814 06e1 19       		.uleb128 0x19
 1815 06e2 DE000000 		.4byte	0xde
 1816 06e6 07       		.byte	0x7
 1817 06e7 00       		.byte	0
 1818 06e8 17       		.uleb128 0x17
 1819 06e9 BA030000 		.4byte	.LASF57
 1820 06ed 01       		.byte	0x1
 1821 06ee 3A       		.byte	0x3a
 1822 06ef F9060000 		.4byte	0x6f9
 1823 06f3 05       		.uleb128 0x5
 1824 06f4 03       		.byte	0x3
 1825 06f5 00000000 		.4byte	CapSense_csTable
 1826 06f9 1B       		.uleb128 0x1b
 1827 06fa D8060000 		.4byte	0x6d8
 1828 06fe 17       		.uleb128 0x17
 1829 06ff 24040000 		.4byte	.LASF58
 1830 0703 01       		.byte	0x1
 1831 0704 40       		.byte	0x40
 1832 0705 45060000 		.4byte	0x645
 1833 0709 05       		.uleb128 0x5
 1834 070a 03       		.byte	0x3
 1835 070b 00000000 		.4byte	CapSense_idacSettings
 1836 070f 17       		.uleb128 0x17
 1837 0710 8B040000 		.4byte	.LASF59
 1838 0714 01       		.byte	0x1
 1839 0715 44       		.byte	0x44
 1840 0716 45060000 		.4byte	0x645
 1841 071a 05       		.uleb128 0x5
 1842 071b 03       		.byte	0x3
 1843 071c 00000000 		.4byte	CapSense_widgetResolution
 1844 0720 17       		.uleb128 0x17
 1845 0721 94030000 		.4byte	.LASF60
 1846 0725 01       		.byte	0x1
 1847 0726 48       		.byte	0x48
 1848 0727 45060000 		.4byte	0x645
 1849 072b 05       		.uleb128 0x5
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 69


 1850 072c 03       		.byte	0x3
 1851 072d 00000000 		.4byte	CapSense_analogSwitchDivider
 1852 0731 17       		.uleb128 0x17
 1853 0732 FC010000 		.4byte	.LASF61
 1854 0736 01       		.byte	0x1
 1855 0737 49       		.byte	0x49
 1856 0738 42070000 		.4byte	0x742
 1857 073c 05       		.uleb128 0x5
 1858 073d 03       		.byte	0x3
 1859 073e 00000000 		.4byte	CapSense_widgetNumber
 1860 0742 1B       		.uleb128 0x1b
 1861 0743 97060000 		.4byte	0x697
 1862 0747 1C       		.uleb128 0x1c
 1863 0748 15030000 		.4byte	.LASF62
 1864 074c 15030000 		.4byte	.LASF62
 1865 0750 03       		.byte	0x3
 1866 0751 7D       		.byte	0x7d
 1867 0752 1C       		.uleb128 0x1c
 1868 0753 FD020000 		.4byte	.LASF63
 1869 0757 FD020000 		.4byte	.LASF63
 1870 075b 04       		.byte	0x4
 1871 075c 27       		.byte	0x27
 1872 075d 1C       		.uleb128 0x1c
 1873 075e 25010000 		.4byte	.LASF64
 1874 0762 25010000 		.4byte	.LASF64
 1875 0766 05       		.byte	0x5
 1876 0767 46       		.byte	0x46
 1877 0768 1C       		.uleb128 0x1c
 1878 0769 7C050000 		.4byte	.LASF65
 1879 076d 7C050000 		.4byte	.LASF65
 1880 0771 06       		.byte	0x6
 1881 0772 46       		.byte	0x46
 1882 0773 1C       		.uleb128 0x1c
 1883 0774 14000000 		.4byte	.LASF66
 1884 0778 14000000 		.4byte	.LASF66
 1885 077c 03       		.byte	0x3
 1886 077d 7E       		.byte	0x7e
 1887 077e 1C       		.uleb128 0x1c
 1888 077f AA050000 		.4byte	.LASF67
 1889 0783 AA050000 		.4byte	.LASF67
 1890 0787 07       		.byte	0x7
 1891 0788 1A       		.byte	0x1a
 1892 0789 1C       		.uleb128 0x1c
 1893 078a 6C060000 		.4byte	.LASF68
 1894 078e 6C060000 		.4byte	.LASF68
 1895 0792 07       		.byte	0x7
 1896 0793 1B       		.byte	0x1b
 1897 0794 1C       		.uleb128 0x1c
 1898 0795 3F030000 		.4byte	.LASF69
 1899 0799 3F030000 		.4byte	.LASF69
 1900 079d 04       		.byte	0x4
 1901 079e 28       		.byte	0x28
 1902 079f 1C       		.uleb128 0x1c
 1903 07a0 F1050000 		.4byte	.LASF70
 1904 07a4 F1050000 		.4byte	.LASF70
 1905 07a8 05       		.byte	0x5
 1906 07a9 40       		.byte	0x40
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 70


 1907 07aa 1C       		.uleb128 0x1c
 1908 07ab E6010000 		.4byte	.LASF71
 1909 07af E6010000 		.4byte	.LASF71
 1910 07b3 06       		.byte	0x6
 1911 07b4 3D       		.byte	0x3d
 1912 07b5 1C       		.uleb128 0x1c
 1913 07b6 EB000000 		.4byte	.LASF72
 1914 07ba EB000000 		.4byte	.LASF72
 1915 07be 06       		.byte	0x6
 1916 07bf 41       		.byte	0x41
 1917 07c0 1C       		.uleb128 0x1c
 1918 07c1 30020000 		.4byte	.LASF73
 1919 07c5 30020000 		.4byte	.LASF73
 1920 07c9 03       		.byte	0x3
 1921 07ca 88       		.byte	0x88
 1922 07cb 1C       		.uleb128 0x1c
 1923 07cc 13040000 		.4byte	.LASF74
 1924 07d0 13040000 		.4byte	.LASF74
 1925 07d4 03       		.byte	0x3
 1926 07d5 8B       		.byte	0x8b
 1927 07d6 1C       		.uleb128 0x1c
 1928 07d7 B3010000 		.4byte	.LASF75
 1929 07db B3010000 		.4byte	.LASF75
 1930 07df 08       		.byte	0x8
 1931 07e0 1F       		.byte	0x1f
 1932 07e1 1C       		.uleb128 0x1c
 1933 07e2 44020000 		.4byte	.LASF76
 1934 07e6 44020000 		.4byte	.LASF76
 1935 07ea 05       		.byte	0x5
 1936 07eb 45       		.byte	0x45
 1937 07ec 1C       		.uleb128 0x1c
 1938 07ed 75040000 		.4byte	.LASF77
 1939 07f1 75040000 		.4byte	.LASF77
 1940 07f5 06       		.byte	0x6
 1941 07f6 45       		.byte	0x45
 1942 07f7 1C       		.uleb128 0x1c
 1943 07f8 F6030000 		.4byte	.LASF78
 1944 07fc F6030000 		.4byte	.LASF78
 1945 0800 06       		.byte	0x6
 1946 0801 3F       		.byte	0x3f
 1947 0802 1C       		.uleb128 0x1c
 1948 0803 AB020000 		.4byte	.LASF79
 1949 0807 AB020000 		.4byte	.LASF79
 1950 080b 06       		.byte	0x6
 1951 080c 40       		.byte	0x40
 1952 080d 1D       		.uleb128 0x1d
 1953 080e 7C030000 		.4byte	.LASF80
 1954 0812 7C030000 		.4byte	.LASF80
 1955 0816 09       		.byte	0x9
 1956 0817 AA02     		.2byte	0x2aa
 1957 0819 00       		.byte	0
 1958              		.section	.debug_abbrev,"",%progbits
 1959              	.Ldebug_abbrev0:
 1960 0000 01       		.uleb128 0x1
 1961 0001 11       		.uleb128 0x11
 1962 0002 01       		.byte	0x1
 1963 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 71


 1964 0004 0E       		.uleb128 0xe
 1965 0005 13       		.uleb128 0x13
 1966 0006 0B       		.uleb128 0xb
 1967 0007 03       		.uleb128 0x3
 1968 0008 0E       		.uleb128 0xe
 1969 0009 1B       		.uleb128 0x1b
 1970 000a 0E       		.uleb128 0xe
 1971 000b 55       		.uleb128 0x55
 1972 000c 17       		.uleb128 0x17
 1973 000d 11       		.uleb128 0x11
 1974 000e 01       		.uleb128 0x1
 1975 000f 10       		.uleb128 0x10
 1976 0010 17       		.uleb128 0x17
 1977 0011 00       		.byte	0
 1978 0012 00       		.byte	0
 1979 0013 02       		.uleb128 0x2
 1980 0014 24       		.uleb128 0x24
 1981 0015 00       		.byte	0
 1982 0016 0B       		.uleb128 0xb
 1983 0017 0B       		.uleb128 0xb
 1984 0018 3E       		.uleb128 0x3e
 1985 0019 0B       		.uleb128 0xb
 1986 001a 03       		.uleb128 0x3
 1987 001b 0E       		.uleb128 0xe
 1988 001c 00       		.byte	0
 1989 001d 00       		.byte	0
 1990 001e 03       		.uleb128 0x3
 1991 001f 24       		.uleb128 0x24
 1992 0020 00       		.byte	0
 1993 0021 0B       		.uleb128 0xb
 1994 0022 0B       		.uleb128 0xb
 1995 0023 3E       		.uleb128 0x3e
 1996 0024 0B       		.uleb128 0xb
 1997 0025 03       		.uleb128 0x3
 1998 0026 08       		.uleb128 0x8
 1999 0027 00       		.byte	0
 2000 0028 00       		.byte	0
 2001 0029 04       		.uleb128 0x4
 2002 002a 16       		.uleb128 0x16
 2003 002b 00       		.byte	0
 2004 002c 03       		.uleb128 0x3
 2005 002d 0E       		.uleb128 0xe
 2006 002e 3A       		.uleb128 0x3a
 2007 002f 0B       		.uleb128 0xb
 2008 0030 3B       		.uleb128 0x3b
 2009 0031 05       		.uleb128 0x5
 2010 0032 49       		.uleb128 0x49
 2011 0033 13       		.uleb128 0x13
 2012 0034 00       		.byte	0
 2013 0035 00       		.byte	0
 2014 0036 05       		.uleb128 0x5
 2015 0037 35       		.uleb128 0x35
 2016 0038 00       		.byte	0
 2017 0039 49       		.uleb128 0x49
 2018 003a 13       		.uleb128 0x13
 2019 003b 00       		.byte	0
 2020 003c 00       		.byte	0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 72


 2021 003d 06       		.uleb128 0x6
 2022 003e 2E       		.uleb128 0x2e
 2023 003f 01       		.byte	0x1
 2024 0040 3F       		.uleb128 0x3f
 2025 0041 19       		.uleb128 0x19
 2026 0042 03       		.uleb128 0x3
 2027 0043 0E       		.uleb128 0xe
 2028 0044 3A       		.uleb128 0x3a
 2029 0045 0B       		.uleb128 0xb
 2030 0046 3B       		.uleb128 0x3b
 2031 0047 05       		.uleb128 0x5
 2032 0048 27       		.uleb128 0x27
 2033 0049 19       		.uleb128 0x19
 2034 004a 11       		.uleb128 0x11
 2035 004b 01       		.uleb128 0x1
 2036 004c 12       		.uleb128 0x12
 2037 004d 06       		.uleb128 0x6
 2038 004e 40       		.uleb128 0x40
 2039 004f 18       		.uleb128 0x18
 2040 0050 9742     		.uleb128 0x2117
 2041 0052 19       		.uleb128 0x19
 2042 0053 01       		.uleb128 0x1
 2043 0054 13       		.uleb128 0x13
 2044 0055 00       		.byte	0
 2045 0056 00       		.byte	0
 2046 0057 07       		.uleb128 0x7
 2047 0058 34       		.uleb128 0x34
 2048 0059 00       		.byte	0
 2049 005a 03       		.uleb128 0x3
 2050 005b 0E       		.uleb128 0xe
 2051 005c 3A       		.uleb128 0x3a
 2052 005d 0B       		.uleb128 0xb
 2053 005e 3B       		.uleb128 0x3b
 2054 005f 05       		.uleb128 0x5
 2055 0060 49       		.uleb128 0x49
 2056 0061 13       		.uleb128 0x13
 2057 0062 02       		.uleb128 0x2
 2058 0063 17       		.uleb128 0x17
 2059 0064 00       		.byte	0
 2060 0065 00       		.byte	0
 2061 0066 08       		.uleb128 0x8
 2062 0067 898201   		.uleb128 0x4109
 2063 006a 00       		.byte	0
 2064 006b 11       		.uleb128 0x11
 2065 006c 01       		.uleb128 0x1
 2066 006d 31       		.uleb128 0x31
 2067 006e 13       		.uleb128 0x13
 2068 006f 00       		.byte	0
 2069 0070 00       		.byte	0
 2070 0071 09       		.uleb128 0x9
 2071 0072 898201   		.uleb128 0x4109
 2072 0075 01       		.byte	0x1
 2073 0076 11       		.uleb128 0x11
 2074 0077 01       		.uleb128 0x1
 2075 0078 31       		.uleb128 0x31
 2076 0079 13       		.uleb128 0x13
 2077 007a 00       		.byte	0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 73


 2078 007b 00       		.byte	0
 2079 007c 0A       		.uleb128 0xa
 2080 007d 8A8201   		.uleb128 0x410a
 2081 0080 00       		.byte	0
 2082 0081 02       		.uleb128 0x2
 2083 0082 18       		.uleb128 0x18
 2084 0083 9142     		.uleb128 0x2111
 2085 0085 18       		.uleb128 0x18
 2086 0086 00       		.byte	0
 2087 0087 00       		.byte	0
 2088 0088 0B       		.uleb128 0xb
 2089 0089 2E       		.uleb128 0x2e
 2090 008a 01       		.byte	0x1
 2091 008b 3F       		.uleb128 0x3f
 2092 008c 19       		.uleb128 0x19
 2093 008d 03       		.uleb128 0x3
 2094 008e 0E       		.uleb128 0xe
 2095 008f 3A       		.uleb128 0x3a
 2096 0090 0B       		.uleb128 0xb
 2097 0091 3B       		.uleb128 0x3b
 2098 0092 05       		.uleb128 0x5
 2099 0093 27       		.uleb128 0x27
 2100 0094 19       		.uleb128 0x19
 2101 0095 49       		.uleb128 0x49
 2102 0096 13       		.uleb128 0x13
 2103 0097 11       		.uleb128 0x11
 2104 0098 01       		.uleb128 0x1
 2105 0099 12       		.uleb128 0x12
 2106 009a 06       		.uleb128 0x6
 2107 009b 40       		.uleb128 0x40
 2108 009c 18       		.uleb128 0x18
 2109 009d 9742     		.uleb128 0x2117
 2110 009f 19       		.uleb128 0x19
 2111 00a0 01       		.uleb128 0x1
 2112 00a1 13       		.uleb128 0x13
 2113 00a2 00       		.byte	0
 2114 00a3 00       		.byte	0
 2115 00a4 0C       		.uleb128 0xc
 2116 00a5 05       		.uleb128 0x5
 2117 00a6 00       		.byte	0
 2118 00a7 03       		.uleb128 0x3
 2119 00a8 0E       		.uleb128 0xe
 2120 00a9 3A       		.uleb128 0x3a
 2121 00aa 0B       		.uleb128 0xb
 2122 00ab 3B       		.uleb128 0x3b
 2123 00ac 05       		.uleb128 0x5
 2124 00ad 49       		.uleb128 0x49
 2125 00ae 13       		.uleb128 0x13
 2126 00af 02       		.uleb128 0x2
 2127 00b0 17       		.uleb128 0x17
 2128 00b1 00       		.byte	0
 2129 00b2 00       		.byte	0
 2130 00b3 0D       		.uleb128 0xd
 2131 00b4 34       		.uleb128 0x34
 2132 00b5 00       		.byte	0
 2133 00b6 03       		.uleb128 0x3
 2134 00b7 08       		.uleb128 0x8
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 74


 2135 00b8 3A       		.uleb128 0x3a
 2136 00b9 0B       		.uleb128 0xb
 2137 00ba 3B       		.uleb128 0x3b
 2138 00bb 05       		.uleb128 0x5
 2139 00bc 49       		.uleb128 0x49
 2140 00bd 13       		.uleb128 0x13
 2141 00be 02       		.uleb128 0x2
 2142 00bf 18       		.uleb128 0x18
 2143 00c0 00       		.byte	0
 2144 00c1 00       		.byte	0
 2145 00c2 0E       		.uleb128 0xe
 2146 00c3 2E       		.uleb128 0x2e
 2147 00c4 00       		.byte	0
 2148 00c5 3F       		.uleb128 0x3f
 2149 00c6 19       		.uleb128 0x19
 2150 00c7 03       		.uleb128 0x3
 2151 00c8 0E       		.uleb128 0xe
 2152 00c9 3A       		.uleb128 0x3a
 2153 00ca 0B       		.uleb128 0xb
 2154 00cb 3B       		.uleb128 0x3b
 2155 00cc 05       		.uleb128 0x5
 2156 00cd 27       		.uleb128 0x27
 2157 00ce 19       		.uleb128 0x19
 2158 00cf 49       		.uleb128 0x49
 2159 00d0 13       		.uleb128 0x13
 2160 00d1 11       		.uleb128 0x11
 2161 00d2 01       		.uleb128 0x1
 2162 00d3 12       		.uleb128 0x12
 2163 00d4 06       		.uleb128 0x6
 2164 00d5 40       		.uleb128 0x40
 2165 00d6 18       		.uleb128 0x18
 2166 00d7 9742     		.uleb128 0x2117
 2167 00d9 19       		.uleb128 0x19
 2168 00da 00       		.byte	0
 2169 00db 00       		.byte	0
 2170 00dc 0F       		.uleb128 0xf
 2171 00dd 34       		.uleb128 0x34
 2172 00de 00       		.byte	0
 2173 00df 03       		.uleb128 0x3
 2174 00e0 0E       		.uleb128 0xe
 2175 00e1 3A       		.uleb128 0x3a
 2176 00e2 0B       		.uleb128 0xb
 2177 00e3 3B       		.uleb128 0x3b
 2178 00e4 05       		.uleb128 0x5
 2179 00e5 49       		.uleb128 0x49
 2180 00e6 13       		.uleb128 0x13
 2181 00e7 1C       		.uleb128 0x1c
 2182 00e8 0B       		.uleb128 0xb
 2183 00e9 00       		.byte	0
 2184 00ea 00       		.byte	0
 2185 00eb 10       		.uleb128 0x10
 2186 00ec 34       		.uleb128 0x34
 2187 00ed 00       		.byte	0
 2188 00ee 03       		.uleb128 0x3
 2189 00ef 08       		.uleb128 0x8
 2190 00f0 3A       		.uleb128 0x3a
 2191 00f1 0B       		.uleb128 0xb
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 75


 2192 00f2 3B       		.uleb128 0x3b
 2193 00f3 05       		.uleb128 0x5
 2194 00f4 49       		.uleb128 0x49
 2195 00f5 13       		.uleb128 0x13
 2196 00f6 02       		.uleb128 0x2
 2197 00f7 17       		.uleb128 0x17
 2198 00f8 00       		.byte	0
 2199 00f9 00       		.byte	0
 2200 00fa 11       		.uleb128 0x11
 2201 00fb 898201   		.uleb128 0x4109
 2202 00fe 01       		.byte	0x1
 2203 00ff 11       		.uleb128 0x11
 2204 0100 01       		.uleb128 0x1
 2205 0101 31       		.uleb128 0x31
 2206 0102 13       		.uleb128 0x13
 2207 0103 01       		.uleb128 0x1
 2208 0104 13       		.uleb128 0x13
 2209 0105 00       		.byte	0
 2210 0106 00       		.byte	0
 2211 0107 12       		.uleb128 0x12
 2212 0108 05       		.uleb128 0x5
 2213 0109 00       		.byte	0
 2214 010a 03       		.uleb128 0x3
 2215 010b 0E       		.uleb128 0xe
 2216 010c 3A       		.uleb128 0x3a
 2217 010d 0B       		.uleb128 0xb
 2218 010e 3B       		.uleb128 0x3b
 2219 010f 05       		.uleb128 0x5
 2220 0110 49       		.uleb128 0x49
 2221 0111 13       		.uleb128 0x13
 2222 0112 02       		.uleb128 0x2
 2223 0113 18       		.uleb128 0x18
 2224 0114 00       		.byte	0
 2225 0115 00       		.byte	0
 2226 0116 13       		.uleb128 0x13
 2227 0117 05       		.uleb128 0x5
 2228 0118 00       		.byte	0
 2229 0119 03       		.uleb128 0x3
 2230 011a 08       		.uleb128 0x8
 2231 011b 3A       		.uleb128 0x3a
 2232 011c 0B       		.uleb128 0xb
 2233 011d 3B       		.uleb128 0x3b
 2234 011e 05       		.uleb128 0x5
 2235 011f 49       		.uleb128 0x49
 2236 0120 13       		.uleb128 0x13
 2237 0121 02       		.uleb128 0x2
 2238 0122 18       		.uleb128 0x18
 2239 0123 00       		.byte	0
 2240 0124 00       		.byte	0
 2241 0125 14       		.uleb128 0x14
 2242 0126 2E       		.uleb128 0x2e
 2243 0127 01       		.byte	0x1
 2244 0128 3F       		.uleb128 0x3f
 2245 0129 19       		.uleb128 0x19
 2246 012a 03       		.uleb128 0x3
 2247 012b 0E       		.uleb128 0xe
 2248 012c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 76


 2249 012d 0B       		.uleb128 0xb
 2250 012e 3B       		.uleb128 0x3b
 2251 012f 0B       		.uleb128 0xb
 2252 0130 27       		.uleb128 0x27
 2253 0131 19       		.uleb128 0x19
 2254 0132 11       		.uleb128 0x11
 2255 0133 01       		.uleb128 0x1
 2256 0134 12       		.uleb128 0x12
 2257 0135 06       		.uleb128 0x6
 2258 0136 40       		.uleb128 0x40
 2259 0137 18       		.uleb128 0x18
 2260 0138 9742     		.uleb128 0x2117
 2261 013a 19       		.uleb128 0x19
 2262 013b 01       		.uleb128 0x1
 2263 013c 13       		.uleb128 0x13
 2264 013d 00       		.byte	0
 2265 013e 00       		.byte	0
 2266 013f 15       		.uleb128 0x15
 2267 0140 34       		.uleb128 0x34
 2268 0141 00       		.byte	0
 2269 0142 03       		.uleb128 0x3
 2270 0143 0E       		.uleb128 0xe
 2271 0144 3A       		.uleb128 0x3a
 2272 0145 0B       		.uleb128 0xb
 2273 0146 3B       		.uleb128 0x3b
 2274 0147 0B       		.uleb128 0xb
 2275 0148 49       		.uleb128 0x49
 2276 0149 13       		.uleb128 0x13
 2277 014a 02       		.uleb128 0x2
 2278 014b 17       		.uleb128 0x17
 2279 014c 00       		.byte	0
 2280 014d 00       		.byte	0
 2281 014e 16       		.uleb128 0x16
 2282 014f 34       		.uleb128 0x34
 2283 0150 00       		.byte	0
 2284 0151 03       		.uleb128 0x3
 2285 0152 0E       		.uleb128 0xe
 2286 0153 3A       		.uleb128 0x3a
 2287 0154 0B       		.uleb128 0xb
 2288 0155 3B       		.uleb128 0x3b
 2289 0156 0B       		.uleb128 0xb
 2290 0157 49       		.uleb128 0x49
 2291 0158 13       		.uleb128 0x13
 2292 0159 02       		.uleb128 0x2
 2293 015a 18       		.uleb128 0x18
 2294 015b 00       		.byte	0
 2295 015c 00       		.byte	0
 2296 015d 17       		.uleb128 0x17
 2297 015e 34       		.uleb128 0x34
 2298 015f 00       		.byte	0
 2299 0160 03       		.uleb128 0x3
 2300 0161 0E       		.uleb128 0xe
 2301 0162 3A       		.uleb128 0x3a
 2302 0163 0B       		.uleb128 0xb
 2303 0164 3B       		.uleb128 0x3b
 2304 0165 0B       		.uleb128 0xb
 2305 0166 49       		.uleb128 0x49
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 77


 2306 0167 13       		.uleb128 0x13
 2307 0168 3F       		.uleb128 0x3f
 2308 0169 19       		.uleb128 0x19
 2309 016a 02       		.uleb128 0x2
 2310 016b 18       		.uleb128 0x18
 2311 016c 00       		.byte	0
 2312 016d 00       		.byte	0
 2313 016e 18       		.uleb128 0x18
 2314 016f 01       		.uleb128 0x1
 2315 0170 01       		.byte	0x1
 2316 0171 49       		.uleb128 0x49
 2317 0172 13       		.uleb128 0x13
 2318 0173 01       		.uleb128 0x1
 2319 0174 13       		.uleb128 0x13
 2320 0175 00       		.byte	0
 2321 0176 00       		.byte	0
 2322 0177 19       		.uleb128 0x19
 2323 0178 21       		.uleb128 0x21
 2324 0179 00       		.byte	0
 2325 017a 49       		.uleb128 0x49
 2326 017b 13       		.uleb128 0x13
 2327 017c 2F       		.uleb128 0x2f
 2328 017d 0B       		.uleb128 0xb
 2329 017e 00       		.byte	0
 2330 017f 00       		.byte	0
 2331 0180 1A       		.uleb128 0x1a
 2332 0181 0F       		.uleb128 0xf
 2333 0182 00       		.byte	0
 2334 0183 0B       		.uleb128 0xb
 2335 0184 0B       		.uleb128 0xb
 2336 0185 49       		.uleb128 0x49
 2337 0186 13       		.uleb128 0x13
 2338 0187 00       		.byte	0
 2339 0188 00       		.byte	0
 2340 0189 1B       		.uleb128 0x1b
 2341 018a 26       		.uleb128 0x26
 2342 018b 00       		.byte	0
 2343 018c 49       		.uleb128 0x49
 2344 018d 13       		.uleb128 0x13
 2345 018e 00       		.byte	0
 2346 018f 00       		.byte	0
 2347 0190 1C       		.uleb128 0x1c
 2348 0191 2E       		.uleb128 0x2e
 2349 0192 00       		.byte	0
 2350 0193 3F       		.uleb128 0x3f
 2351 0194 19       		.uleb128 0x19
 2352 0195 3C       		.uleb128 0x3c
 2353 0196 19       		.uleb128 0x19
 2354 0197 6E       		.uleb128 0x6e
 2355 0198 0E       		.uleb128 0xe
 2356 0199 03       		.uleb128 0x3
 2357 019a 0E       		.uleb128 0xe
 2358 019b 3A       		.uleb128 0x3a
 2359 019c 0B       		.uleb128 0xb
 2360 019d 3B       		.uleb128 0x3b
 2361 019e 0B       		.uleb128 0xb
 2362 019f 00       		.byte	0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 78


 2363 01a0 00       		.byte	0
 2364 01a1 1D       		.uleb128 0x1d
 2365 01a2 2E       		.uleb128 0x2e
 2366 01a3 00       		.byte	0
 2367 01a4 3F       		.uleb128 0x3f
 2368 01a5 19       		.uleb128 0x19
 2369 01a6 3C       		.uleb128 0x3c
 2370 01a7 19       		.uleb128 0x19
 2371 01a8 6E       		.uleb128 0x6e
 2372 01a9 0E       		.uleb128 0xe
 2373 01aa 03       		.uleb128 0x3
 2374 01ab 0E       		.uleb128 0xe
 2375 01ac 3A       		.uleb128 0x3a
 2376 01ad 0B       		.uleb128 0xb
 2377 01ae 3B       		.uleb128 0x3b
 2378 01af 05       		.uleb128 0x5
 2379 01b0 00       		.byte	0
 2380 01b1 00       		.byte	0
 2381 01b2 00       		.byte	0
 2382              		.section	.debug_loc,"",%progbits
 2383              	.Ldebug_loc0:
 2384              	.LLST0:
 2385 0000 08000000 		.4byte	.LVL1
 2386 0004 58000000 		.4byte	.LVL6
 2387 0008 0100     		.2byte	0x1
 2388 000a 54       		.byte	0x54
 2389 000b 00000000 		.4byte	0
 2390 000f 00000000 		.4byte	0
 2391              	.LLST1:
 2392 0013 00000000 		.4byte	.LVL7
 2393 0017 00000000 		.4byte	.LVL7
 2394 001b 0100     		.2byte	0x1
 2395 001d 50       		.byte	0x50
 2396 001e 00000000 		.4byte	.LVL7
 2397 0022 04000000 		.4byte	.LVL8
 2398 0026 0400     		.2byte	0x4
 2399 0028 F3       		.byte	0xf3
 2400 0029 01       		.uleb128 0x1
 2401 002a 50       		.byte	0x50
 2402 002b 9F       		.byte	0x9f
 2403 002c 04000000 		.4byte	.LVL8
 2404 0030 20000000 		.4byte	.LFE4
 2405 0034 0100     		.2byte	0x1
 2406 0036 50       		.byte	0x50
 2407 0037 00000000 		.4byte	0
 2408 003b 00000000 		.4byte	0
 2409              	.LLST2:
 2410 003f 12000000 		.4byte	.LVL9
 2411 0043 1A000000 		.4byte	.LVL10
 2412 0047 0100     		.2byte	0x1
 2413 0049 53       		.byte	0x53
 2414 004a 00000000 		.4byte	0
 2415 004e 00000000 		.4byte	0
 2416              	.LLST3:
 2417 0052 00000000 		.4byte	.LVL11
 2418 0056 06000000 		.4byte	.LVL12
 2419 005a 0100     		.2byte	0x1
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 79


 2420 005c 50       		.byte	0x50
 2421 005d 06000000 		.4byte	.LVL12
 2422 0061 0C000000 		.4byte	.LFE9
 2423 0065 0400     		.2byte	0x4
 2424 0067 F3       		.byte	0xf3
 2425 0068 01       		.uleb128 0x1
 2426 0069 50       		.byte	0x50
 2427 006a 9F       		.byte	0x9f
 2428 006b 00000000 		.4byte	0
 2429 006f 00000000 		.4byte	0
 2430              	.LLST4:
 2431 0073 00000000 		.4byte	.LVL13
 2432 0077 15000000 		.4byte	.LVL15-1
 2433 007b 0100     		.2byte	0x1
 2434 007d 50       		.byte	0x50
 2435 007e 15000000 		.4byte	.LVL15-1
 2436 0082 20000000 		.4byte	.LFE11
 2437 0086 0400     		.2byte	0x4
 2438 0088 F3       		.byte	0xf3
 2439 0089 01       		.uleb128 0x1
 2440 008a 50       		.byte	0x50
 2441 008b 9F       		.byte	0x9f
 2442 008c 00000000 		.4byte	0
 2443 0090 00000000 		.4byte	0
 2444              	.LLST5:
 2445 0094 00000000 		.4byte	.LVL16
 2446 0098 05000000 		.4byte	.LVL18-1
 2447 009c 0100     		.2byte	0x1
 2448 009e 50       		.byte	0x50
 2449 009f 05000000 		.4byte	.LVL18-1
 2450 00a3 20000000 		.4byte	.LFE12
 2451 00a7 0400     		.2byte	0x4
 2452 00a9 F3       		.byte	0xf3
 2453 00aa 01       		.uleb128 0x1
 2454 00ab 50       		.byte	0x50
 2455 00ac 9F       		.byte	0x9f
 2456 00ad 00000000 		.4byte	0
 2457 00b1 00000000 		.4byte	0
 2458              	.LLST6:
 2459 00b5 02000000 		.4byte	.LVL19
 2460 00b9 06000000 		.4byte	.LVL20
 2461 00bd 0200     		.2byte	0x2
 2462 00bf 30       		.byte	0x30
 2463 00c0 9F       		.byte	0x9f
 2464 00c1 06000000 		.4byte	.LVL20
 2465 00c5 0E000000 		.4byte	.LVL22
 2466 00c9 0100     		.2byte	0x1
 2467 00cb 54       		.byte	0x54
 2468 00cc 10000000 		.4byte	.LVL23
 2469 00d0 16000000 		.4byte	.LFE10
 2470 00d4 0100     		.2byte	0x1
 2471 00d6 54       		.byte	0x54
 2472 00d7 00000000 		.4byte	0
 2473 00db 00000000 		.4byte	0
 2474              	.LLST7:
 2475 00df 00000000 		.4byte	.LVL28
 2476 00e3 27000000 		.4byte	.LVL29-1
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 80


 2477 00e7 0100     		.2byte	0x1
 2478 00e9 50       		.byte	0x50
 2479 00ea 27000000 		.4byte	.LVL29-1
 2480 00ee 4C000000 		.4byte	.LFE14
 2481 00f2 0400     		.2byte	0x4
 2482 00f4 F3       		.byte	0xf3
 2483 00f5 01       		.uleb128 0x1
 2484 00f6 50       		.byte	0x50
 2485 00f7 9F       		.byte	0x9f
 2486 00f8 00000000 		.4byte	0
 2487 00fc 00000000 		.4byte	0
 2488              	.LLST8:
 2489 0100 00000000 		.4byte	.LVL31
 2490 0104 06000000 		.4byte	.LVL32
 2491 0108 0100     		.2byte	0x1
 2492 010a 50       		.byte	0x50
 2493 010b 06000000 		.4byte	.LVL32
 2494 010f 08000000 		.4byte	.LVL33
 2495 0113 0200     		.2byte	0x2
 2496 0115 73       		.byte	0x73
 2497 0116 00       		.sleb128 0
 2498 0117 08000000 		.4byte	.LVL33
 2499 011b 0A000000 		.4byte	.LVL34
 2500 011f 0500     		.2byte	0x5
 2501 0121 0C       		.byte	0xc
 2502 0122 28640040 		.4byte	0x40006428
 2503 0126 0A000000 		.4byte	.LVL34
 2504 012a 10000000 		.4byte	.LFE15
 2505 012e 0400     		.2byte	0x4
 2506 0130 F3       		.byte	0xf3
 2507 0131 01       		.uleb128 0x1
 2508 0132 50       		.byte	0x50
 2509 0133 9F       		.byte	0x9f
 2510 0134 00000000 		.4byte	0
 2511 0138 00000000 		.4byte	0
 2512              	.LLST9:
 2513 013c 00000000 		.4byte	.LVL35
 2514 0140 0A000000 		.4byte	.LVL37
 2515 0144 0100     		.2byte	0x1
 2516 0146 50       		.byte	0x50
 2517 0147 0A000000 		.4byte	.LVL37
 2518 014b 2C000000 		.4byte	.LFE5
 2519 014f 0400     		.2byte	0x4
 2520 0151 F3       		.byte	0xf3
 2521 0152 01       		.uleb128 0x1
 2522 0153 50       		.byte	0x50
 2523 0154 9F       		.byte	0x9f
 2524 0155 00000000 		.4byte	0
 2525 0159 00000000 		.4byte	0
 2526              	.LLST10:
 2527 015d 00000000 		.4byte	.LVL40
 2528 0161 07000000 		.4byte	.LVL41-1
 2529 0165 0100     		.2byte	0x1
 2530 0167 50       		.byte	0x50
 2531 0168 07000000 		.4byte	.LVL41-1
 2532 016c 34000000 		.4byte	.LFE13
 2533 0170 0400     		.2byte	0x4
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 81


 2534 0172 F3       		.byte	0xf3
 2535 0173 01       		.uleb128 0x1
 2536 0174 50       		.byte	0x50
 2537 0175 9F       		.byte	0x9f
 2538 0176 00000000 		.4byte	0
 2539 017a 00000000 		.4byte	0
 2540              	.LLST11:
 2541 017e 00000000 		.4byte	.LVL43
 2542 0182 13000000 		.4byte	.LVL44-1
 2543 0186 0100     		.2byte	0x1
 2544 0188 50       		.byte	0x50
 2545 0189 13000000 		.4byte	.LVL44-1
 2546 018d 20000000 		.4byte	.LFE6
 2547 0191 0400     		.2byte	0x4
 2548 0193 F3       		.byte	0xf3
 2549 0194 01       		.uleb128 0x1
 2550 0195 50       		.byte	0x50
 2551 0196 9F       		.byte	0x9f
 2552 0197 00000000 		.4byte	0
 2553 019b 00000000 		.4byte	0
 2554              	.LLST12:
 2555 019f 00000000 		.4byte	.LVL47
 2556 01a3 04000000 		.4byte	.LVL48
 2557 01a7 0200     		.2byte	0x2
 2558 01a9 30       		.byte	0x30
 2559 01aa 9F       		.byte	0x9f
 2560 01ab 04000000 		.4byte	.LVL48
 2561 01af 0C000000 		.4byte	.LFE16
 2562 01b3 0100     		.2byte	0x1
 2563 01b5 50       		.byte	0x50
 2564 01b6 00000000 		.4byte	0
 2565 01ba 00000000 		.4byte	0
 2566              	.LLST13:
 2567 01be 10000000 		.4byte	.LVL53
 2568 01c2 27000000 		.4byte	.LVL54-1
 2569 01c6 0100     		.2byte	0x1
 2570 01c8 50       		.byte	0x50
 2571 01c9 42000000 		.4byte	.LVL55
 2572 01cd 59000000 		.4byte	.LVL56-1
 2573 01d1 0100     		.2byte	0x1
 2574 01d3 50       		.byte	0x50
 2575 01d4 00000000 		.4byte	0
 2576 01d8 00000000 		.4byte	0
 2577              		.section	.debug_aranges,"",%progbits
 2578 0000 AC000000 		.4byte	0xac
 2579 0004 0200     		.2byte	0x2
 2580 0006 00000000 		.4byte	.Ldebug_info0
 2581 000a 04       		.byte	0x4
 2582 000b 00       		.byte	0
 2583 000c 0000     		.2byte	0
 2584 000e 0000     		.2byte	0
 2585 0010 00000000 		.4byte	.LFB1
 2586 0014 68000000 		.4byte	.LFE1-.LFB1
 2587 0018 00000000 		.4byte	.LFB4
 2588 001c 20000000 		.4byte	.LFE4-.LFB4
 2589 0020 00000000 		.4byte	.LFB8
 2590 0024 10000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 82


 2591 0028 00000000 		.4byte	.LFB9
 2592 002c 0C000000 		.4byte	.LFE9-.LFB9
 2593 0030 00000000 		.4byte	.LFB11
 2594 0034 20000000 		.4byte	.LFE11-.LFB11
 2595 0038 00000000 		.4byte	.LFB12
 2596 003c 20000000 		.4byte	.LFE12-.LFB12
 2597 0040 00000000 		.4byte	.LFB10
 2598 0044 16000000 		.4byte	.LFE10-.LFB10
 2599 0048 00000000 		.4byte	.LFB3
 2600 004c 68000000 		.4byte	.LFE3-.LFB3
 2601 0050 00000000 		.4byte	.LFB14
 2602 0054 4C000000 		.4byte	.LFE14-.LFB14
 2603 0058 00000000 		.4byte	.LFB15
 2604 005c 10000000 		.4byte	.LFE15-.LFB15
 2605 0060 00000000 		.4byte	.LFB5
 2606 0064 2C000000 		.4byte	.LFE5-.LFB5
 2607 0068 00000000 		.4byte	.LFB13
 2608 006c 34000000 		.4byte	.LFE13-.LFB13
 2609 0070 00000000 		.4byte	.LFB6
 2610 0074 20000000 		.4byte	.LFE6-.LFB6
 2611 0078 00000000 		.4byte	.LFB7
 2612 007c 38000000 		.4byte	.LFE7-.LFB7
 2613 0080 00000000 		.4byte	.LFB16
 2614 0084 0C000000 		.4byte	.LFE16-.LFB16
 2615 0088 00000000 		.4byte	.LFB17
 2616 008c 0C000000 		.4byte	.LFE17-.LFB17
 2617 0090 00000000 		.4byte	.LFB18
 2618 0094 20000000 		.4byte	.LFE18-.LFB18
 2619 0098 00000000 		.4byte	.LFB0
 2620 009c E4000000 		.4byte	.LFE0-.LFB0
 2621 00a0 00000000 		.4byte	.LFB2
 2622 00a4 2C000000 		.4byte	.LFE2-.LFB2
 2623 00a8 00000000 		.4byte	0
 2624 00ac 00000000 		.4byte	0
 2625              		.section	.debug_ranges,"",%progbits
 2626              	.Ldebug_ranges0:
 2627 0000 00000000 		.4byte	.LFB1
 2628 0004 68000000 		.4byte	.LFE1
 2629 0008 00000000 		.4byte	.LFB4
 2630 000c 20000000 		.4byte	.LFE4
 2631 0010 00000000 		.4byte	.LFB8
 2632 0014 10000000 		.4byte	.LFE8
 2633 0018 00000000 		.4byte	.LFB9
 2634 001c 0C000000 		.4byte	.LFE9
 2635 0020 00000000 		.4byte	.LFB11
 2636 0024 20000000 		.4byte	.LFE11
 2637 0028 00000000 		.4byte	.LFB12
 2638 002c 20000000 		.4byte	.LFE12
 2639 0030 00000000 		.4byte	.LFB10
 2640 0034 16000000 		.4byte	.LFE10
 2641 0038 00000000 		.4byte	.LFB3
 2642 003c 68000000 		.4byte	.LFE3
 2643 0040 00000000 		.4byte	.LFB14
 2644 0044 4C000000 		.4byte	.LFE14
 2645 0048 00000000 		.4byte	.LFB15
 2646 004c 10000000 		.4byte	.LFE15
 2647 0050 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 83


 2648 0054 2C000000 		.4byte	.LFE5
 2649 0058 00000000 		.4byte	.LFB13
 2650 005c 34000000 		.4byte	.LFE13
 2651 0060 00000000 		.4byte	.LFB6
 2652 0064 20000000 		.4byte	.LFE6
 2653 0068 00000000 		.4byte	.LFB7
 2654 006c 38000000 		.4byte	.LFE7
 2655 0070 00000000 		.4byte	.LFB16
 2656 0074 0C000000 		.4byte	.LFE16
 2657 0078 00000000 		.4byte	.LFB17
 2658 007c 0C000000 		.4byte	.LFE17
 2659 0080 00000000 		.4byte	.LFB18
 2660 0084 20000000 		.4byte	.LFE18
 2661 0088 00000000 		.4byte	.LFB0
 2662 008c E4000000 		.4byte	.LFE0
 2663 0090 00000000 		.4byte	.LFB2
 2664 0094 2C000000 		.4byte	.LFE2
 2665 0098 00000000 		.4byte	0
 2666 009c 00000000 		.4byte	0
 2667              		.section	.debug_line,"",%progbits
 2668              	.Ldebug_line0:
 2669 0000 AE020000 		.section	.debug_str,"MS",%progbits,1
 2669      0200C900 
 2669      00000201 
 2669      FB0E0D00 
 2669      01010101 
 2670              	.LASF10:
 2671 0000 75696E74 		.ascii	"uint16\000"
 2671      313600
 2672              	.LASF50:
 2673 0007 43617053 		.ascii	"CapSense_csv\000"
 2673      656E7365 
 2673      5F637376 
 2673      00
 2674              	.LASF66:
 2675 0014 43794578 		.ascii	"CyExitCriticalSection\000"
 2675      69744372 
 2675      69746963 
 2675      616C5365 
 2675      6374696F 
 2676              	.LASF82:
 2677 002a 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense.c\000"
 2677      72617465 
 2677      645F536F 
 2677      75726365 
 2677      5C50536F 
 2678              	.LASF48:
 2679 004c 43617053 		.ascii	"CapSense_initVar\000"
 2679      656E7365 
 2679      5F696E69 
 2679      74566172 
 2679      00
 2680              	.LASF54:
 2681 005d 43617053 		.ascii	"CapSense_pcTable\000"
 2681      656E7365 
 2681      5F706354 
 2681      61626C65 
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 84


 2681      00
 2682              	.LASF83:
 2683 006e 433A5C55 		.ascii	"C:\\Users\\nikol\\Documents\\git\\3. Semester\\PRJ3"
 2683      73657273 
 2683      5C6E696B 
 2683      6F6C5C44 
 2683      6F63756D 
 2684 009b 5C706C61 		.ascii	"\\player_side_app\\CupSensor_IF\\CupSensor_IF_v1.cy"
 2684      7965725F 
 2684      73696465 
 2684      5F617070 
 2684      5C437570 
 2685 00cb 64736E00 		.ascii	"dsn\000"
 2686              	.LASF49:
 2687 00cf 43617053 		.ascii	"CapSense_lowLevelTuningDone\000"
 2687      656E7365 
 2687      5F6C6F77 
 2687      4C657665 
 2687      6C54756E 
 2688              	.LASF72:
 2689 00eb 43617053 		.ascii	"CapSense_IdacCH0_SetValue\000"
 2689      656E7365 
 2689      5F496461 
 2689      63434830 
 2689      5F536574 
 2690              	.LASF24:
 2691 0105 736E7349 		.ascii	"snsIndex\000"
 2691      6E646578 
 2691      00
 2692              	.LASF7:
 2693 010e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2693      206C6F6E 
 2693      6720756E 
 2693      7369676E 
 2693      65642069 
 2694              	.LASF64:
 2695 0125 43617053 		.ascii	"CapSense_CompCH0_Enable\000"
 2695      656E7365 
 2695      5F436F6D 
 2695      70434830 
 2695      5F456E61 
 2696              	.LASF26:
 2697 013d 43617053 		.ascii	"CapSense_Enable\000"
 2697      656E7365 
 2697      5F456E61 
 2697      626C6500 
 2698              	.LASF34:
 2699 014d 43617053 		.ascii	"CapSense_SetPrescaler\000"
 2699      656E7365 
 2699      5F536574 
 2699      50726573 
 2699      63616C65 
 2700              	.LASF6:
 2701 0163 6C6F6E67 		.ascii	"long long int\000"
 2701      206C6F6E 
 2701      6720696E 
 2701      7400
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 85


 2702              	.LASF0:
 2703 0171 7369676E 		.ascii	"signed char\000"
 2703      65642063 
 2703      68617200 
 2704              	.LASF45:
 2705 017d 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 2705      656E7365 
 2705      5F536574 
 2705      416E616C 
 2705      6F675377 
 2706              	.LASF4:
 2707 019e 6C6F6E67 		.ascii	"long int\000"
 2707      20696E74 
 2707      00
 2708              	.LASF16:
 2709 01a7 72656731 		.ascii	"reg16\000"
 2709      3600
 2710              	.LASF9:
 2711 01ad 75696E74 		.ascii	"uint8\000"
 2711      3800
 2712              	.LASF75:
 2713 01b3 43617053 		.ascii	"CapSense_AMuxCH0_Init\000"
 2713      656E7365 
 2713      5F414D75 
 2713      78434830 
 2713      5F496E69 
 2714              	.LASF13:
 2715 01c9 646F7562 		.ascii	"double\000"
 2715      6C6500
 2716              	.LASF27:
 2717 01d0 43617053 		.ascii	"CapSense_EnableSensor\000"
 2717      656E7365 
 2717      5F456E61 
 2717      626C6553 
 2717      656E736F 
 2718              	.LASF71:
 2719 01e6 43617053 		.ascii	"CapSense_IdacCH0_Stop\000"
 2719      656E7365 
 2719      5F496461 
 2719      63434830 
 2719      5F53746F 
 2720              	.LASF61:
 2721 01fc 43617053 		.ascii	"CapSense_widgetNumber\000"
 2721      656E7365 
 2721      5F776964 
 2721      6765744E 
 2721      756D6265 
 2722              	.LASF23:
 2723 0212 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 2723      656E7365 
 2723      5F526561 
 2723      6453656E 
 2723      736F7252 
 2724              	.LASF11:
 2725 0229 75696E74 		.ascii	"uint32\000"
 2725      333200
 2726              	.LASF73:
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 86


 2727 0230 4379496E 		.ascii	"CyIntSetVector\000"
 2727      74536574 
 2727      56656374 
 2727      6F7200
 2728              	.LASF29:
 2729 023f 6D61736B 		.ascii	"mask\000"
 2729      00
 2730              	.LASF76:
 2731 0244 43617053 		.ascii	"CapSense_CompCH0_Init\000"
 2731      656E7365 
 2731      5F436F6D 
 2731      70434830 
 2731      5F496E69 
 2732              	.LASF28:
 2733 025a 706F7274 		.ascii	"port\000"
 2733      00
 2734              	.LASF51:
 2735 025f 43617053 		.ascii	"CapSense_sensorIndex\000"
 2735      656E7365 
 2735      5F73656E 
 2735      736F7249 
 2735      6E646578 
 2736              	.LASF40:
 2737 0274 43617053 		.ascii	"CapSense_ScanSensor\000"
 2737      656E7365 
 2737      5F536361 
 2737      6E53656E 
 2737      736F7200 
 2738              	.LASF8:
 2739 0288 756E7369 		.ascii	"unsigned int\000"
 2739      676E6564 
 2739      20696E74 
 2739      00
 2740              	.LASF31:
 2741 0295 43617053 		.ascii	"CapSense_ClearSensors\000"
 2741      656E7365 
 2741      5F436C65 
 2741      61725365 
 2741      6E736F72 
 2742              	.LASF79:
 2743 02ab 43617053 		.ascii	"CapSense_IdacCH0_SetRange\000"
 2743      656E7365 
 2743      5F496461 
 2743      63434830 
 2743      5F536574 
 2744              	.LASF5:
 2745 02c5 6C6F6E67 		.ascii	"long unsigned int\000"
 2745      20756E73 
 2745      69676E65 
 2745      6420696E 
 2745      7400
 2746              	.LASF56:
 2747 02d7 43617053 		.ascii	"CapSense_maskTable\000"
 2747      656E7365 
 2747      5F6D6173 
 2747      6B546162 
 2747      6C6500
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 87


 2748              	.LASF55:
 2749 02ea 43617053 		.ascii	"CapSense_portTable\000"
 2749      656E7365 
 2749      5F706F72 
 2749      74546162 
 2749      6C6500
 2750              	.LASF63:
 2751 02fd 43617053 		.ascii	"CapSense_IntClock_Start\000"
 2751      656E7365 
 2751      5F496E74 
 2751      436C6F63 
 2751      6B5F5374 
 2752              	.LASF62:
 2753 0315 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2753      74657243 
 2753      72697469 
 2753      63616C53 
 2753      65637469 
 2754              	.LASF3:
 2755 032c 73686F72 		.ascii	"short unsigned int\000"
 2755      7420756E 
 2755      7369676E 
 2755      65642069 
 2755      6E7400
 2756              	.LASF69:
 2757 033f 43617053 		.ascii	"CapSense_IntClock_Stop\000"
 2757      656E7365 
 2757      5F496E74 
 2757      436C6F63 
 2757      6B5F5374 
 2758              	.LASF25:
 2759 0356 73656E73 		.ascii	"sensor\000"
 2759      6F7200
 2760              	.LASF53:
 2761 035d 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2761      656E7365 
 2761      5F73656E 
 2761      736F7245 
 2761      6E61626C 
 2762              	.LASF37:
 2763 0377 736C6F74 		.ascii	"slot\000"
 2763      00
 2764              	.LASF80:
 2765 037c 43617053 		.ascii	"CapSense_AutoTune\000"
 2765      656E7365 
 2765      5F417574 
 2765      6F54756E 
 2765      6500
 2766              	.LASF17:
 2767 038e 72656733 		.ascii	"reg32\000"
 2767      3200
 2768              	.LASF60:
 2769 0394 43617053 		.ascii	"CapSense_analogSwitchDivider\000"
 2769      656E7365 
 2769      5F616E61 
 2769      6C6F6753 
 2769      77697463 
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 88


 2770              	.LASF19:
 2771 03b1 73697A65 		.ascii	"sizetype\000"
 2771      74797065 
 2771      00
 2772              	.LASF57:
 2773 03ba 43617053 		.ascii	"CapSense_csTable\000"
 2773      656E7365 
 2773      5F637354 
 2773      61626C65 
 2773      00
 2774              	.LASF18:
 2775 03cb 6C6F6E67 		.ascii	"long double\000"
 2775      20646F75 
 2775      626C6500 
 2776              	.LASF32:
 2777 03d7 43617053 		.ascii	"CapSense_Stop\000"
 2777      656E7365 
 2777      5F53746F 
 2777      7000
 2778              	.LASF44:
 2779 03e5 7363616E 		.ascii	"scanSpeed\000"
 2779      53706565 
 2779      6400
 2780              	.LASF21:
 2781 03ef 656E4D61 		.ascii	"enMask\000"
 2781      736B00
 2782              	.LASF78:
 2783 03f6 43617053 		.ascii	"CapSense_IdacCH0_SetPolarity\000"
 2783      656E7365 
 2783      5F496461 
 2783      63434830 
 2783      5F536574 
 2784              	.LASF74:
 2785 0413 4379496E 		.ascii	"CyIntSetPriority\000"
 2785      74536574 
 2785      5072696F 
 2785      72697479 
 2785      00
 2786              	.LASF58:
 2787 0424 43617053 		.ascii	"CapSense_idacSettings\000"
 2787      656E7365 
 2787      5F696461 
 2787      63536574 
 2787      74696E67 
 2788              	.LASF12:
 2789 043a 666C6F61 		.ascii	"float\000"
 2789      7400
 2790              	.LASF35:
 2791 0440 70726573 		.ascii	"prescaler\000"
 2791      63616C65 
 2791      7200
 2792              	.LASF15:
 2793 044a 72656738 		.ascii	"reg8\000"
 2793      00
 2794              	.LASF22:
 2795 044f 43617053 		.ascii	"CapSense_FindNextSensor\000"
 2795      656E7365 
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 89


 2795      5F46696E 
 2795      644E6578 
 2795      7453656E 
 2796              	.LASF1:
 2797 0467 756E7369 		.ascii	"unsigned char\000"
 2797      676E6564 
 2797      20636861 
 2797      7200
 2798              	.LASF77:
 2799 0475 43617053 		.ascii	"CapSense_IdacCH0_Init\000"
 2799      656E7365 
 2799      5F496461 
 2799      63434830 
 2799      5F496E69 
 2800              	.LASF59:
 2801 048b 43617053 		.ascii	"CapSense_widgetResolution\000"
 2801      656E7365 
 2801      5F776964 
 2801      67657452 
 2801      65736F6C 
 2802              	.LASF2:
 2803 04a5 73686F72 		.ascii	"short int\000"
 2803      7420696E 
 2803      7400
 2804              	.LASF38:
 2805 04af 77696467 		.ascii	"widget\000"
 2805      657400
 2806              	.LASF36:
 2807 04b6 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 2807      656E7365 
 2807      5F536574 
 2807      5363616E 
 2807      536C6F74 
 2808              	.LASF42:
 2809 04d3 43617053 		.ascii	"CapSense_GetPrescaler\000"
 2809      656E7365 
 2809      5F476574 
 2809      50726573 
 2809      63616C65 
 2810              	.LASF81:
 2811 04e9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2811      43313120 
 2811      352E342E 
 2811      31203230 
 2811      31363036 
 2812 051c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2812      20726576 
 2812      6973696F 
 2812      6E203233 
 2812      37373135 
 2813 054f 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2813      66756E63 
 2813      74696F6E 
 2813      2D736563 
 2813      74696F6E 
 2814              	.LASF14:
 2815 0577 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 90


 2815      00
 2816              	.LASF65:
 2817 057c 43617053 		.ascii	"CapSense_IdacCH0_Enable\000"
 2817      656E7365 
 2817      5F496461 
 2817      63434830 
 2817      5F456E61 
 2818              	.LASF43:
 2819 0594 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 2819      656E7365 
 2819      5F536574 
 2819      5363616E 
 2819      53706565 
 2820              	.LASF67:
 2821 05aa 43617053 		.ascii	"CapSense_AMuxCH0_Set\000"
 2821      656E7365 
 2821      5F414D75 
 2821      78434830 
 2821      5F536574 
 2822              	.LASF47:
 2823 05bf 43617053 		.ascii	"CapSense_Start\000"
 2823      656E7365 
 2823      5F537461 
 2823      727400
 2824              	.LASF33:
 2825 05ce 43617053 		.ascii	"CapSense_PostScan\000"
 2825      656E7365 
 2825      5F506F73 
 2825      74536361 
 2825      6E00
 2826              	.LASF20:
 2827 05e0 656E6162 		.ascii	"enableInterrupts\000"
 2827      6C65496E 
 2827      74657272 
 2827      75707473 
 2827      00
 2828              	.LASF70:
 2829 05f1 43617053 		.ascii	"CapSense_CompCH0_Stop\000"
 2829      656E7365 
 2829      5F436F6D 
 2829      70434830 
 2829      5F53746F 
 2830              	.LASF30:
 2831 0607 43617053 		.ascii	"CapSense_DisableSensor\000"
 2831      656E7365 
 2831      5F446973 
 2831      61626C65 
 2831      53656E73 
 2832              	.LASF39:
 2833 061e 43617053 		.ascii	"CapSense_PreScan\000"
 2833      656E7365 
 2833      5F507265 
 2833      5363616E 
 2833      00
 2834              	.LASF46:
 2835 062f 43617053 		.ascii	"CapSense_Init\000"
 2835      656E7365 
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccvX3yzJ.s 			page 91


 2835      5F496E69 
 2835      7400
 2836              	.LASF52:
 2837 063d 43617053 		.ascii	"CapSense_sensorRaw\000"
 2837      656E7365 
 2837      5F73656E 
 2837      736F7252 
 2837      617700
 2838              	.LASF41:
 2839 0650 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 2839      656E7365 
 2839      5F536361 
 2839      6E456E61 
 2839      626C6564 
 2840              	.LASF68:
 2841 066c 43617053 		.ascii	"CapSense_AMuxCH0_Unset\000"
 2841      656E7365 
 2841      5F414D75 
 2841      78434830 
 2841      5F556E73 
 2842              	.LASF84:
 2843 0683 43617053 		.ascii	"CapSense_IsBusy\000"
 2843      656E7365 
 2843      5F497342 
 2843      75737900 
 2844              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
