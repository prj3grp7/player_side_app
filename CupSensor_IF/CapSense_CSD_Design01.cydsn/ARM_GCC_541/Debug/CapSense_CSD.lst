ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	CapSense_CSD_initVar:
  21 0000 00       		.space	1
  22              		.comm	CapSense_CSD_csv,1,1
  23              		.comm	CapSense_CSD_sensorIndex,1,1
  24              		.comm	CapSense_CSD_sensorRaw,2,4
  25              		.global	CapSense_CSD_sensorEnableMask
  26              		.data
  27              		.align	2
  28              		.type	CapSense_CSD_sensorEnableMask, %object
  29              		.size	CapSense_CSD_sensorEnableMask, 1
  30              	CapSense_CSD_sensorEnableMask:
  31 0000 01       		.byte	1
  32              		.global	CapSense_CSD_pcTable
  33              		.section	.rodata
  34              		.align	2
  35              		.type	CapSense_CSD_pcTable, %object
  36              		.size	CapSense_CSD_pcTable, 4
  37              	CapSense_CSD_pcTable:
  38 0000 10500040 		.word	1073762320
  39              		.global	CapSense_CSD_portTable
  40              		.align	2
  41              		.type	CapSense_CSD_portTable, %object
  42              		.size	CapSense_CSD_portTable, 1
  43              	CapSense_CSD_portTable:
  44 0004 02       		.byte	2
  45              		.global	CapSense_CSD_maskTable
  46 0005 000000   		.align	2
  47              		.type	CapSense_CSD_maskTable, %object
  48              		.size	CapSense_CSD_maskTable, 1
  49              	CapSense_CSD_maskTable:
  50 0008 01       		.byte	1
  51              		.global	CapSense_CSD_csTable
  52 0009 000000   		.align	2
  53              		.type	CapSense_CSD_csTable, %object
  54              		.size	CapSense_CSD_csTable, 32
  55              	CapSense_CSD_csTable:
  56 000c 06520040 		.word	1073762822
  57 0010 0E520040 		.word	1073762830
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 2


  58 0014 16520040 		.word	1073762838
  59 0018 1E520040 		.word	1073762846
  60 001c 26520040 		.word	1073762854
  61 0020 2E520040 		.word	1073762862
  62 0024 36520040 		.word	1073762870
  63 0028 7E520040 		.word	1073762942
  64              		.global	CapSense_CSD_idacSettings
  65              		.data
  66 0001 000000   		.align	2
  67              		.type	CapSense_CSD_idacSettings, %object
  68              		.size	CapSense_CSD_idacSettings, 1
  69              	CapSense_CSD_idacSettings:
  70 0004 2B       		.byte	43
  71              		.global	CapSense_CSD_widgetResolution
  72 0005 000000   		.align	2
  73              		.type	CapSense_CSD_widgetResolution, %object
  74              		.size	CapSense_CSD_widgetResolution, 1
  75              	CapSense_CSD_widgetResolution:
  76 0008 3F       		.byte	63
  77              		.global	CapSense_CSD_analogSwitchDivider
  78 0009 000000   		.align	2
  79              		.type	CapSense_CSD_analogSwitchDivider, %object
  80              		.size	CapSense_CSD_analogSwitchDivider, 1
  81              	CapSense_CSD_analogSwitchDivider:
  82 000c 01       		.byte	1
  83              		.global	CapSense_CSD_widgetNumber
  84              		.section	.rodata
  85              		.align	2
  86              		.type	CapSense_CSD_widgetNumber, %object
  87              		.size	CapSense_CSD_widgetNumber, 1
  88              	CapSense_CSD_widgetNumber:
  89 002c 00       		.space	1
  90              		.section	.text.CapSense_CSD_Init,"ax",%progbits
  91              		.align	2
  92              		.global	CapSense_CSD_Init
  93              		.thumb
  94              		.thumb_func
  95              		.type	CapSense_CSD_Init, %function
  96              	CapSense_CSD_Init:
  97              	.LFB0:
  98              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSD.c"
   1:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSD.c **** * File Name: CapSense_CSD.c
   3:Generated_Source\PSoC5/CapSense_CSD.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSD.c **** *
   5:Generated_Source\PSoC5/CapSense_CSD.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSD.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense_CSD.c **** *  component.
   8:Generated_Source\PSoC5/CapSense_CSD.c **** *
   9:Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSD.c **** *
  11:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSD.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSD.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSD.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSD.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 3


  17:Generated_Source\PSoC5/CapSense_CSD.c **** 
  18:Generated_Source\PSoC5/CapSense_CSD.c **** #include "CapSense_CSD.h"
  19:Generated_Source\PSoC5/CapSense_CSD.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense_CSD.c **** 
  21:Generated_Source\PSoC5/CapSense_CSD.c **** 
  22:Generated_Source\PSoC5/CapSense_CSD.c **** static uint8 CapSense_CSD_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense_CSD.c ****             
  24:Generated_Source\PSoC5/CapSense_CSD.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense_CSD.c **** 
  28:Generated_Source\PSoC5/CapSense_CSD.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_lowLevelTuningDone = 1u;
  31:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense_CSD.c **** 
  33:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8  CapSense_CSD_extRbCh0Cur = CapSense_CSD_RBLEED1;
  35:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8  CapSense_CSD_extRbCh1Cur = (CapSense_CSD_RBLEED1 + CapSense_CSD_TOTAL_RB_NUMBER__CH0
  37:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense_CSD.c ****         
  40:Generated_Source\PSoC5/CapSense_CSD.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense_CSD.c **** 
  43:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_sensorEnableMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense_CSD.c **** 0x1u, };
  45:Generated_Source\PSoC5/CapSense_CSD.c **** 
  46:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__Button0__BTN__PC, 
  48:Generated_Source\PSoC5/CapSense_CSD.c **** };
  49:Generated_Source\PSoC5/CapSense_CSD.c **** 
  50:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_portTable[] = {
  51:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button0__BTN__PORT, 
  52:Generated_Source\PSoC5/CapSense_CSD.c **** };
  53:Generated_Source\PSoC5/CapSense_CSD.c **** 
  54:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_maskTable[] = {
  55:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button0__BTN__MASK,
  56:Generated_Source\PSoC5/CapSense_CSD.c **** };
  57:Generated_Source\PSoC5/CapSense_CSD.c **** 
  58:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_csTable[] = {
  59:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  60:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  61:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  62:Generated_Source\PSoC5/CapSense_CSD.c **** };
  63:Generated_Source\PSoC5/CapSense_CSD.c **** 
  64:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_idacSettings[] = {
  65:Generated_Source\PSoC5/CapSense_CSD.c ****     43u,
  66:Generated_Source\PSoC5/CapSense_CSD.c **** };
  67:Generated_Source\PSoC5/CapSense_CSD.c **** 
  68:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_widgetResolution[] = {
  69:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_14_BITS,
  70:Generated_Source\PSoC5/CapSense_CSD.c **** };
  71:Generated_Source\PSoC5/CapSense_CSD.c **** 
  72:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_analogSwitchDivider[CapSense_CSD_TOTAL_SCANSLOT_COUNT] = {
  73:Generated_Source\PSoC5/CapSense_CSD.c ****     1u, 
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 4


  74:Generated_Source\PSoC5/CapSense_CSD.c **** };
  75:Generated_Source\PSoC5/CapSense_CSD.c **** 
  76:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_widgetNumber[] = {
  77:Generated_Source\PSoC5/CapSense_CSD.c ****     0u, /* Button0__BTN */
  78:Generated_Source\PSoC5/CapSense_CSD.c ****     
  79:Generated_Source\PSoC5/CapSense_CSD.c **** };
  80:Generated_Source\PSoC5/CapSense_CSD.c **** 
  81:Generated_Source\PSoC5/CapSense_CSD.c **** 
  82:Generated_Source\PSoC5/CapSense_CSD.c **** 
  83:Generated_Source\PSoC5/CapSense_CSD.c **** 
  84:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
  85:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Init
  86:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
  87:Generated_Source\PSoC5/CapSense_CSD.c **** *
  88:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
  89:Generated_Source\PSoC5/CapSense_CSD.c **** *  Inits default CapSense configuration provided with customizer that defines 
  90:Generated_Source\PSoC5/CapSense_CSD.c **** *  mode of component operations and resets all sensors to an inactive state.
  91:Generated_Source\PSoC5/CapSense_CSD.c **** *
  92:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
  93:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
  94:Generated_Source\PSoC5/CapSense_CSD.c **** *
  95:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
  96:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
  97:Generated_Source\PSoC5/CapSense_CSD.c **** *
  98:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
  99:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Init(void) 
 100:Generated_Source\PSoC5/CapSense_CSD.c **** {
  99              		.loc 1 100 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 8
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103 0000 80B5     		push	{r7, lr}
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 82B0     		sub	sp, sp, #8
 108              		.cfi_def_cfa_offset 16
 109 0004 00AF     		add	r7, sp, #0
 110              		.cfi_def_cfa_register 7
 101:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ( (CapSense_CSD_PRS_OPTIONS) || \
 102:Generated_Source\PSoC5/CapSense_CSD.c ****           (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 103:Generated_Source\PSoC5/CapSense_CSD.c ****           ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 104:Generated_Source\PSoC5/CapSense_CSD.c ****             (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) )
 105:Generated_Source\PSoC5/CapSense_CSD.c ****         
 106:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enableInterrupts;
 107:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* ( (CapSense_CSD_PRS_OPTIONS) || \
 108:Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 109:Generated_Source\PSoC5/CapSense_CSD.c ****            * ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 110:Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) ) 
 111:Generated_Source\PSoC5/CapSense_CSD.c ****            */
 112:Generated_Source\PSoC5/CapSense_CSD.c ****     
 113:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 114:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 111              		.loc 1 114 0
 112 0006 FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 115:Generated_Source\PSoC5/CapSense_CSD.c **** 
 116:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Prescaler */
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 5


 117:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 118:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 119:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 120:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL_REG   = (CapSense_CSD_PRESCALER_CTRL_ENABLE |
 113              		.loc 1 120 0
 114 000a 454B     		ldr	r3, .L2
 115 000c 0322     		movs	r2, #3
 116 000e 1A70     		strb	r2, [r3]
 121:Generated_Source\PSoC5/CapSense_CSD.c ****                                                     CapSense_CSD_PRESCALER_CTRL_MODE_CMP);
 122:Generated_Source\PSoC5/CapSense_CSD.c ****                                                
 123:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL2_REG |= CapSense_CSD_PRESCALER_CTRL_CMP_LESS_EQ;
 117              		.loc 1 123 0
 118 0010 444A     		ldr	r2, .L2+4
 119 0012 444B     		ldr	r3, .L2+4
 120 0014 1B78     		ldrb	r3, [r3]
 121 0016 DBB2     		uxtb	r3, r3
 122 0018 43F02003 		orr	r3, r3, #32
 123 001c DBB2     		uxtb	r3, r3
 124 001e 1370     		strb	r3, [r2]
 124:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 125:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 126:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 127:Generated_Source\PSoC5/CapSense_CSD.c **** 
 128:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set PRS */
 129:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS)
 130:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SetAnalogSwitchesSource(CapSense_CSD_ANALOG_SWITCHES_SRC_PRS);
 125              		.loc 1 130 0
 126 0020 0220     		movs	r0, #2
 127 0022 FFF7FEFF 		bl	CapSense_CSD_SetAnalogSwitchesSource
 131:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_PRS_OPTIONS) */
 132:Generated_Source\PSoC5/CapSense_CSD.c **** 
 133:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS)
 134:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 135:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 136:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 137:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 138:Generated_Source\PSoC5/CapSense_CSD.c ****         
 139:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 140:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_REG   = CapSense_CSD_PRS8_DEFAULT_POLYNOM;
 141:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 142:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 143:Generated_Source\PSoC5/CapSense_CSD.c ****         
 144:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS)
 145:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */ 
 146:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();  
 128              		.loc 1 146 0
 129 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 130 002a 0346     		mov	r3, r0
 131 002c FB71     		strb	r3, [r7, #7]
 147:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 132              		.loc 1 147 0
 133 002e 3E4A     		ldr	r2, .L2+8
 134 0030 3D4B     		ldr	r3, .L2+8
 135 0032 1B78     		ldrb	r3, [r3]
 136 0034 DBB2     		uxtb	r3, r3
 137 0036 43F00303 		orr	r3, r3, #3
 138 003a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 6


 139 003c 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_B_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 140              		.loc 1 148 0
 141 003e 3B4A     		ldr	r2, .L2+12
 142 0040 3A4B     		ldr	r3, .L2+12
 143 0042 1B78     		ldrb	r3, [r3]
 144 0044 DBB2     		uxtb	r3, r3
 145 0046 43F00303 		orr	r3, r3, #3
 146 004a DBB2     		uxtb	r3, r3
 147 004c 1370     		strb	r3, [r2]
 149:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 148              		.loc 1 149 0
 149 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 150 0050 1846     		mov	r0, r3
 151 0052 FFF7FEFF 		bl	CyExitCriticalSection
 150:Generated_Source\PSoC5/CapSense_CSD.c ****         
 151:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 152:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_POLYNOM_PTR, CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 152              		.loc 1 152 0
 153 0056 364B     		ldr	r3, .L2+16
 154 0058 4FF43442 		mov	r2, #46080
 155 005c 1A80     		strh	r2, [r3]	@ movhi
 153:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 154:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_SEED_COPY_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 156              		.loc 1 154 0
 157 005e 354B     		ldr	r3, .L2+20
 158 0060 4FF6FF72 		movw	r2, #65535
 159 0064 1A80     		strh	r2, [r3]	@ movhi
 155:Generated_Source\PSoC5/CapSense_CSD.c ****                 
 156:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS_4X)
 157:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 158:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 159:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG  |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 160:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 161:Generated_Source\PSoC5/CapSense_CSD.c ****         
 162:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 163:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D1_REG   = HI8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 164:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D0_REG   = LO8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 165:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 166:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F1_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 167:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F0_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW; 
 168:Generated_Source\PSoC5/CapSense_CSD.c ****         
 169:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 170:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without PRS */
 171:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS) */ 
 172:Generated_Source\PSoC5/CapSense_CSD.c ****     
 173:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set ScanSpeed */
 174:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = CapSense_CSD_SCANSPEED_VALUE;
 160              		.loc 1 174 0
 161 0066 344B     		ldr	r3, .L2+24
 162 0068 0722     		movs	r2, #7
 163 006a 1A70     		strb	r2, [r3]
 175:Generated_Source\PSoC5/CapSense_CSD.c ****     
 176:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set the Measure */
 177:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 178:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 179:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 7


 180:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 181:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_PWM_CH0_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 182:Generated_Source\PSoC5/CapSense_CSD.c ****         
 183:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 184:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 185:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 186:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_RAW_CH0_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 187:Generated_Source\PSoC5/CapSense_CSD.c ****     
 188:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 189:Generated_Source\PSoC5/CapSense_CSD.c ****         /*Window PWM and Raw Counter AUX set */
 190:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 164              		.loc 1 190 0
 165 006c FFF7FEFF 		bl	CyEnterCriticalSection
 166 0070 0346     		mov	r3, r0
 167 0072 FB71     		strb	r3, [r7, #7]
 191:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 168              		.loc 1 191 0
 169 0074 314A     		ldr	r2, .L2+28
 170 0076 314B     		ldr	r3, .L2+28
 171 0078 1B78     		ldrb	r3, [r3]
 172 007a DBB2     		uxtb	r3, r3
 173 007c 43F00303 		orr	r3, r3, #3
 174 0080 DBB2     		uxtb	r3, r3
 175 0082 1370     		strb	r3, [r2]
 192:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 176              		.loc 1 192 0
 177 0084 2E4A     		ldr	r2, .L2+32
 178 0086 2E4B     		ldr	r3, .L2+32
 179 0088 1B78     		ldrb	r3, [r3]
 180 008a DBB2     		uxtb	r3, r3
 181 008c 43F00303 		orr	r3, r3, #3
 182 0090 DBB2     		uxtb	r3, r3
 183 0092 1370     		strb	r3, [r2]
 193:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 184              		.loc 1 193 0
 185 0094 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 186 0096 1846     		mov	r0, r3
 187 0098 FFF7FEFF 		bl	CyExitCriticalSection
 194:Generated_Source\PSoC5/CapSense_CSD.c ****         
 195:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 196:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 188              		.loc 1 196 0
 189 009c 294B     		ldr	r3, .L2+36
 190 009e FF22     		movs	r2, #255
 191 00a0 1A70     		strb	r2, [r3]
 197:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 192              		.loc 1 197 0
 193 00a2 294B     		ldr	r3, .L2+40
 194 00a4 FF22     		movs	r2, #255
 195 00a6 1A70     		strb	r2, [r3]
 198:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 196              		.loc 1 198 0
 197 00a8 284B     		ldr	r3, .L2+44
 198 00aa FF22     		movs	r2, #255
 199 00ac 1A70     		strb	r2, [r3]
 199:Generated_Source\PSoC5/CapSense_CSD.c ****         
 200:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 8


 201:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 200              		.loc 1 201 0
 201 00ae 284B     		ldr	r3, .L2+48
 202 00b0 FF22     		movs	r2, #255
 203 00b2 1A70     		strb	r2, [r3]
 202:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 204              		.loc 1 202 0
 205 00b4 274B     		ldr	r3, .L2+52
 206 00b6 FF22     		movs	r2, #255
 207 00b8 1A70     		strb	r2, [r3]
 203:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 208              		.loc 1 203 0
 209 00ba 274B     		ldr	r3, .L2+56
 210 00bc FF22     		movs	r2, #255
 211 00be 1A70     		strb	r2, [r3]
 204:Generated_Source\PSoC5/CapSense_CSD.c ****         
 205:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 206:Generated_Source\PSoC5/CapSense_CSD.c ****     
 207:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 208:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 209:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 210:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 211:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 212:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH1_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 213:Generated_Source\PSoC5/CapSense_CSD.c ****             
 214:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 215:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 216:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 217:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_RAW_CH1_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 218:Generated_Source\PSoC5/CapSense_CSD.c ****            
 219:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 220:Generated_Source\PSoC5/CapSense_CSD.c ****             /*Window PWM and Raw Counter AUX set */
 221:Generated_Source\PSoC5/CapSense_CSD.c ****             enableInterrupts = CyEnterCriticalSection();
 222:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 223:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 224:Generated_Source\PSoC5/CapSense_CSD.c ****             CyExitCriticalSection(enableInterrupts);
 225:Generated_Source\PSoC5/CapSense_CSD.c ****             
 226:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 227:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 228:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 229:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 230:Generated_Source\PSoC5/CapSense_CSD.c ****             
 231:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 232:Generated_Source\PSoC5/CapSense_CSD.c ****             
 233:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 234:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 235:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 236:Generated_Source\PSoC5/CapSense_CSD.c ****             
 237:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 238:Generated_Source\PSoC5/CapSense_CSD.c ****     
 239:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 240:Generated_Source\PSoC5/CapSense_CSD.c ****     
 241:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup ISR */
 242:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 212              		.loc 1 242 0
 213 00c0 264B     		ldr	r3, .L2+60
 214 00c2 0122     		movs	r2, #1
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 9


 215 00c4 1A60     		str	r2, [r3]
 243:Generated_Source\PSoC5/CapSense_CSD.c ****     (void)CyIntSetVector(CapSense_CSD_IsrCH0_ISR_NUMBER, &CapSense_CSD_IsrCH0_ISR);
 216              		.loc 1 243 0
 217 00c6 2649     		ldr	r1, .L2+64
 218 00c8 0020     		movs	r0, #0
 219 00ca FFF7FEFF 		bl	CyIntSetVector
 244:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntSetPriority(CapSense_CSD_IsrCH0_ISR_NUMBER, CapSense_CSD_IsrCH0_ISR_PRIORITY);
 220              		.loc 1 244 0
 221 00ce 0721     		movs	r1, #7
 222 00d0 0020     		movs	r0, #0
 223 00d2 FFF7FEFF 		bl	CyIntSetPriority
 245:Generated_Source\PSoC5/CapSense_CSD.c ****     
 246:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 247:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 248:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetVector(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR);
 249:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetPriority(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR_PRIORITY);
 250:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 251:Generated_Source\PSoC5/CapSense_CSD.c ****     
 252:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 253:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Init();
 224              		.loc 1 253 0
 225 00d6 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Init
 254:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMOD_CHANNEL);
 226              		.loc 1 254 0
 227 00da 0120     		movs	r0, #1
 228 00dc FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 255:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMP_VP_CHANNEL);
 229              		.loc 1 255 0
 230 00e0 0220     		movs	r0, #2
 231 00e2 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 256:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 257:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
 232              		.loc 1 257 0
 233 00e6 0320     		movs	r0, #3
 234 00e8 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 258:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 259:Generated_Source\PSoC5/CapSense_CSD.c ****     
 260:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 261:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Init();
 262:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMOD_CHANNEL);
 263:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMP_VP_CHANNEL);
 264:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 265:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
 266:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 267:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 268:Generated_Source\PSoC5/CapSense_CSD.c ****     
 269:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Int Rb */
 270:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
 271:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_InitRb();
 272:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */
 273:Generated_Source\PSoC5/CapSense_CSD.c ****     
 274:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable window generation */
 275:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 235              		.loc 1 275 0
 236 00ec 1D4A     		ldr	r2, .L2+68
 237 00ee 1D4B     		ldr	r3, .L2+68
 238 00f0 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 10


 239 00f2 DBB2     		uxtb	r3, r3
 240 00f4 43F00403 		orr	r3, r3, #4
 241 00f8 DBB2     		uxtb	r3, r3
 242 00fa 1370     		strb	r3, [r2]
 276:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 277:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 278:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 279:Generated_Source\PSoC5/CapSense_CSD.c ****     
 280:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Cmp and Idac */
 281:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Init();
 243              		.loc 1 281 0
 244 00fc FFF7FEFF 		bl	CapSense_CSD_CompCH0_Init
 282:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 283:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Init();
 245              		.loc 1 283 0
 246 0100 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Init
 284:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetPolarity(CapSense_CSD_IdacCH0_IDIR);
 247              		.loc 1 284 0
 248 0104 0020     		movs	r0, #0
 249 0106 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetPolarity
 285:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 250              		.loc 1 285 0
 251 010a 0420     		movs	r0, #4
 252 010c FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetRange
 286:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 253              		.loc 1 286 0
 254 0110 0020     		movs	r0, #0
 255 0112 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 287:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 288:Generated_Source\PSoC5/CapSense_CSD.c ****     
 289:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 290:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Init();
 291:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 292:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Init();
 293:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetPolarity(CapSense_CSD_IdacCH1_IDIR);
 294:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 295:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 296:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 297:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 298:Generated_Source\PSoC5/CapSense_CSD.c ****     
 299:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Vref if as VDAC */
 300:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 301:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Init();
 302:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 303:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Init();
 304:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 305:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 306:Generated_Source\PSoC5/CapSense_CSD.c **** }
 256              		.loc 1 306 0
 257 0116 00BF     		nop
 258 0118 0837     		adds	r7, r7, #8
 259              		.cfi_def_cfa_offset 8
 260 011a BD46     		mov	sp, r7
 261              		.cfi_def_cfa_register 13
 262              		@ sp needed
 263 011c 80BD     		pop	{r7, pc}
 264              	.L3:
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 11


 265 011e 00BF     		.align	2
 266              	.L2:
 267 0120 004F0040 		.word	1073762048
 268 0124 024F0040 		.word	1073762050
 269 0128 9C640040 		.word	1073767580
 270 012c 9D640040 		.word	1073767581
 271 0130 2C640040 		.word	1073767468
 272 0134 4C640040 		.word	1073767500
 273 0138 8D640040 		.word	1073767565
 274 013c 9B640040 		.word	1073767579
 275 0140 9A640040 		.word	1073767578
 276 0144 2B640040 		.word	1073767467
 277 0148 4B640040 		.word	1073767499
 278 014c 0B640040 		.word	1073767435
 279 0150 2A640040 		.word	1073767466
 280 0154 5A640040 		.word	1073767514
 281 0158 4A640040 		.word	1073767498
 282 015c 80E100E0 		.word	-536813184
 283 0160 00000000 		.word	CapSense_CSD_IsrCH0_ISR
 284 0164 7C640040 		.word	1073767548
 285              		.cfi_endproc
 286              	.LFE0:
 287              		.size	CapSense_CSD_Init, .-CapSense_CSD_Init
 288              		.section	.text.CapSense_CSD_Enable,"ax",%progbits
 289              		.align	2
 290              		.global	CapSense_CSD_Enable
 291              		.thumb
 292              		.thumb_func
 293              		.type	CapSense_CSD_Enable, %function
 294              	CapSense_CSD_Enable:
 295              	.LFB1:
 307:Generated_Source\PSoC5/CapSense_CSD.c **** 
 308:Generated_Source\PSoC5/CapSense_CSD.c **** 
 309:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 310:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Enable
 311:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 312:Generated_Source\PSoC5/CapSense_CSD.c **** *
 313:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 314:Generated_Source\PSoC5/CapSense_CSD.c **** *  Enables active mode power template bits for number of component used within 
 315:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense.
 316:Generated_Source\PSoC5/CapSense_CSD.c **** *
 317:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 318:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 319:Generated_Source\PSoC5/CapSense_CSD.c **** *
 320:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 321:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 322:Generated_Source\PSoC5/CapSense_CSD.c **** *
 323:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 324:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Enable(void) 
 325:Generated_Source\PSoC5/CapSense_CSD.c **** {
 296              		.loc 1 325 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 8
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300 0000 80B5     		push	{r7, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 7, -8
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 12


 303              		.cfi_offset 14, -4
 304 0002 82B0     		sub	sp, sp, #8
 305              		.cfi_def_cfa_offset 16
 306 0004 00AF     		add	r7, sp, #0
 307              		.cfi_def_cfa_register 7
 326:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 enableInterrupts;
 327:Generated_Source\PSoC5/CapSense_CSD.c ****     
 328:Generated_Source\PSoC5/CapSense_CSD.c ****     enableInterrupts = CyEnterCriticalSection();
 308              		.loc 1 328 0
 309 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 310 000a 0346     		mov	r3, r0
 311 000c FB71     		strb	r3, [r7, #7]
 329:Generated_Source\PSoC5/CapSense_CSD.c ****     
 330:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Prescaler */
 331:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 332:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 333:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 334:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  |= CapSense_CSD_PRESCALER_ACT_PWR_EN;
 312              		.loc 1 334 0
 313 000e 244A     		ldr	r2, .L5
 314 0010 234B     		ldr	r3, .L5
 315 0012 1B78     		ldrb	r3, [r3]
 316 0014 DBB2     		uxtb	r3, r3
 317 0016 43F00103 		orr	r3, r3, #1
 318 001a DBB2     		uxtb	r3, r3
 319 001c 1370     		strb	r3, [r2]
 335:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG |= CapSense_CSD_PRESCALER_STBY_PWR_EN;
 320              		.loc 1 335 0
 321 001e 214A     		ldr	r2, .L5+4
 322 0020 204B     		ldr	r3, .L5+4
 323 0022 1B78     		ldrb	r3, [r3]
 324 0024 DBB2     		uxtb	r3, r3
 325 0026 43F00103 		orr	r3, r3, #1
 326 002a DBB2     		uxtb	r3, r3
 327 002c 1370     		strb	r3, [r2]
 336:Generated_Source\PSoC5/CapSense_CSD.c ****         
 337:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 338:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 339:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 340:Generated_Source\PSoC5/CapSense_CSD.c ****     
 341:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable ScanSpeed */
 342:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG |= CapSense_CSD_SCANSPEED_CTRL_ENABLE;
 328              		.loc 1 342 0
 329 002e 1E4A     		ldr	r2, .L5+8
 330 0030 1D4B     		ldr	r3, .L5+8
 331 0032 1B78     		ldrb	r3, [r3]
 332 0034 DBB2     		uxtb	r3, r3
 333 0036 43F02003 		orr	r3, r3, #32
 334 003a DBB2     		uxtb	r3, r3
 335 003c 1370     		strb	r3, [r2]
 343:Generated_Source\PSoC5/CapSense_CSD.c ****     
 344:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH0 */
 345:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 346:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 347:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 348:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 349:Generated_Source\PSoC5/CapSense_CSD.c ****         
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 13


 350:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 351:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 352:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 353:Generated_Source\PSoC5/CapSense_CSD.c ****         
 354:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 355:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 356:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 357:Generated_Source\PSoC5/CapSense_CSD.c ****         
 358:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 359:Generated_Source\PSoC5/CapSense_CSD.c ****     
 360:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH1*/
 361:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 362:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 363:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 364:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 365:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 366:Generated_Source\PSoC5/CapSense_CSD.c ****             
 367:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 368:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 369:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 370:Generated_Source\PSoC5/CapSense_CSD.c ****            
 371:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 372:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 373:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 374:Generated_Source\PSoC5/CapSense_CSD.c ****         
 375:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 376:Generated_Source\PSoC5/CapSense_CSD.c ****     
 377:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 378:Generated_Source\PSoC5/CapSense_CSD.c ****     
 379:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable the Clock */
 380:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 381:Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Enable();
 336              		.loc 1 381 0
 337 003e FFF7FEFF 		bl	CapSense_CSD_IntClock_Start
 382:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 383:Generated_Source\PSoC5/CapSense_CSD.c ****     
 384:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup Cmp and Idac */
 385:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Enable();
 338              		.loc 1 385 0
 339 0042 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Enable
 386:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 387:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Enable();
 340              		.loc 1 387 0
 341 0046 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Enable
 388:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 389:Generated_Source\PSoC5/CapSense_CSD.c ****     
 390:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 391:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Enable();
 392:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 393:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Enable();
 394:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 395:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 396:Generated_Source\PSoC5/CapSense_CSD.c ****     
 397:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Vref */
 398:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 399:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Enable();
 400:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_SetValue(CapSense_CSD_VdacRefCH0_DEFAULT_DATA);
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 14


 401:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 402:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Enable();
 403:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_SetValue(CapSense_CSD_VdacRefCH1_DEFAULT_DATA);
 404:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 405:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 406:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 407:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG |= CapSense_CSD_BufCH0_STBY_PWR_EN;
 342              		.loc 1 407 0
 343 004a 184A     		ldr	r2, .L5+12
 344 004c 174B     		ldr	r3, .L5+12
 345 004e 1B78     		ldrb	r3, [r3]
 346 0050 DBB2     		uxtb	r3, r3
 347 0052 43F01003 		orr	r3, r3, #16
 348 0056 DBB2     		uxtb	r3, r3
 349 0058 1370     		strb	r3, [r2]
 408:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH0_ACT_PWR_EN;
 350              		.loc 1 408 0
 351 005a 154A     		ldr	r2, .L5+16
 352 005c 144B     		ldr	r3, .L5+16
 353 005e 1B78     		ldrb	r3, [r3]
 354 0060 DBB2     		uxtb	r3, r3
 355 0062 43F01003 		orr	r3, r3, #16
 356 0066 DBB2     		uxtb	r3, r3
 357 0068 1370     		strb	r3, [r2]
 409:Generated_Source\PSoC5/CapSense_CSD.c ****         
 410:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 411:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG |= CapSense_CSD_BufCH1_STBY_PWR_EN;
 412:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH1_ACT_PWR_EN;
 413:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 414:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 415:Generated_Source\PSoC5/CapSense_CSD.c ****     
 416:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set reference on AMux Bus */
 417:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 418:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Connect Vdac to AMux Bus */
 419:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
 420:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 421:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
 422:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 423:Generated_Source\PSoC5/CapSense_CSD.c ****         
 424:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 425:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 426:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 358              		.loc 1 426 0
 359 006a 124A     		ldr	r2, .L5+20
 360 006c 114B     		ldr	r3, .L5+20
 361 006e 1B78     		ldrb	r3, [r3]
 362 0070 DBB2     		uxtb	r3, r3
 363 0072 43F00103 		orr	r3, r3, #1
 364 0076 DBB2     		uxtb	r3, r3
 365 0078 1370     		strb	r3, [r2]
 427:Generated_Source\PSoC5/CapSense_CSD.c ****         
 428:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 429:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 430:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 431:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)*/
 432:Generated_Source\PSoC5/CapSense_CSD.c ****     
 433:Generated_Source\PSoC5/CapSense_CSD.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 15


 366              		.loc 1 433 0
 367 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 368 007c 1846     		mov	r0, r3
 369 007e FFF7FEFF 		bl	CyExitCriticalSection
 434:Generated_Source\PSoC5/CapSense_CSD.c ****     
 435:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable interrupt */
 436:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntEnable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 370              		.loc 1 436 0
 371 0082 0D4B     		ldr	r3, .L5+24
 372 0084 0122     		movs	r2, #1
 373 0086 1A60     		str	r2, [r3]
 437:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 438:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntEnable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 439:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 440:Generated_Source\PSoC5/CapSense_CSD.c ****     
 441:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Enable state */
 442:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_CAPSENSE_EN;
 374              		.loc 1 442 0
 375 0088 0C4A     		ldr	r2, .L5+28
 376 008a 0C4B     		ldr	r3, .L5+28
 377 008c 1B78     		ldrb	r3, [r3]
 378 008e DBB2     		uxtb	r3, r3
 379 0090 63F07F03 		orn	r3, r3, #127
 380 0094 DBB2     		uxtb	r3, r3
 381 0096 1370     		strb	r3, [r2]
 443:Generated_Source\PSoC5/CapSense_CSD.c **** }
 382              		.loc 1 443 0
 383 0098 00BF     		nop
 384 009a 0837     		adds	r7, r7, #8
 385              		.cfi_def_cfa_offset 8
 386 009c BD46     		mov	sp, r7
 387              		.cfi_def_cfa_register 13
 388              		@ sp needed
 389 009e 80BD     		pop	{r7, pc}
 390              	.L6:
 391              		.align	2
 392              	.L5:
 393 00a0 A3430040 		.word	1073759139
 394 00a4 B3430040 		.word	1073759155
 395 00a8 9D640040 		.word	1073767581
 396 00ac BB430040 		.word	1073759163
 397 00b0 AB430040 		.word	1073759147
 398 00b4 70580040 		.word	1073764464
 399 00b8 00E100E0 		.word	-536813312
 400 00bc 7C640040 		.word	1073767548
 401              		.cfi_endproc
 402              	.LFE1:
 403              		.size	CapSense_CSD_Enable, .-CapSense_CSD_Enable
 404              		.section	.text.CapSense_CSD_Start,"ax",%progbits
 405              		.align	2
 406              		.global	CapSense_CSD_Start
 407              		.thumb
 408              		.thumb_func
 409              		.type	CapSense_CSD_Start, %function
 410              	CapSense_CSD_Start:
 411              	.LFB2:
 444:Generated_Source\PSoC5/CapSense_CSD.c **** 
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 16


 445:Generated_Source\PSoC5/CapSense_CSD.c **** 
 446:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 447:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Start
 448:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 449:Generated_Source\PSoC5/CapSense_CSD.c **** *
 450:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 451:Generated_Source\PSoC5/CapSense_CSD.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 452:Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 453:Generated_Source\PSoC5/CapSense_CSD.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 454:Generated_Source\PSoC5/CapSense_CSD.c **** *  applied for all sensors.
 455:Generated_Source\PSoC5/CapSense_CSD.c **** *
 456:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 457:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 458:Generated_Source\PSoC5/CapSense_CSD.c **** *
 459:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 460:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 461:Generated_Source\PSoC5/CapSense_CSD.c **** *
 462:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 463:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_initVar - used to check initial configuration, modified on 
 464:Generated_Source\PSoC5/CapSense_CSD.c **** *  first function call.
 465:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_lowLevelTuningDone - used to notify the Tuner GUI that 
 466:Generated_Source\PSoC5/CapSense_CSD.c **** *  tuning of scanning parameters are done.
 467:Generated_Source\PSoC5/CapSense_CSD.c **** *
 468:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 469:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 470:Generated_Source\PSoC5/CapSense_CSD.c **** *
 471:Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
 472:Generated_Source\PSoC5/CapSense_CSD.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 473:Generated_Source\PSoC5/CapSense_CSD.c **** *  must be manually enabled as their long scan time is incompatible 
 474:Generated_Source\PSoC5/CapSense_CSD.c **** *  with the fast response required of other widget types. 
 475:Generated_Source\PSoC5/CapSense_CSD.c **** *
 476:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 477:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Start(void)  
 478:Generated_Source\PSoC5/CapSense_CSD.c **** {
 412              		.loc 1 478 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416 0000 80B5     		push	{r7, lr}
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 7, -8
 419              		.cfi_offset 14, -4
 420 0002 00AF     		add	r7, sp, #0
 421              		.cfi_def_cfa_register 7
 479:Generated_Source\PSoC5/CapSense_CSD.c ****     if (CapSense_CSD_initVar == 0u)
 422              		.loc 1 479 0
 423 0004 064B     		ldr	r3, .L9
 424 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 425 0008 002B     		cmp	r3, #0
 426 000a 04D1     		bne	.L8
 480:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 481:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_Init();
 427              		.loc 1 481 0
 428 000c FFF7FEFF 		bl	CapSense_CSD_Init
 482:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_initVar = 1u;
 429              		.loc 1 482 0
 430 0010 034B     		ldr	r3, .L9
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 17


 431 0012 0122     		movs	r2, #1
 432 0014 1A70     		strb	r2, [r3]
 433              	.L8:
 483:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 484:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_Enable();
 434              		.loc 1 484 0
 435 0016 FFF7FEFF 		bl	CapSense_CSD_Enable
 485:Generated_Source\PSoC5/CapSense_CSD.c ****     
 486:Generated_Source\PSoC5/CapSense_CSD.c ****     /* AutoTunning start */
 487:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 488:Generated_Source\PSoC5/CapSense_CSD.c ****         /* AutoTune by sensor or pair of sensor basis */
 489:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AutoTune();
 490:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_lowLevelTuningDone = 1u;
 491:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 492:Generated_Source\PSoC5/CapSense_CSD.c **** }
 436              		.loc 1 492 0
 437 001a 00BF     		nop
 438 001c 80BD     		pop	{r7, pc}
 439              	.L10:
 440 001e 00BF     		.align	2
 441              	.L9:
 442 0020 00000000 		.word	CapSense_CSD_initVar
 443              		.cfi_endproc
 444              	.LFE2:
 445              		.size	CapSense_CSD_Start, .-CapSense_CSD_Start
 446              		.section	.text.CapSense_CSD_Stop,"ax",%progbits
 447              		.align	2
 448              		.global	CapSense_CSD_Stop
 449              		.thumb
 450              		.thumb_func
 451              		.type	CapSense_CSD_Stop, %function
 452              	CapSense_CSD_Stop:
 453              	.LFB3:
 493:Generated_Source\PSoC5/CapSense_CSD.c **** 
 494:Generated_Source\PSoC5/CapSense_CSD.c **** 
 495:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 496:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Stop
 497:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 498:Generated_Source\PSoC5/CapSense_CSD.c **** *
 499:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 500:Generated_Source\PSoC5/CapSense_CSD.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 501:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 502:Generated_Source\PSoC5/CapSense_CSD.c **** *  number of component used within CapSense.
 503:Generated_Source\PSoC5/CapSense_CSD.c **** *
 504:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 505:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 506:Generated_Source\PSoC5/CapSense_CSD.c **** *
 507:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 508:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 509:Generated_Source\PSoC5/CapSense_CSD.c **** *
 510:Generated_Source\PSoC5/CapSense_CSD.c **** * Side Effects:
 511:Generated_Source\PSoC5/CapSense_CSD.c **** *  This function should be called after scans will be completed.
 512:Generated_Source\PSoC5/CapSense_CSD.c **** *
 513:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 514:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Stop(void) 
 515:Generated_Source\PSoC5/CapSense_CSD.c **** {
 454              		.loc 1 515 0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 18


 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 1, uses_anonymous_args = 0
 458 0000 80B5     		push	{r7, lr}
 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 7, -8
 461              		.cfi_offset 14, -4
 462 0002 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
 516:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Stop Capsensing */
 517:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_START);
 464              		.loc 1 517 0
 465 0004 264A     		ldr	r2, .L12
 466 0006 264B     		ldr	r3, .L12
 467 0008 1B78     		ldrb	r3, [r3]
 468 000a DBB2     		uxtb	r3, r3
 469 000c 23F00203 		bic	r3, r3, #2
 470 0010 DBB2     		uxtb	r3, r3
 471 0012 1370     		strb	r3, [r2]
 518:Generated_Source\PSoC5/CapSense_CSD.c ****     
 519:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable interrupt */
 520:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 472              		.loc 1 520 0
 473 0014 234B     		ldr	r3, .L12+4
 474 0016 0122     		movs	r2, #1
 475 0018 1A60     		str	r2, [r3]
 521:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 522:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 523:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 524:Generated_Source\PSoC5/CapSense_CSD.c ****     
 525:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 526:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 476              		.loc 1 526 0
 477 001a FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 527:Generated_Source\PSoC5/CapSense_CSD.c ****     
 528:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Prescaler */
 529:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 530:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 531:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)        
 532:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_CSD_PRESCALER_ACT_PWR_EN;
 478              		.loc 1 532 0
 479 001e 224A     		ldr	r2, .L12+8
 480 0020 214B     		ldr	r3, .L12+8
 481 0022 1B78     		ldrb	r3, [r3]
 482 0024 DBB2     		uxtb	r3, r3
 483 0026 23F00103 		bic	r3, r3, #1
 484 002a DBB2     		uxtb	r3, r3
 485 002c 1370     		strb	r3, [r2]
 533:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_CSD_PRESCALER_STBY_PWR_EN;
 486              		.loc 1 533 0
 487 002e 1F4A     		ldr	r2, .L12+12
 488 0030 1E4B     		ldr	r3, .L12+12
 489 0032 1B78     		ldrb	r3, [r3]
 490 0034 DBB2     		uxtb	r3, r3
 491 0036 23F00103 		bic	r3, r3, #1
 492 003a DBB2     		uxtb	r3, r3
 493 003c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 19


 534:Generated_Source\PSoC5/CapSense_CSD.c ****         
 535:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 536:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 537:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 538:Generated_Source\PSoC5/CapSense_CSD.c ****     
 539:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable ScanSpeed */
 540:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_CSD_SCANSPEED_CTRL_ENABLE);
 494              		.loc 1 540 0
 495 003e 1C4A     		ldr	r2, .L12+16
 496 0040 1B4B     		ldr	r3, .L12+16
 497 0042 1B78     		ldrb	r3, [r3]
 498 0044 DBB2     		uxtb	r3, r3
 499 0046 23F02003 		bic	r3, r3, #32
 500 004a DBB2     		uxtb	r3, r3
 501 004c 1370     		strb	r3, [r2]
 541:Generated_Source\PSoC5/CapSense_CSD.c ****     
 542:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH0 */
 543:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 544:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 545:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 546:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 547:Generated_Source\PSoC5/CapSense_CSD.c **** 
 548:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 549:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 550:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 551:Generated_Source\PSoC5/CapSense_CSD.c **** 
 552:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 553:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 554:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 555:Generated_Source\PSoC5/CapSense_CSD.c ****         
 556:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 557:Generated_Source\PSoC5/CapSense_CSD.c ****     
 558:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH1 */
 559:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 560:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 561:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 562:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 563:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 564:Generated_Source\PSoC5/CapSense_CSD.c ****     
 565:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 566:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 567:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 568:Generated_Source\PSoC5/CapSense_CSD.c ****            
 569:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 570:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 571:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 572:Generated_Source\PSoC5/CapSense_CSD.c ****         
 573:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 574:Generated_Source\PSoC5/CapSense_CSD.c ****     
 575:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 576:Generated_Source\PSoC5/CapSense_CSD.c ****     
 577:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable the Clock */
 578:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 579:Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Stop();
 502              		.loc 1 579 0
 503 004e FFF7FEFF 		bl	CapSense_CSD_IntClock_Stop
 580:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 20


 581:Generated_Source\PSoC5/CapSense_CSD.c ****     
 582:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable power from Cmp and Idac */
 583:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Stop();
 504              		.loc 1 583 0
 505 0052 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Stop
 584:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 585:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Stop();
 506              		.loc 1 585 0
 507 0056 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Stop
 586:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 587:Generated_Source\PSoC5/CapSense_CSD.c ****     
 588:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 589:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Stop();
 590:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 591:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Stop();
 592:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 593:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */    
 594:Generated_Source\PSoC5/CapSense_CSD.c ****     
 595:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Vref if as VDAC */
 596:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 597:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Stop();
 598:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 599:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Stop();
 600:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 601:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 602:Generated_Source\PSoC5/CapSense_CSD.c **** 
 603:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
 604:Generated_Source\PSoC5/CapSense_CSD.c ****         /* The Idac turn off before */
 605:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 606:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 607:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 508              		.loc 1 607 0
 509 005a 164A     		ldr	r2, .L12+20
 510 005c 154B     		ldr	r3, .L12+20
 511 005e 1B78     		ldrb	r3, [r3]
 512 0060 DBB2     		uxtb	r3, r3
 513 0062 23F00103 		bic	r3, r3, #1
 514 0066 DBB2     		uxtb	r3, r3
 515 0068 1370     		strb	r3, [r2]
 608:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_ACT_PWR_EN);
 516              		.loc 1 608 0
 517 006a 134A     		ldr	r2, .L12+24
 518 006c 124B     		ldr	r3, .L12+24
 519 006e 1B78     		ldrb	r3, [r3]
 520 0070 DBB2     		uxtb	r3, r3
 521 0072 23F01003 		bic	r3, r3, #16
 522 0076 DBB2     		uxtb	r3, r3
 523 0078 1370     		strb	r3, [r2]
 609:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_STBY_PWR_EN);
 524              		.loc 1 609 0
 525 007a 104A     		ldr	r2, .L12+28
 526 007c 0F4B     		ldr	r3, .L12+28
 527 007e 1B78     		ldrb	r3, [r3]
 528 0080 DBB2     		uxtb	r3, r3
 529 0082 23F01003 		bic	r3, r3, #16
 530 0086 DBB2     		uxtb	r3, r3
 531 0088 1370     		strb	r3, [r2]
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 21


 610:Generated_Source\PSoC5/CapSense_CSD.c ****         
 611:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 612:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 613:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_ACT_PWR_EN);
 614:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_STBY_PWR_EN);
 615:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /*(CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 616:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 617:Generated_Source\PSoC5/CapSense_CSD.c ****     
 618:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Disable state */
 619:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_CAPSENSE_EN);
 532              		.loc 1 619 0
 533 008a 054A     		ldr	r2, .L12
 534 008c 044B     		ldr	r3, .L12
 535 008e 1B78     		ldrb	r3, [r3]
 536 0090 DBB2     		uxtb	r3, r3
 537 0092 03F07F03 		and	r3, r3, #127
 538 0096 DBB2     		uxtb	r3, r3
 539 0098 1370     		strb	r3, [r2]
 620:Generated_Source\PSoC5/CapSense_CSD.c **** }
 540              		.loc 1 620 0
 541 009a 00BF     		nop
 542 009c 80BD     		pop	{r7, pc}
 543              	.L13:
 544 009e 00BF     		.align	2
 545              	.L12:
 546 00a0 7C640040 		.word	1073767548
 547 00a4 80E100E0 		.word	-536813184
 548 00a8 A3430040 		.word	1073759139
 549 00ac B3430040 		.word	1073759155
 550 00b0 9D640040 		.word	1073767581
 551 00b4 70580040 		.word	1073764464
 552 00b8 AB430040 		.word	1073759147
 553 00bc BB430040 		.word	1073759163
 554              		.cfi_endproc
 555              	.LFE3:
 556              		.size	CapSense_CSD_Stop, .-CapSense_CSD_Stop
 557              		.section	.text.CapSense_CSD_FindNextSensor,"ax",%progbits
 558              		.align	2
 559              		.global	CapSense_CSD_FindNextSensor
 560              		.thumb
 561              		.thumb_func
 562              		.type	CapSense_CSD_FindNextSensor, %function
 563              	CapSense_CSD_FindNextSensor:
 564              	.LFB4:
 621:Generated_Source\PSoC5/CapSense_CSD.c **** 
 622:Generated_Source\PSoC5/CapSense_CSD.c **** 
 623:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 624:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 625:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextSensor
 626:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 627:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 628:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 629:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next sensor to scan. 
 630:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 631:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 632:Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index of sensor.
 633:Generated_Source\PSoC5/CapSense_CSD.c ****     *
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 22


 634:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 635:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next sensor index to scan.
 636:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 637:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 638:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 639:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 640:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 641:Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 642:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 643:Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 644:Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 645:Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 646:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 647:Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 648:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on current scanning scanning and should not
 649:Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 650:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 651:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 652:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextSensor(uint8 snsIndex) CYREENTRANT
 653:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 565              		.loc 1 653 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 16
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570 0000 80B4     		push	{r7}
 571              		.cfi_def_cfa_offset 4
 572              		.cfi_offset 7, -4
 573 0002 85B0     		sub	sp, sp, #20
 574              		.cfi_def_cfa_offset 24
 575 0004 00AF     		add	r7, sp, #0
 576              		.cfi_def_cfa_register 7
 577 0006 0346     		mov	r3, r0
 578 0008 FB71     		strb	r3, [r7, #7]
 579              	.L17:
 654:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 pos;
 655:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMask;
 656:Generated_Source\PSoC5/CapSense_CSD.c ****         
 657:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor enabled */
 658:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 659:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 660:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Proceed with the next sensor */
 661:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex++;
 580              		.loc 1 661 0
 581 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 582 000c 0133     		adds	r3, r3, #1
 583 000e FB71     		strb	r3, [r7, #7]
 662:Generated_Source\PSoC5/CapSense_CSD.c ****             if(snsIndex == CapSense_CSD_TOTAL_SENSOR_COUNT)
 584              		.loc 1 662 0
 585 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 586 0012 012B     		cmp	r3, #1
 587 0014 12D0     		beq	.L19
 663:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 664:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 665:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 666:Generated_Source\PSoC5/CapSense_CSD.c ****             pos = (snsIndex >> 3u);
 588              		.loc 1 666 0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 23


 589 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 590 0018 DB08     		lsrs	r3, r3, #3
 591 001a FB73     		strb	r3, [r7, #15]
 667:Generated_Source\PSoC5/CapSense_CSD.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 592              		.loc 1 667 0
 593 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 594 001e 03F00703 		and	r3, r3, #7
 595 0022 0122     		movs	r2, #1
 596 0024 02FA03F3 		lsl	r3, r2, r3
 597 0028 BB73     		strb	r3, [r7, #14]
 668:Generated_Source\PSoC5/CapSense_CSD.c ****         }    
 669:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u);
 598              		.loc 1 669 0
 599 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 600 002c 074A     		ldr	r2, .L20
 601 002e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 602 0030 BB7B     		ldrb	r3, [r7, #14]
 603 0032 1340     		ands	r3, r3, r2
 604 0034 DBB2     		uxtb	r3, r3
 605 0036 002B     		cmp	r3, #0
 606 0038 E7D0     		beq	.L17
 607 003a 00E0     		b	.L16
 608              	.L19:
 664:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 609              		.loc 1 664 0
 610 003c 00BF     		nop
 611              	.L16:
 670:Generated_Source\PSoC5/CapSense_CSD.c ****         
 671:Generated_Source\PSoC5/CapSense_CSD.c ****         return snsIndex;
 612              		.loc 1 671 0
 613 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 672:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 614              		.loc 1 672 0
 615 0040 1846     		mov	r0, r3
 616 0042 1437     		adds	r7, r7, #20
 617              		.cfi_def_cfa_offset 4
 618 0044 BD46     		mov	sp, r7
 619              		.cfi_def_cfa_register 13
 620              		@ sp needed
 621 0046 80BC     		pop	{r7}
 622              		.cfi_restore 7
 623              		.cfi_def_cfa_offset 0
 624 0048 7047     		bx	lr
 625              	.L21:
 626 004a 00BF     		.align	2
 627              	.L20:
 628 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 629              		.cfi_endproc
 630              	.LFE4:
 631              		.size	CapSense_CSD_FindNextSensor, .-CapSense_CSD_FindNextSensor
 632              		.section	.text.CapSense_CSD_SetScanSlotSettings,"ax",%progbits
 633              		.align	2
 634              		.global	CapSense_CSD_SetScanSlotSettings
 635              		.thumb
 636              		.thumb_func
 637              		.type	CapSense_CSD_SetScanSlotSettings, %function
 638              	CapSense_CSD_SetScanSlotSettings:
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 24


 639              	.LFB5:
 673:Generated_Source\PSoC5/CapSense_CSD.c ****  #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
 674:Generated_Source\PSoC5/CapSense_CSD.c ****  
 675:Generated_Source\PSoC5/CapSense_CSD.c ****  
 676:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 677:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 678:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextPair
 679:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 680:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 681:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 682:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 683:Generated_Source\PSoC5/CapSense_CSD.c ****     *  
 684:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 685:Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index pair of sensors.
 686:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 687:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 688:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next pair of sensors index to scan.
 689:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 690:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 691:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 692:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 693:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 694:Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 695:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 696:Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 697:Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 698:Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 699:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 700:Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 701:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on control signals set for scanning and should not
 702:Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 703:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 704:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 705:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextPair(uint8 snsIndex) CYREENTRANT
 706:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 707:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 posCh;
 708:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMaskCh;
 709:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 newRegValue;
 710:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh0 = snsIndex;
 711:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh1 = snsIndex + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 712:Generated_Source\PSoC5/CapSense_CSD.c ****         
 713:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 0 */
 714:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 715:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 716:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 717:Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh0++;
 718:Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh0 >= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 719:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 720:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH1 */
 721:Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh0 = CapSense_CSD_END_OF_SCAN__CH0;
 722:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 723:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 724:Generated_Source\PSoC5/CapSense_CSD.c ****             
 725:Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh0 >> 3u);
 726:Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 727:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 728:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 25


 729:Generated_Source\PSoC5/CapSense_CSD.c ****         
 730:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 1 */
 731:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 732:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 733:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 734:Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh1++;        
 735:Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh1 >= CapSense_CSD_TOTAL_SENSOR_COUNT)
 736:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 737:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH0 */
 738:Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh1 = CapSense_CSD_END_OF_SCAN__CH1;
 739:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 740:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 741:Generated_Source\PSoC5/CapSense_CSD.c ****             
 742:Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh1 >> 3u);
 743:Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 744:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
 745:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
 746:Generated_Source\PSoC5/CapSense_CSD.c ****         
 747:Generated_Source\PSoC5/CapSense_CSD.c ****         indexCh1 -= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 748:Generated_Source\PSoC5/CapSense_CSD.c ****         
 749:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find the pair to scan */
 750:Generated_Source\PSoC5/CapSense_CSD.c ****         if(indexCh0 == indexCh1)
 751:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 752:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans TWO Channels */
 753:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh0;
 754:Generated_Source\PSoC5/CapSense_CSD.c ****             
 755:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= (CapSense_CSD_CTRL_WINDOW_EN__CH0 | 
 756:Generated_Source\PSoC5/CapSense_CSD.c ****                                              CapSense_CSD_CTRL_WINDOW_EN__CH1);
 757:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 758:Generated_Source\PSoC5/CapSense_CSD.c ****         else if(indexCh0 < indexCh1)
 759:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 760:Generated_Source\PSoC5/CapSense_CSD.c ****            /* Scans Channel ONE only */
 761:Generated_Source\PSoC5/CapSense_CSD.c ****            snsIndex = indexCh0;
 762:Generated_Source\PSoC5/CapSense_CSD.c ****            
 763:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 764:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 765:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 766:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 767:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 768:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 769:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 770:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans Channel TWO only */
 771:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh1;
 772:Generated_Source\PSoC5/CapSense_CSD.c ****             
 773:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 774:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 775:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 776:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 777:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 778:Generated_Source\PSoC5/CapSense_CSD.c ****         
 779:Generated_Source\PSoC5/CapSense_CSD.c ****         return (snsIndex);
 780:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 781:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN */
 782:Generated_Source\PSoC5/CapSense_CSD.c **** 
 783:Generated_Source\PSoC5/CapSense_CSD.c **** 
 784:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 785:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSlotSettings
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 26


 786:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 787:Generated_Source\PSoC5/CapSense_CSD.c **** *
 788:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 789:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 790:Generated_Source\PSoC5/CapSense_CSD.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 791:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 792:Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 793:Generated_Source\PSoC5/CapSense_CSD.c **** *
 794:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 795:Generated_Source\PSoC5/CapSense_CSD.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 796:Generated_Source\PSoC5/CapSense_CSD.c **** *
 797:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 798:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 799:Generated_Source\PSoC5/CapSense_CSD.c **** *
 800:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 801:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_idacSettings[] - used to store idac value for every sensor.
 802:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_widgetResolution[] - used to store scan resolution of every 
 803:Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 804:Generated_Source\PSoC5/CapSense_CSD.c **** *
 805:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 806:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSlotSettings(uint8 slot) CYREENTRANT
 807:Generated_Source\PSoC5/CapSense_CSD.c **** {
 640              		.loc 1 807 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 16
 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644 0000 80B5     		push	{r7, lr}
 645              		.cfi_def_cfa_offset 8
 646              		.cfi_offset 7, -8
 647              		.cfi_offset 14, -4
 648 0002 84B0     		sub	sp, sp, #16
 649              		.cfi_def_cfa_offset 24
 650 0004 00AF     		add	r7, sp, #0
 651              		.cfi_def_cfa_register 7
 652 0006 0346     		mov	r3, r0
 653 0008 FB71     		strb	r3, [r7, #7]
 808:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 widget;
 809:Generated_Source\PSoC5/CapSense_CSD.c ****     
 810:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 811:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Define widget sensor belongs to */
 812:Generated_Source\PSoC5/CapSense_CSD.c ****         widget = CapSense_CSD_widgetNumber[slot];
 654              		.loc 1 812 0
 655 000a 0023     		movs	r3, #0
 656 000c FB73     		strb	r3, [r7, #15]
 813:Generated_Source\PSoC5/CapSense_CSD.c ****         
 814:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Idac Value */
 815:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 816:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 657              		.loc 1 816 0
 658 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 659 0010 094A     		ldr	r2, .L23
 660 0012 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 661 0014 1846     		mov	r0, r3
 662 0016 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 817:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 818:Generated_Source\PSoC5/CapSense_CSD.c ****         
 819:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 27


 820:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 821:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 822:Generated_Source\PSoC5/CapSense_CSD.c ****                 ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FULL_
 823:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 824:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 663              		.loc 1 824 0
 664 001a 084A     		ldr	r2, .L23+4
 665 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 666 001e 0849     		ldr	r1, .L23+8
 667 0020 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 668 0022 1370     		strb	r3, [r2]
 825:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 826:Generated_Source\PSoC5/CapSense_CSD.c **** 
 827:Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 828:Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 829:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 669              		.loc 1 829 0
 670 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 671 0026 074A     		ldr	r2, .L23+12
 672 0028 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 673 002a 1846     		mov	r0, r3
 674 002c FFF7FEFF 		bl	CapSense_CSD_SetPrescaler
 830:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 831:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 832:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 833:Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 834:Generated_Source\PSoC5/CapSense_CSD.c ****                */
 835:Generated_Source\PSoC5/CapSense_CSD.c **** 
 836:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 837:Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 838:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 839:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Define widget sensor belongs to */
 840:Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot];
 841:Generated_Source\PSoC5/CapSense_CSD.c ****             
 842:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 843:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 844:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 845:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
 846:Generated_Source\PSoC5/CapSense_CSD.c ****             
 847:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 848:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 849:Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 850:Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 851:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 852:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 853:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 854:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 855:Generated_Source\PSoC5/CapSense_CSD.c ****         
 856:Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 857:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 858:Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot+CapSense_CSD_TOTAL_SENSOR_COUNT__CH0];
 859:Generated_Source\PSoC5/CapSense_CSD.c ****         
 860:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 861:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 862:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_idacSettings[slot+
 863:Generated_Source\PSoC5/CapSense_CSD.c ****                                                                              CapSense_CSD_TOTAL_SEN
 864:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 28


 865:Generated_Source\PSoC5/CapSense_CSD.c ****             
 866:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 867:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 868:Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH1_PERIOD_PTR,
 869:Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 870:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 871:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH1_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 872:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 873:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 874:Generated_Source\PSoC5/CapSense_CSD.c **** 
 875:Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 876:Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 877:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 878:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 879:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 880:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 881:Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 882:Generated_Source\PSoC5/CapSense_CSD.c ****                */
 883:Generated_Source\PSoC5/CapSense_CSD.c **** 
 884:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 885:Generated_Source\PSoC5/CapSense_CSD.c **** }
 675              		.loc 1 885 0
 676 0030 00BF     		nop
 677 0032 1037     		adds	r7, r7, #16
 678              		.cfi_def_cfa_offset 8
 679 0034 BD46     		mov	sp, r7
 680              		.cfi_def_cfa_register 13
 681              		@ sp needed
 682 0036 80BD     		pop	{r7, pc}
 683              	.L24:
 684              		.align	2
 685              	.L23:
 686 0038 00000000 		.word	CapSense_CSD_idacSettings
 687 003c 5B640040 		.word	1073767515
 688 0040 00000000 		.word	CapSense_CSD_widgetResolution
 689 0044 00000000 		.word	CapSense_CSD_analogSwitchDivider
 690              		.cfi_endproc
 691              	.LFE5:
 692              		.size	CapSense_CSD_SetScanSlotSettings, .-CapSense_CSD_SetScanSlotSettings
 693              		.section	.text.CapSense_CSD_ScanSensor,"ax",%progbits
 694              		.align	2
 695              		.global	CapSense_CSD_ScanSensor
 696              		.thumb
 697              		.thumb_func
 698              		.type	CapSense_CSD_ScanSensor, %function
 699              	CapSense_CSD_ScanSensor:
 700              	.LFB6:
 886:Generated_Source\PSoC5/CapSense_CSD.c **** 
 887:Generated_Source\PSoC5/CapSense_CSD.c **** 
 888:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 889:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanSensor
 890:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 891:Generated_Source\PSoC5/CapSense_CSD.c **** *
 892:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 893:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 894:Generated_Source\PSoC5/CapSense_CSD.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 895:Generated_Source\PSoC5/CapSense_CSD.c **** *  at the same time. After scanning is complete the isr copies the measured 
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 29


 896:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 897:Generated_Source\PSoC5/CapSense_CSD.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 898:Generated_Source\PSoC5/CapSense_CSD.c **** *  This number is assigned by the CapSense customizer in sequence.
 899:Generated_Source\PSoC5/CapSense_CSD.c **** *
 900:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 901:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
 902:Generated_Source\PSoC5/CapSense_CSD.c **** *
 903:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 904:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 905:Generated_Source\PSoC5/CapSense_CSD.c **** *
 906:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 907:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
 908:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 909:Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
 910:Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one.
 911:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
 912:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to provided sensor argument.
 913:Generated_Source\PSoC5/CapSense_CSD.c **** *
 914:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 915:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 916:Generated_Source\PSoC5/CapSense_CSD.c **** *
 917:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 918:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanSensor(uint8 sensor)  
 919:Generated_Source\PSoC5/CapSense_CSD.c **** {
 701              		.loc 1 919 0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 8
 704              		@ frame_needed = 1, uses_anonymous_args = 0
 705 0000 80B5     		push	{r7, lr}
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 7, -8
 708              		.cfi_offset 14, -4
 709 0002 82B0     		sub	sp, sp, #8
 710              		.cfi_def_cfa_offset 16
 711 0004 00AF     		add	r7, sp, #0
 712              		.cfi_def_cfa_register 7
 713 0006 0346     		mov	r3, r0
 714 0008 FB71     		strb	r3, [r7, #7]
 920:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 921:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 715              		.loc 1 921 0
 716 000a 084B     		ldr	r3, .L26
 717 000c 0022     		movs	r2, #0
 718 000e 1A70     		strb	r2, [r3]
 922:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = sensor;
 719              		.loc 1 922 0
 720 0010 074A     		ldr	r2, .L26+4
 721 0012 FB79     		ldrb	r3, [r7, #7]
 722 0014 1370     		strb	r3, [r2]
 923:Generated_Source\PSoC5/CapSense_CSD.c ****     
 924:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 925:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start of sensor scan */
 926:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_csv = (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 723              		.loc 1 926 0
 724 0016 054B     		ldr	r3, .L26
 725 0018 8122     		movs	r2, #129
 726 001a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 30


 927:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan(sensor);
 727              		.loc 1 927 0
 728 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 729 001e 1846     		mov	r0, r3
 730 0020 FFF7FEFF 		bl	CapSense_CSD_PreScan
 928:Generated_Source\PSoC5/CapSense_CSD.c ****         
 929:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 930:Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH0: check end of scan conditions */
 931:Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 932:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 933:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 934:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 935:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 936:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 937:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 938:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 939:Generated_Source\PSoC5/CapSense_CSD.c ****         
 940:Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH1: check end of scan conditions */
 941:Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 942:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 943:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 944:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 945:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 946:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 947:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 948:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 949:Generated_Source\PSoC5/CapSense_CSD.c ****         
 950:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
 951:Generated_Source\PSoC5/CapSense_CSD.c ****         if( ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u) || 
 952:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u) )
 953:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 954:Generated_Source\PSoC5/CapSense_CSD.c ****         
 955:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 956:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(sensor);
 957:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 958:Generated_Source\PSoC5/CapSense_CSD.c ****         
 959:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 960:Generated_Source\PSoC5/CapSense_CSD.c **** }
 731              		.loc 1 960 0
 732 0024 00BF     		nop
 733 0026 0837     		adds	r7, r7, #8
 734              		.cfi_def_cfa_offset 8
 735 0028 BD46     		mov	sp, r7
 736              		.cfi_def_cfa_register 13
 737              		@ sp needed
 738 002a 80BD     		pop	{r7, pc}
 739              	.L27:
 740              		.align	2
 741              	.L26:
 742 002c 00000000 		.word	CapSense_CSD_csv
 743 0030 00000000 		.word	CapSense_CSD_sensorIndex
 744              		.cfi_endproc
 745              	.LFE6:
 746              		.size	CapSense_CSD_ScanSensor, .-CapSense_CSD_ScanSensor
 747              		.section	.text.CapSense_CSD_ScanEnabledWidgets,"ax",%progbits
 748              		.align	2
 749              		.global	CapSense_CSD_ScanEnabledWidgets
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 31


 750              		.thumb
 751              		.thumb_func
 752              		.type	CapSense_CSD_ScanEnabledWidgets, %function
 753              	CapSense_CSD_ScanEnabledWidgets:
 754              	.LFB7:
 961:Generated_Source\PSoC5/CapSense_CSD.c **** 
 962:Generated_Source\PSoC5/CapSense_CSD.c **** 
 963:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 964:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanEnableWidgets
 965:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 966:Generated_Source\PSoC5/CapSense_CSD.c **** *
 967:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 968:Generated_Source\PSoC5/CapSense_CSD.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 969:Generated_Source\PSoC5/CapSense_CSD.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 970:Generated_Source\PSoC5/CapSense_CSD.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 971:Generated_Source\PSoC5/CapSense_CSD.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 972:Generated_Source\PSoC5/CapSense_CSD.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 973:Generated_Source\PSoC5/CapSense_CSD.c **** *  incompatible with fast response desired of other widget types.
 974:Generated_Source\PSoC5/CapSense_CSD.c **** *
 975:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 976:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 977:Generated_Source\PSoC5/CapSense_CSD.c **** *
 978:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 979:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 980:Generated_Source\PSoC5/CapSense_CSD.c **** *
 981:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 982:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
 983:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and clears single scan mode.
 984:Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
 985:Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one. 
 986:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
 987:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to 0xFF and provided to function CapSense_CSD_FindNextSensor or
 988:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_FindNextPair, these functions starts with sensor index
 989:Generated_Source\PSoC5/CapSense_CSD.c **** *  increment and overflow of uint8 gives desired index 0.
 990:Generated_Source\PSoC5/CapSense_CSD.c **** *
 991:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 992:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 993:Generated_Source\PSoC5/CapSense_CSD.c **** *
 994:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 995:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanEnabledWidgets(void) 
 996:Generated_Source\PSoC5/CapSense_CSD.c **** {
 755              		.loc 1 996 0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 0
 758              		@ frame_needed = 1, uses_anonymous_args = 0
 759 0000 80B5     		push	{r7, lr}
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 00AF     		add	r7, sp, #0
 764              		.cfi_def_cfa_register 7
 997:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 998:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 765              		.loc 1 998 0
 766 0004 124B     		ldr	r3, .L31
 767 0006 0022     		movs	r2, #0
 768 0008 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 32


 999:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = 0xFFu;
 769              		.loc 1 999 0
 770 000a 124B     		ldr	r3, .L31+4
 771 000c FF22     		movs	r2, #255
 772 000e 1A70     		strb	r2, [r3]
1000:Generated_Source\PSoC5/CapSense_CSD.c ****     
1001:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1002:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor */
1003:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextSensor(CapSense_CSD_sensorIndex);
 773              		.loc 1 1003 0
 774 0010 104B     		ldr	r3, .L31+4
 775 0012 1B78     		ldrb	r3, [r3]
 776 0014 DBB2     		uxtb	r3, r3
 777 0016 1846     		mov	r0, r3
 778 0018 FFF7FEFF 		bl	CapSense_CSD_FindNextSensor
 779 001c 0346     		mov	r3, r0
 780 001e 1A46     		mov	r2, r3
 781 0020 0C4B     		ldr	r3, .L31+4
 782 0022 1A70     		strb	r2, [r3]
1004:Generated_Source\PSoC5/CapSense_CSD.c **** 
1005:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check end of scan condition */
1006:Generated_Source\PSoC5/CapSense_CSD.c ****         if(CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT)
 783              		.loc 1 1006 0
 784 0024 0B4B     		ldr	r3, .L31+4
 785 0026 1B78     		ldrb	r3, [r3]
 786 0028 DBB2     		uxtb	r3, r3
 787 002a 002B     		cmp	r3, #0
 788 002c 0DD1     		bne	.L30
1007:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1008:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
 789              		.loc 1 1008 0
 790 002e 084B     		ldr	r3, .L31
 791 0030 1B78     		ldrb	r3, [r3]
 792 0032 DBB2     		uxtb	r3, r3
 793 0034 43F00103 		orr	r3, r3, #1
 794 0038 DAB2     		uxtb	r2, r3
 795 003a 054B     		ldr	r3, .L31
 796 003c 1A70     		strb	r2, [r3]
1009:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
 797              		.loc 1 1009 0
 798 003e 054B     		ldr	r3, .L31+4
 799 0040 1B78     		ldrb	r3, [r3]
 800 0042 DBB2     		uxtb	r3, r3
 801 0044 1846     		mov	r0, r3
 802 0046 FFF7FEFF 		bl	CapSense_CSD_PreScan
 803              	.L30:
1010:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1011:Generated_Source\PSoC5/CapSense_CSD.c ****         
1012:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1013:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor and set proper control register */
1014:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextPair(CapSense_CSD_sensorIndex);
1015:Generated_Source\PSoC5/CapSense_CSD.c ****         
1016:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
1017:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) || 
1018:Generated_Source\PSoC5/CapSense_CSD.c ****            (CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1))
1019:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1020:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 33


1021:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
1022:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1023:Generated_Source\PSoC5/CapSense_CSD.c ****         
1024:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1025:Generated_Source\PSoC5/CapSense_CSD.c **** }
 804              		.loc 1 1025 0
 805 004a 00BF     		nop
 806 004c 80BD     		pop	{r7, pc}
 807              	.L32:
 808 004e 00BF     		.align	2
 809              	.L31:
 810 0050 00000000 		.word	CapSense_CSD_csv
 811 0054 00000000 		.word	CapSense_CSD_sensorIndex
 812              		.cfi_endproc
 813              	.LFE7:
 814              		.size	CapSense_CSD_ScanEnabledWidgets, .-CapSense_CSD_ScanEnabledWidgets
 815              		.section	.text.CapSense_CSD_IsBusy,"ax",%progbits
 816              		.align	2
 817              		.global	CapSense_CSD_IsBusy
 818              		.thumb
 819              		.thumb_func
 820              		.type	CapSense_CSD_IsBusy, %function
 821              	CapSense_CSD_IsBusy:
 822              	.LFB8:
1026:Generated_Source\PSoC5/CapSense_CSD.c **** 
1027:Generated_Source\PSoC5/CapSense_CSD.c **** 
1028:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1029:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_IsBusy
1030:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1031:Generated_Source\PSoC5/CapSense_CSD.c **** *
1032:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1033:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1034:Generated_Source\PSoC5/CapSense_CSD.c **** *  progress and 0 means that scanning is complete.
1035:Generated_Source\PSoC5/CapSense_CSD.c **** *
1036:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1037:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1038:Generated_Source\PSoC5/CapSense_CSD.c **** *
1039:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1040:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1041:Generated_Source\PSoC5/CapSense_CSD.c **** *  completed.
1042:Generated_Source\PSoC5/CapSense_CSD.c **** *
1043:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1044:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
1045:Generated_Source\PSoC5/CapSense_CSD.c **** *  Checks the busy status.
1046:Generated_Source\PSoC5/CapSense_CSD.c **** *
1047:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1048:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_IsBusy(void) 
1049:Generated_Source\PSoC5/CapSense_CSD.c **** {
 823              		.loc 1 1049 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 1, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 828 0000 80B4     		push	{r7}
 829              		.cfi_def_cfa_offset 4
 830              		.cfi_offset 7, -4
 831 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 34


 832              		.cfi_def_cfa_register 7
1050:Generated_Source\PSoC5/CapSense_CSD.c ****     return ((0u != (CapSense_CSD_csv & CapSense_CSD_SW_STS_BUSY)) ? 1u : 0u);
 833              		.loc 1 1050 0
 834 0004 044B     		ldr	r3, .L35
 835 0006 1B78     		ldrb	r3, [r3]
 836 0008 DBB2     		uxtb	r3, r3
 837 000a 03F00103 		and	r3, r3, #1
 838 000e DBB2     		uxtb	r3, r3
1051:Generated_Source\PSoC5/CapSense_CSD.c **** }
 839              		.loc 1 1051 0
 840 0010 1846     		mov	r0, r3
 841 0012 BD46     		mov	sp, r7
 842              		.cfi_def_cfa_register 13
 843              		@ sp needed
 844 0014 80BC     		pop	{r7}
 845              		.cfi_restore 7
 846              		.cfi_def_cfa_offset 0
 847 0016 7047     		bx	lr
 848              	.L36:
 849              		.align	2
 850              	.L35:
 851 0018 00000000 		.word	CapSense_CSD_csv
 852              		.cfi_endproc
 853              	.LFE8:
 854              		.size	CapSense_CSD_IsBusy, .-CapSense_CSD_IsBusy
 855              		.section	.text.CapSense_CSD_ReadSensorRaw,"ax",%progbits
 856              		.align	2
 857              		.global	CapSense_CSD_ReadSensorRaw
 858              		.thumb
 859              		.thumb_func
 860              		.type	CapSense_CSD_ReadSensorRaw, %function
 861              	CapSense_CSD_ReadSensorRaw:
 862              	.LFB9:
1052:Generated_Source\PSoC5/CapSense_CSD.c **** 
1053:Generated_Source\PSoC5/CapSense_CSD.c **** 
1054:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1055:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ReadSensorRaw
1056:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1057:Generated_Source\PSoC5/CapSense_CSD.c **** *
1058:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1059:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns scan sensor raw data from the CapSense_CSD_sensorRaw[] array. 
1060:Generated_Source\PSoC5/CapSense_CSD.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1061:Generated_Source\PSoC5/CapSense_CSD.c **** *  is assigned by the CapSense customizer in sequence.
1062:Generated_Source\PSoC5/CapSense_CSD.c **** *
1063:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1064:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1065:Generated_Source\PSoC5/CapSense_CSD.c **** *
1066:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1067:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns current raw data value for defined sensor number.
1068:Generated_Source\PSoC5/CapSense_CSD.c **** *
1069:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1070:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1071:Generated_Source\PSoC5/CapSense_CSD.c **** *
1072:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1073:Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_ReadSensorRaw(uint8 sensor) 
1074:Generated_Source\PSoC5/CapSense_CSD.c **** {
 863              		.loc 1 1074 0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 35


 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 8
 866              		@ frame_needed = 1, uses_anonymous_args = 0
 867              		@ link register save eliminated.
 868 0000 80B4     		push	{r7}
 869              		.cfi_def_cfa_offset 4
 870              		.cfi_offset 7, -4
 871 0002 83B0     		sub	sp, sp, #12
 872              		.cfi_def_cfa_offset 16
 873 0004 00AF     		add	r7, sp, #0
 874              		.cfi_def_cfa_register 7
 875 0006 0346     		mov	r3, r0
 876 0008 FB71     		strb	r3, [r7, #7]
1075:Generated_Source\PSoC5/CapSense_CSD.c ****     return (CapSense_CSD_sensorRaw[sensor]);
 877              		.loc 1 1075 0
 878 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 879 000c 034A     		ldr	r2, .L39
 880 000e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
1076:Generated_Source\PSoC5/CapSense_CSD.c **** }
 881              		.loc 1 1076 0
 882 0012 1846     		mov	r0, r3
 883 0014 0C37     		adds	r7, r7, #12
 884              		.cfi_def_cfa_offset 4
 885 0016 BD46     		mov	sp, r7
 886              		.cfi_def_cfa_register 13
 887              		@ sp needed
 888 0018 80BC     		pop	{r7}
 889              		.cfi_restore 7
 890              		.cfi_def_cfa_offset 0
 891 001a 7047     		bx	lr
 892              	.L40:
 893              		.align	2
 894              	.L39:
 895 001c 00000000 		.word	CapSense_CSD_sensorRaw
 896              		.cfi_endproc
 897              	.LFE9:
 898              		.size	CapSense_CSD_ReadSensorRaw, .-CapSense_CSD_ReadSensorRaw
 899              		.section	.text.CapSense_CSD_ClearSensors,"ax",%progbits
 900              		.align	2
 901              		.global	CapSense_CSD_ClearSensors
 902              		.thumb
 903              		.thumb_func
 904              		.type	CapSense_CSD_ClearSensors, %function
 905              	CapSense_CSD_ClearSensors:
 906              	.LFB10:
1077:Generated_Source\PSoC5/CapSense_CSD.c **** 
1078:Generated_Source\PSoC5/CapSense_CSD.c **** 
1079:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1080:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ClearSensors
1081:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1082:Generated_Source\PSoC5/CapSense_CSD.c **** *
1083:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1084:Generated_Source\PSoC5/CapSense_CSD.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1085:Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1086:Generated_Source\PSoC5/CapSense_CSD.c **** *
1087:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1088:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 36


1089:Generated_Source\PSoC5/CapSense_CSD.c **** *
1090:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1091:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1092:Generated_Source\PSoC5/CapSense_CSD.c **** *
1093:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1094:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ClearSensors(void) 
1095:Generated_Source\PSoC5/CapSense_CSD.c **** {
 907              		.loc 1 1095 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 8
 910              		@ frame_needed = 1, uses_anonymous_args = 0
 911 0000 80B5     		push	{r7, lr}
 912              		.cfi_def_cfa_offset 8
 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
 915 0002 82B0     		sub	sp, sp, #8
 916              		.cfi_def_cfa_offset 16
 917 0004 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
1096:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 i;
1097:Generated_Source\PSoC5/CapSense_CSD.c ****    
1098:Generated_Source\PSoC5/CapSense_CSD.c ****     for (i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 919              		.loc 1 1098 0
 920 0006 0023     		movs	r3, #0
 921 0008 FB71     		strb	r3, [r7, #7]
 922 000a 06E0     		b	.L42
 923              	.L43:
1099:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1100:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(i);
 924              		.loc 1 1100 0 discriminator 3
 925 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 926 000e 1846     		mov	r0, r3
 927 0010 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1098:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 928              		.loc 1 1098 0 discriminator 3
 929 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 930 0016 0133     		adds	r3, r3, #1
 931 0018 FB71     		strb	r3, [r7, #7]
 932              	.L42:
1098:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 933              		.loc 1 1098 0 is_stmt 0 discriminator 1
 934 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 935 001c 002B     		cmp	r3, #0
 936 001e F5D0     		beq	.L43
1101:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1102:Generated_Source\PSoC5/CapSense_CSD.c **** }
 937              		.loc 1 1102 0 is_stmt 1
 938 0020 00BF     		nop
 939 0022 0837     		adds	r7, r7, #8
 940              		.cfi_def_cfa_offset 8
 941 0024 BD46     		mov	sp, r7
 942              		.cfi_def_cfa_register 13
 943              		@ sp needed
 944 0026 80BD     		pop	{r7, pc}
 945              		.cfi_endproc
 946              	.LFE10:
 947              		.size	CapSense_CSD_ClearSensors, .-CapSense_CSD_ClearSensors
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 37


 948              		.section	.text.CapSense_CSD_EnableSensor,"ax",%progbits
 949              		.align	2
 950              		.global	CapSense_CSD_EnableSensor
 951              		.thumb
 952              		.thumb_func
 953              		.type	CapSense_CSD_EnableSensor, %function
 954              	CapSense_CSD_EnableSensor:
 955              	.LFB11:
1103:Generated_Source\PSoC5/CapSense_CSD.c **** 
1104:Generated_Source\PSoC5/CapSense_CSD.c **** 
1105:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1106:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1107:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_EnableScanSlot
1108:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1109:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1110:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1111:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Configures the selected slot to measure during the next measurement 
1112:Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1113:Generated_Source\PSoC5/CapSense_CSD.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1114:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1115:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1116:Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1117:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1118:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1119:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1120:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1121:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Constants:
1122:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1123:Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1124:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1125:Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1126:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1127:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1128:Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1129:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1130:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1131:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1132:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_EnableScanSlot(uint8 slot) CYREENTRANT
1133:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1134:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1135:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1136:Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1137:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1138:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1139:Generated_Source\PSoC5/CapSense_CSD.c ****         
1140:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1141:Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1142:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1143:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable sensor (signle) */
1144:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableSensor(slot);
1145:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1146:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1147:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1148:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable complex sensor */
1149:Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1150:Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1151:Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 38


1152:Generated_Source\PSoC5/CapSense_CSD.c ****                         
1153:Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1154:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1155:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableSensor(index[j]);
1156:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1157:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1158:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1159:Generated_Source\PSoC5/CapSense_CSD.c ****     
1160:Generated_Source\PSoC5/CapSense_CSD.c ****     
1161:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1162:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_DisableScanSlot
1163:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1164:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1165:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1166:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1167:Generated_Source\PSoC5/CapSense_CSD.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1168:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1169:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1170:Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1171:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1172:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1173:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1174:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1175:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1176:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1177:Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1178:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1179:Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1180:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1181:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1182:Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1183:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1184:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1185:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1186:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_DisableScanSlot(uint8 slot) CYREENTRANT
1187:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1188:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1189:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1190:Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1191:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1192:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1193:Generated_Source\PSoC5/CapSense_CSD.c ****         
1194:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1195:Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1196:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1197:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable sensor (signle) */
1198:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_DisableSensor(slot);
1199:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1200:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1201:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1202:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable complex sensor */
1203:Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1204:Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1205:Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1206:Generated_Source\PSoC5/CapSense_CSD.c ****                         
1207:Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1208:Generated_Source\PSoC5/CapSense_CSD.c ****             {
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 39


1209:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_DisableSensor(index[j]);
1210:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1211:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1212:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1213:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1214:Generated_Source\PSoC5/CapSense_CSD.c **** 
1215:Generated_Source\PSoC5/CapSense_CSD.c **** 
1216:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1217:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_EnableSensor
1218:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1219:Generated_Source\PSoC5/CapSense_CSD.c **** *
1220:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1221:Generated_Source\PSoC5/CapSense_CSD.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1222:Generated_Source\PSoC5/CapSense_CSD.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1223:Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus. This also enables the comparator function.
1224:Generated_Source\PSoC5/CapSense_CSD.c **** *
1225:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1226:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1227:Generated_Source\PSoC5/CapSense_CSD.c **** *
1228:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1229:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1230:Generated_Source\PSoC5/CapSense_CSD.c **** *
1231:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1232:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1233:Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1234:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1235:Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1236:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1237:Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1238:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1239:Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1240:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1241:Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1242:Generated_Source\PSoC5/CapSense_CSD.c **** *
1243:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1244:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_EnableSensor(uint8 sensor) CYREENTRANT
1245:Generated_Source\PSoC5/CapSense_CSD.c **** {
 956              		.loc 1 1245 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 16
 959              		@ frame_needed = 1, uses_anonymous_args = 0
 960 0000 80B5     		push	{r7, lr}
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 7, -8
 963              		.cfi_offset 14, -4
 964 0002 84B0     		sub	sp, sp, #16
 965              		.cfi_def_cfa_offset 24
 966 0004 00AF     		add	r7, sp, #0
 967              		.cfi_def_cfa_register 7
 968 0006 0346     		mov	r3, r0
 969 0008 FB71     		strb	r3, [r7, #7]
1246:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 970              		.loc 1 1246 0
 971 000a 0223     		movs	r3, #2
 972 000c FB73     		strb	r3, [r7, #15]
1247:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 973              		.loc 1 1247 0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 40


 974 000e 0123     		movs	r3, #1
 975 0010 BB73     		strb	r3, [r7, #14]
1248:Generated_Source\PSoC5/CapSense_CSD.c ****     
1249:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1250:Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1251:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1252:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1253:Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1254:Generated_Source\PSoC5/CapSense_CSD.c ****             */
1255:Generated_Source\PSoC5/CapSense_CSD.c ****     
1256:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Make sensor High-Z */
1257:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
 976              		.loc 1 1257 0
 977 0012 0E4B     		ldr	r3, .L46
 978 0014 0922     		movs	r2, #9
 979 0016 1A70     		strb	r2, [r3]
1258:Generated_Source\PSoC5/CapSense_CSD.c ****     
1259:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to DSI output */
1260:Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 980              		.loc 1 1260 0
 981 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 982 001a 0F2B     		cmp	r3, #15
 983 001c 01D1     		bne	.L45
1261:Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1262:Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 984              		.loc 1 1262 0
 985 001e 0723     		movs	r3, #7
 986 0020 FB73     		strb	r3, [r7, #15]
 987              	.L45:
1263:Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1264:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] |= mask;
 988              		.loc 1 1264 0
 989 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 990 0024 0A4A     		ldr	r2, .L46+4
 991 0026 52F82330 		ldr	r3, [r2, r3, lsl #2]
 992 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 993 002c 0849     		ldr	r1, .L46+4
 994 002e 51F82220 		ldr	r2, [r1, r2, lsl #2]
 995 0032 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 996 0034 BA7B     		ldrb	r2, [r7, #14]
 997 0036 0A43     		orrs	r2, r2, r1
 998 0038 D2B2     		uxtb	r2, r2
 999 003a 1A70     		strb	r2, [r3]
1265:Generated_Source\PSoC5/CapSense_CSD.c ****     
1266:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to AMUX */
1267:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1268:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1269:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_amuxIndex[sensor]);
1270:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1271:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(sensor);
 1000              		.loc 1 1271 0
 1001 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1002 003e 1846     		mov	r0, r3
 1003 0040 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
1272:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1273:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1274:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 41


1275:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1276:Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1277:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1278:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(amuxCh);
1279:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1280:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1281:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1282:Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1283:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(amuxCh);
1284:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1285:Generated_Source\PSoC5/CapSense_CSD.c ****             
1286:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1287:Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1288:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1289:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(sensor);
1290:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1291:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1292:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1293:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1294:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1295:Generated_Source\PSoC5/CapSense_CSD.c ****             
1296:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1297:Generated_Source\PSoC5/CapSense_CSD.c ****         
1298:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
1299:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1004              		.loc 1 1299 0
 1005 0044 00BF     		nop
 1006 0046 1037     		adds	r7, r7, #16
 1007              		.cfi_def_cfa_offset 8
 1008 0048 BD46     		mov	sp, r7
 1009              		.cfi_def_cfa_register 13
 1010              		@ sp needed
 1011 004a 80BD     		pop	{r7, pc}
 1012              	.L47:
 1013              		.align	2
 1014              	.L46:
 1015 004c 10500040 		.word	1073762320
 1016 0050 00000000 		.word	CapSense_CSD_csTable
 1017              		.cfi_endproc
 1018              	.LFE11:
 1019              		.size	CapSense_CSD_EnableSensor, .-CapSense_CSD_EnableSensor
 1020              		.section	.text.CapSense_CSD_DisableSensor,"ax",%progbits
 1021              		.align	2
 1022              		.global	CapSense_CSD_DisableSensor
 1023              		.thumb
 1024              		.thumb_func
 1025              		.type	CapSense_CSD_DisableSensor, %function
 1026              	CapSense_CSD_DisableSensor:
 1027              	.LFB12:
1300:Generated_Source\PSoC5/CapSense_CSD.c **** 
1301:Generated_Source\PSoC5/CapSense_CSD.c **** 
1302:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1303:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_DisableSensor
1304:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1305:Generated_Source\PSoC5/CapSense_CSD.c **** *
1306:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1307:Generated_Source\PSoC5/CapSense_CSD.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 42


1308:Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1309:Generated_Source\PSoC5/CapSense_CSD.c **** *
1310:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1311:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number
1312:Generated_Source\PSoC5/CapSense_CSD.c **** *
1313:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1314:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1315:Generated_Source\PSoC5/CapSense_CSD.c **** *
1316:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1317:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1318:Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1319:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1320:Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1321:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1322:Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1323:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1324:Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1325:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1326:Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1327:Generated_Source\PSoC5/CapSense_CSD.c **** *
1328:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1329:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_DisableSensor(uint8 sensor) CYREENTRANT
1330:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1028              		.loc 1 1330 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 16
 1031              		@ frame_needed = 1, uses_anonymous_args = 0
 1032 0000 80B5     		push	{r7, lr}
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 7, -8
 1035              		.cfi_offset 14, -4
 1036 0002 84B0     		sub	sp, sp, #16
 1037              		.cfi_def_cfa_offset 24
 1038 0004 00AF     		add	r7, sp, #0
 1039              		.cfi_def_cfa_register 7
 1040 0006 0346     		mov	r3, r0
 1041 0008 FB71     		strb	r3, [r7, #7]
1331:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 1042              		.loc 1 1331 0
 1043 000a 0223     		movs	r3, #2
 1044 000c FB73     		strb	r3, [r7, #15]
1332:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 1045              		.loc 1 1332 0
 1046 000e 0123     		movs	r3, #1
 1047 0010 BB73     		strb	r3, [r7, #14]
1333:Generated_Source\PSoC5/CapSense_CSD.c ****     
1334:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1335:Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1336:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1337:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1338:Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1339:Generated_Source\PSoC5/CapSense_CSD.c ****             */
1340:Generated_Source\PSoC5/CapSense_CSD.c ****     
1341:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from AMUX */
1342:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1343:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1344:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_amuxIndex[sensor]);
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 43


1345:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1346:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(sensor);
 1048              		.loc 1 1346 0
 1049 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1050 0014 1846     		mov	r0, r3
 1051 0016 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Unset
1347:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1348:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1349:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1350:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1351:Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1352:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1353:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(amuxCh);
1354:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1355:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1356:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1357:Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1358:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(amuxCh);
1359:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1360:Generated_Source\PSoC5/CapSense_CSD.c ****             
1361:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1362:Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1363:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1364:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(sensor);
1365:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1366:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1367:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1368:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1369:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1370:Generated_Source\PSoC5/CapSense_CSD.c ****             
1371:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1372:Generated_Source\PSoC5/CapSense_CSD.c ****         
1373:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1374:Generated_Source\PSoC5/CapSense_CSD.c ****     
1375:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from DSI output */
1376:Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 1052              		.loc 1 1376 0
 1053 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1054 001c 0F2B     		cmp	r3, #15
 1055 001e 01D1     		bne	.L49
1377:Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1378:Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 1056              		.loc 1 1378 0
 1057 0020 0723     		movs	r3, #7
 1058 0022 FB73     		strb	r3, [r7, #15]
 1059              	.L49:
1379:Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1380:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] &= (uint8)~mask;
 1060              		.loc 1 1380 0
 1061 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1062 0026 0A4A     		ldr	r2, .L50
 1063 0028 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1064 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1065 002e 0849     		ldr	r1, .L50
 1066 0030 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1067 0034 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1068 0036 BA7B     		ldrb	r2, [r7, #14]
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 44


 1069 0038 D243     		mvns	r2, r2
 1070 003a D2B2     		uxtb	r2, r2
 1071 003c 0A40     		ands	r2, r2, r1
 1072 003e D2B2     		uxtb	r2, r2
 1073 0040 1A70     		strb	r2, [r3]
1381:Generated_Source\PSoC5/CapSense_CSD.c ****     
1382:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set sensor to inactive state */
1383:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND)
1384:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_GND;
 1074              		.loc 1 1384 0
 1075 0042 044B     		ldr	r3, .L50+4
 1076 0044 0822     		movs	r2, #8
 1077 0046 1A70     		strb	r2, [r3]
1385:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_HIGHZ)
1386:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
1387:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1388:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_SHIELD;
1389:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND) */
1390:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1078              		.loc 1 1390 0
 1079 0048 00BF     		nop
 1080 004a 1037     		adds	r7, r7, #16
 1081              		.cfi_def_cfa_offset 8
 1082 004c BD46     		mov	sp, r7
 1083              		.cfi_def_cfa_register 13
 1084              		@ sp needed
 1085 004e 80BD     		pop	{r7, pc}
 1086              	.L51:
 1087              		.align	2
 1088              	.L50:
 1089 0050 00000000 		.word	CapSense_CSD_csTable
 1090 0054 10500040 		.word	1073762320
 1091              		.cfi_endproc
 1092              	.LFE12:
 1093              		.size	CapSense_CSD_DisableSensor, .-CapSense_CSD_DisableSensor
 1094              		.section	.text.CapSense_CSD_PreScan,"ax",%progbits
 1095              		.align	2
 1096              		.global	CapSense_CSD_PreScan
 1097              		.thumb
 1098              		.thumb_func
 1099              		.type	CapSense_CSD_PreScan, %function
 1100              	CapSense_CSD_PreScan:
 1101              	.LFB13:
1391:Generated_Source\PSoC5/CapSense_CSD.c **** 
1392:Generated_Source\PSoC5/CapSense_CSD.c **** 
1393:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1394:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_PreScan
1395:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1396:Generated_Source\PSoC5/CapSense_CSD.c **** *
1397:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1398:Generated_Source\PSoC5/CapSense_CSD.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1399:Generated_Source\PSoC5/CapSense_CSD.c **** *  scanning process of the sensor.
1400:Generated_Source\PSoC5/CapSense_CSD.c **** *
1401:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1402:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1403:Generated_Source\PSoC5/CapSense_CSD.c **** *
1404:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 45


1405:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1406:Generated_Source\PSoC5/CapSense_CSD.c **** *
1407:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1408:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_rbTable[] - used to store pointers to PC pin registers for 
1409:Generated_Source\PSoC5/CapSense_CSD.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1410:Generated_Source\PSoC5/CapSense_CSD.c **** *  resistor.
1411:Generated_Source\PSoC5/CapSense_CSD.c **** *
1412:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1413:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_PreScan(uint8 sensor) CYREENTRANT
1414:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1102              		.loc 1 1414 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 8
 1105              		@ frame_needed = 1, uses_anonymous_args = 0
 1106 0000 80B5     		push	{r7, lr}
 1107              		.cfi_def_cfa_offset 8
 1108              		.cfi_offset 7, -8
 1109              		.cfi_offset 14, -4
 1110 0002 82B0     		sub	sp, sp, #8
 1111              		.cfi_def_cfa_offset 16
 1112 0004 00AF     		add	r7, sp, #0
 1113              		.cfi_def_cfa_register 7
 1114 0006 0346     		mov	r3, r0
 1115 0008 FB71     		strb	r3, [r7, #7]
1415:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Sensor Settings */
1416:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SetScanSlotSettings(sensor);
 1116              		.loc 1 1416 0
 1117 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1118 000c 1846     		mov	r0, r3
 1119 000e FFF7FEFF 		bl	CapSense_CSD_SetScanSlotSettings
1417:Generated_Source\PSoC5/CapSense_CSD.c ****     
1418:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1419:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_DisableInt` */
1420:Generated_Source\PSoC5/CapSense_CSD.c **** 
1421:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1422:Generated_Source\PSoC5/CapSense_CSD.c ****     
1423:Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK
1424:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PreScan_DisableInt_Callback();
1425:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK */
1426:Generated_Source\PSoC5/CapSense_CSD.c **** 
1427:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Resets digital and pre-charge clocks */
1428:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_SYNC_EN;
 1120              		.loc 1 1428 0
 1121 0012 104A     		ldr	r2, .L53
 1122 0014 0F4B     		ldr	r3, .L53
 1123 0016 1B78     		ldrb	r3, [r3]
 1124 0018 DBB2     		uxtb	r3, r3
 1125 001a 43F00103 		orr	r3, r3, #1
 1126 001e DBB2     		uxtb	r3, r3
 1127 0020 1370     		strb	r3, [r2]
1429:Generated_Source\PSoC5/CapSense_CSD.c ****         
1430:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1431:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1432:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable Vref from AMux */
1433:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1434:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1435:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 46


1436:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
 1128              		.loc 1 1436 0
 1129 0022 0D4A     		ldr	r2, .L53+4
 1130 0024 0C4B     		ldr	r3, .L53+4
 1131 0026 1B78     		ldrb	r3, [r3]
 1132 0028 DBB2     		uxtb	r3, r3
 1133 002a 23F00103 		bic	r3, r3, #1
 1134 002e DBB2     		uxtb	r3, r3
 1135 0030 1370     		strb	r3, [r2]
1437:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1438:Generated_Source\PSoC5/CapSense_CSD.c **** 
1439:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1440:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
 1136              		.loc 1 1440 0
 1137 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1138 0034 1846     		mov	r0, r3
 1139 0036 FFF7FEFF 		bl	CapSense_CSD_EnableSensor
1441:Generated_Source\PSoC5/CapSense_CSD.c ****             
1442:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1443:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect IDAC */
1444:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1445:Generated_Source\PSoC5/CapSense_CSD.c ****             
1446:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1447:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1448:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1449:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1450:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSD_CSBUF_ENABLE;
1451:Generated_Source\PSoC5/CapSense_CSD.c ****             
1452:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1453:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect DSI output to Rb */
1454:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1455:Generated_Source\PSoC5/CapSense_CSD.c ****             
1456:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1457:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1458:Generated_Source\PSoC5/CapSense_CSD.c ****              
1459:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1460:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1461:Generated_Source\PSoC5/CapSense_CSD.c ****         
1462:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1463:Generated_Source\PSoC5/CapSense_CSD.c ****         
1464:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1465:Generated_Source\PSoC5/CapSense_CSD.c **** 
1466:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u)
1467:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1468:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1469:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1470:Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1471:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1472:Generated_Source\PSoC5/CapSense_CSD.c ****                 #else
1473:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1474:Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1475:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1476:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1477:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1478:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1479:Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1480:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 47


1481:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1482:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1483:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1484:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1485:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1486:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1487:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1488:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1489:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1490:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1491:Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1492:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1493:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1494:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1495:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1496:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1497:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1498:Generated_Source\PSoC5/CapSense_CSD.c ****             
1499:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1500:Generated_Source\PSoC5/CapSense_CSD.c ****             
1501:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1502:Generated_Source\PSoC5/CapSense_CSD.c ****         
1503:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u)
1504:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1505:Generated_Source\PSoC5/CapSense_CSD.c ****             sensor += CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
1506:Generated_Source\PSoC5/CapSense_CSD.c ****             
1507:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1508:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1509:Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1510:Generated_Source\PSoC5/CapSense_CSD.c ****                    CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1511:Generated_Source\PSoC5/CapSense_CSD.c ****                 #else 
1512:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1513:Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1514:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1515:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1516:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1517:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1518:Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1519:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1520:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1521:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1522:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1523:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1524:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1525:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1526:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1527:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1528:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1529:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1530:Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] |= CapSense_CSD_BYP_MASK;
1531:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1532:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1533:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1534:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1535:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1536:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1537:Generated_Source\PSoC5/CapSense_CSD.c ****             
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 48


1538:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1539:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1540:Generated_Source\PSoC5/CapSense_CSD.c ****     
1541:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
1542:Generated_Source\PSoC5/CapSense_CSD.c ****     
1543:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1544:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_START;
 1140              		.loc 1 1544 0
 1141 003a 064A     		ldr	r2, .L53
 1142 003c 054B     		ldr	r3, .L53
 1143 003e 1B78     		ldrb	r3, [r3]
 1144 0040 DBB2     		uxtb	r3, r3
 1145 0042 43F00203 		orr	r3, r3, #2
 1146 0046 DBB2     		uxtb	r3, r3
 1147 0048 1370     		strb	r3, [r2]
1545:Generated_Source\PSoC5/CapSense_CSD.c ****     
1546:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1547:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_EnableInt` */
1548:Generated_Source\PSoC5/CapSense_CSD.c **** 
1549:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1550:Generated_Source\PSoC5/CapSense_CSD.c **** 
1551:Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK
1552:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan_EnableInt_Callback();
1553:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK */
1554:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1148              		.loc 1 1554 0
 1149 004a 00BF     		nop
 1150 004c 0837     		adds	r7, r7, #8
 1151              		.cfi_def_cfa_offset 8
 1152 004e BD46     		mov	sp, r7
 1153              		.cfi_def_cfa_register 13
 1154              		@ sp needed
 1155 0050 80BD     		pop	{r7, pc}
 1156              	.L54:
 1157 0052 00BF     		.align	2
 1158              	.L53:
 1159 0054 7C640040 		.word	1073767548
 1160 0058 70580040 		.word	1073764464
 1161              		.cfi_endproc
 1162              	.LFE13:
 1163              		.size	CapSense_CSD_PreScan, .-CapSense_CSD_PreScan
 1164              		.section	.text.CapSense_CSD_PostScan,"ax",%progbits
 1165              		.align	2
 1166              		.global	CapSense_CSD_PostScan
 1167              		.thumb
 1168              		.thumb_func
 1169              		.type	CapSense_CSD_PostScan, %function
 1170              	CapSense_CSD_PostScan:
 1171              	.LFB14:
1555:Generated_Source\PSoC5/CapSense_CSD.c **** 
1556:Generated_Source\PSoC5/CapSense_CSD.c **** 
1557:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1558:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1559:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1560:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1561:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1562:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 49


1563:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1564:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1565:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1566:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only one channel designs.
1567:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1568:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1569:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1570:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1571:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1572:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1573:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1574:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1575:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1576:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1577:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1578:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1579:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1580:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1581:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScan(uint8 sensor) CYREENTRANT
1582:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1172              		.loc 1 1582 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 8
 1175              		@ frame_needed = 1, uses_anonymous_args = 0
 1176 0000 80B5     		push	{r7, lr}
 1177              		.cfi_def_cfa_offset 8
 1178              		.cfi_offset 7, -8
 1179              		.cfi_offset 14, -4
 1180 0002 82B0     		sub	sp, sp, #8
 1181              		.cfi_def_cfa_offset 16
 1182 0004 00AF     		add	r7, sp, #0
 1183              		.cfi_def_cfa_register 7
 1184 0006 0346     		mov	r3, r0
 1185 0008 FB71     		strb	r3, [r7, #7]
1583:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Stop Capsensing and rearm sync */
1584:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG &= (uint8)~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
 1186              		.loc 1 1584 0
 1187 000a 1E4A     		ldr	r2, .L56
 1188 000c 1D4B     		ldr	r3, .L56
 1189 000e 1B78     		ldrb	r3, [r3]
 1190 0010 DBB2     		uxtb	r3, r3
 1191 0012 23F00303 		bic	r3, r3, #3
 1192 0016 DBB2     		uxtb	r3, r3
 1193 0018 1370     		strb	r3, [r2]
1585:Generated_Source\PSoC5/CapSense_CSD.c ****         
1586:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1587:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1588:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1589:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1590:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1591:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
 1194              		.loc 1 1591 0
 1195 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1196 001c 1A4A     		ldr	r2, .L56+4
 1197 001e 1278     		ldrb	r2, [r2]
 1198 0020 D2B2     		uxtb	r2, r2
 1199 0022 92B2     		uxth	r2, r2
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 50


 1200 0024 1202     		lsls	r2, r2, #8
 1201 0026 91B2     		uxth	r1, r2
 1202 0028 184A     		ldr	r2, .L56+8
 1203 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1592:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
 1204              		.loc 1 1592 0
 1205 002e 184B     		ldr	r3, .L56+12
 1206 0030 1B78     		ldrb	r3, [r3]
 1207 0032 DBB2     		uxtb	r3, r3
 1208 0034 9AB2     		uxth	r2, r3
 1209 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1210 0038 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1211 003a 1448     		ldr	r0, .L56+8
 1212 003c 30F81110 		ldrh	r1, [r0, r1, lsl #1]
 1213 0040 0A43     		orrs	r2, r2, r1
 1214 0042 91B2     		uxth	r1, r2
 1215 0044 114A     		ldr	r2, .L56+8
 1216 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1593:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 1217              		.loc 1 1593 0
 1218 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1594:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
 1219              		.loc 1 1594 0
 1220 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1221 004e 0F49     		ldr	r1, .L56+8
 1222 0050 31F81220 		ldrh	r2, [r1, r2, lsl #1]
1593:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 1223              		.loc 1 1593 0
 1224 0054 D243     		mvns	r2, r2
 1225 0056 91B2     		uxth	r1, r2
 1226 0058 0C4A     		ldr	r2, .L56+8
 1227 005a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1595:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
1596:Generated_Source\PSoC5/CapSense_CSD.c ****         
1597:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1598:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
 1228              		.loc 1 1598 0
 1229 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1230 0060 1846     		mov	r0, r3
 1231 0062 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1599:Generated_Source\PSoC5/CapSense_CSD.c ****         
1600:Generated_Source\PSoC5/CapSense_CSD.c ****         #if(CapSense_CSD_CURRENT_SOURCE)
1601:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1602:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 1232              		.loc 1 1602 0
 1233 0066 0020     		movs	r0, #0
 1234 0068 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
1603:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1604:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1605:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1606:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1607:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1608:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1609:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1610:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1611:Generated_Source\PSoC5/CapSense_CSD.c ****             
1612:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 51


1613:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1614:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1615:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1616:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 1235              		.loc 1 1616 0
 1236 006c 094A     		ldr	r2, .L56+16
 1237 006e 094B     		ldr	r3, .L56+16
 1238 0070 1B78     		ldrb	r3, [r3]
 1239 0072 DBB2     		uxtb	r3, r3
 1240 0074 43F00103 		orr	r3, r3, #1
 1241 0078 DBB2     		uxtb	r3, r3
 1242 007a 1370     		strb	r3, [r2]
1617:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1618:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1243              		.loc 1 1618 0
 1244 007c 00BF     		nop
 1245 007e 0837     		adds	r7, r7, #8
 1246              		.cfi_def_cfa_offset 8
 1247 0080 BD46     		mov	sp, r7
 1248              		.cfi_def_cfa_register 13
 1249              		@ sp needed
 1250 0082 80BD     		pop	{r7, pc}
 1251              	.L57:
 1252              		.align	2
 1253              	.L56:
 1254 0084 7C640040 		.word	1073767548
 1255 0088 1A640040 		.word	1073767450
 1256 008c 00000000 		.word	CapSense_CSD_sensorRaw
 1257 0090 0A640040 		.word	1073767434
 1258 0094 70580040 		.word	1073764464
 1259              		.cfi_endproc
 1260              	.LFE14:
 1261              		.size	CapSense_CSD_PostScan, .-CapSense_CSD_PostScan
 1262              		.section	.text.CapSense_CSD_SetPrescaler,"ax",%progbits
 1263              		.align	2
 1264              		.global	CapSense_CSD_SetPrescaler
 1265              		.thumb
 1266              		.thumb_func
 1267              		.type	CapSense_CSD_SetPrescaler, %function
 1268              	CapSense_CSD_SetPrescaler:
 1269              	.LFB15:
1619:Generated_Source\PSoC5/CapSense_CSD.c ****     
1620:Generated_Source\PSoC5/CapSense_CSD.c **** #else
1621:Generated_Source\PSoC5/CapSense_CSD.c **** 
1622:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1623:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1624:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1625:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1626:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1627:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1628:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1629:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1630:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 0 in two channes designs.
1631:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1632:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1633:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1634:Generated_Source\PSoC5/CapSense_CSD.c ****     *
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 52


1635:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1636:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1637:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1638:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1639:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1640:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1641:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1642:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1643:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1644:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1645:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh0(uint8 sensor) CYREENTRANT
1646:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1647:Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1648:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u)) 
1649:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1650:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1651:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1652:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1653:Generated_Source\PSoC5/CapSense_CSD.c ****         
1654:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1655:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1656:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1657:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1658:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1659:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
1660:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
1661:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1662:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1663:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1664:Generated_Source\PSoC5/CapSense_CSD.c ****         
1665:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1666:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1667:Generated_Source\PSoC5/CapSense_CSD.c ****         
1668:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1669:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1670:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1671:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1672:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1673:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1674:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1675:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1676:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1677:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1678:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1679:Generated_Source\PSoC5/CapSense_CSD.c ****         
1680:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1681:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1682:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1683:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1684:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1685:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1686:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1687:Generated_Source\PSoC5/CapSense_CSD.c ****     
1688:Generated_Source\PSoC5/CapSense_CSD.c ****     
1689:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1690:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScanCh1
1691:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 53


1692:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1693:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1694:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1695:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1696:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1697:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 1 in two channes designs.
1698:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1699:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1700:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1701:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1702:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1703:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1704:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1705:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1706:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1707:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1708:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1709:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1710:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1711:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1712:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh1(uint8 sensor) CYREENTRANT
1713:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1714:Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1715:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u))
1716:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1717:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1718:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1719:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1720:Generated_Source\PSoC5/CapSense_CSD.c ****         
1721:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1722:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1723:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1724:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH1_COUNTER_PTR
1725:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1726:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH1_COUNTER_HI_REG << 8u);
1727:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH1_COUNTER_LO_REG;
1728:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1729:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1730:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1731:Generated_Source\PSoC5/CapSense_CSD.c ****         
1732:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1733:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1734:Generated_Source\PSoC5/CapSense_CSD.c ****         
1735:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1736:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1737:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1738:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1739:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1740:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1741:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1742:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1743:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1744:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] &= ~CapSense_CSD_BYP_MASK; 
1745:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1746:Generated_Source\PSoC5/CapSense_CSD.c **** 
1747:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1748:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 54


1749:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1750:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1751:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1752:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1753:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1754:Generated_Source\PSoC5/CapSense_CSD.c ****     
1755:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE */
1756:Generated_Source\PSoC5/CapSense_CSD.c **** 
1757:Generated_Source\PSoC5/CapSense_CSD.c **** 
1758:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
1759:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1760:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name:  CapSense_CSD_InitRb
1761:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1762:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1763:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1764:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1765:Generated_Source\PSoC5/CapSense_CSD.c ****     *  while next measure.
1766:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1767:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1768:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1769:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1770:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1771:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1772:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1773:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1774:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************/
1775:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_InitRb(void) 
1776:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1777:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 i;
1778:Generated_Source\PSoC5/CapSense_CSD.c ****         
1779:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable all Rb */
1780:Generated_Source\PSoC5/CapSense_CSD.c ****         for(i = 0u; i < CapSense_CSD_TOTAL_RB_NUMBER; i++)
1781:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1782:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Make High-Z */
1783:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[i] = CapSense_CSD_PRT_PC_HIGHZ;
1784:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1785:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1786:Generated_Source\PSoC5/CapSense_CSD.c ****     
1787:Generated_Source\PSoC5/CapSense_CSD.c ****     
1788:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1789:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetRBleed
1790:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1791:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1792:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1793:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1794:Generated_Source\PSoC5/CapSense_CSD.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1795:Generated_Source\PSoC5/CapSense_CSD.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1796:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1797:Generated_Source\PSoC5/CapSense_CSD.c ****     * 
1798:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1799:Generated_Source\PSoC5/CapSense_CSD.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1800:Generated_Source\PSoC5/CapSense_CSD.c ****     *  customizer.
1801:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1802:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1803:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1804:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1805:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 55


1806:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh0Cur - used to store current number of active 
1807:Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 0.
1808:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh1Cur - used to store current number of active 
1809:Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 1.
1810:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1811:Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle.
1812:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1813:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1814:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1815:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1816:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1817:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetRBleed(uint8 rbleed) 
1818:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1819:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1820:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_extRbCh0Cur = rbleed;
1821:Generated_Source\PSoC5/CapSense_CSD.c ****             
1822:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1823:Generated_Source\PSoC5/CapSense_CSD.c ****             if(rbleed < CapSense_CSD_TOTAL_RB_NUMBER__CH0)
1824:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1825:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh0Cur = rbleed;
1826:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1827:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1828:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1829:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh1Cur = (rbleed - CapSense_CSD_TOTAL_RB_NUMBER__CH0);   
1830:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1831:Generated_Source\PSoC5/CapSense_CSD.c ****     
1832:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */ 
1833:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1834:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB */ 
1835:Generated_Source\PSoC5/CapSense_CSD.c **** 
1836:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_PRESCALER_OPTIONS)
1837:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1838:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetPrescaler
1839:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1840:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1841:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1842:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets analog switch divider.
1843:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1844:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1845:Generated_Source\PSoC5/CapSense_CSD.c ****     *  prescaler:  Sets prescaler divider values.
1846:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1847:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1848:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1849:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1850:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1851:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetPrescaler(uint8 prescaler) CYREENTRANT
1852:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1270              		.loc 1 1852 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 8
 1273              		@ frame_needed = 1, uses_anonymous_args = 0
 1274              		@ link register save eliminated.
 1275 0000 80B4     		push	{r7}
 1276              		.cfi_def_cfa_offset 4
 1277              		.cfi_offset 7, -4
 1278 0002 83B0     		sub	sp, sp, #12
 1279              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 56


 1280 0004 00AF     		add	r7, sp, #0
 1281              		.cfi_def_cfa_register 7
 1282 0006 0346     		mov	r3, r0
 1283 0008 FB71     		strb	r3, [r7, #7]
1853:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Prescaler */
1854:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1855:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_PERIOD_REG = prescaler;
1856:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_COMPARE_REG = (prescaler >> 1u);
1857:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1858:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR, (uint16) prescaler);
 1284              		.loc 1 1858 0
 1285 000a 074B     		ldr	r3, .L59
 1286 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1287 000e 92B2     		uxth	r2, r2
 1288 0010 1A80     		strh	r2, [r3]	@ movhi
1859:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
 1289              		.loc 1 1859 0
 1290 0012 064A     		ldr	r2, .L59+4
 1291 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1292 0016 5B08     		lsrs	r3, r3, #1
 1293 0018 DBB2     		uxtb	r3, r3
 1294 001a 9BB2     		uxth	r3, r3
 1295 001c 1380     		strh	r3, [r2]	@ movhi
1860:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1861:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1862:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1863:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1296              		.loc 1 1863 0
 1297 001e 00BF     		nop
 1298 0020 0C37     		adds	r7, r7, #12
 1299              		.cfi_def_cfa_offset 4
 1300 0022 BD46     		mov	sp, r7
 1301              		.cfi_def_cfa_register 13
 1302              		@ sp needed
 1303 0024 80BC     		pop	{r7}
 1304              		.cfi_restore 7
 1305              		.cfi_def_cfa_offset 0
 1306 0026 7047     		bx	lr
 1307              	.L60:
 1308              		.align	2
 1309              	.L59:
 1310 0028 044F0040 		.word	1073762052
 1311 002c 064F0040 		.word	1073762054
 1312              		.cfi_endproc
 1313              	.LFE15:
 1314              		.size	CapSense_CSD_SetPrescaler, .-CapSense_CSD_SetPrescaler
 1315              		.section	.text.CapSense_CSD_GetPrescaler,"ax",%progbits
 1316              		.align	2
 1317              		.global	CapSense_CSD_GetPrescaler
 1318              		.thumb
 1319              		.thumb_func
 1320              		.type	CapSense_CSD_GetPrescaler, %function
 1321              	CapSense_CSD_GetPrescaler:
 1322              	.LFB16:
1864:Generated_Source\PSoC5/CapSense_CSD.c **** 
1865:Generated_Source\PSoC5/CapSense_CSD.c **** 
1866:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 57


1867:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_GetPrescaler
1868:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1869:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1870:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1871:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Gets analog switch divider.
1872:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1873:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1874:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1875:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1876:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1877:Generated_Source\PSoC5/CapSense_CSD.c ****     *   Returns the prescaler divider value.
1878:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1879:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1880:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_GetPrescaler(void) 
1881:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1323              		.loc 1 1881 0
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 8
 1326              		@ frame_needed = 1, uses_anonymous_args = 0
 1327              		@ link register save eliminated.
 1328 0000 80B4     		push	{r7}
 1329              		.cfi_def_cfa_offset 4
 1330              		.cfi_offset 7, -4
 1331 0002 83B0     		sub	sp, sp, #12
 1332              		.cfi_def_cfa_offset 16
 1333 0004 00AF     		add	r7, sp, #0
 1334              		.cfi_def_cfa_register 7
1882:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 prescaler = 0u;
 1335              		.loc 1 1882 0
 1336 0006 0023     		movs	r3, #0
 1337 0008 FB71     		strb	r3, [r7, #7]
1883:Generated_Source\PSoC5/CapSense_CSD.c **** 
1884:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Get Prescaler */
1885:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1886:Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = CapSense_CSD_PRESCALER_PERIOD_REG;
1887:Generated_Source\PSoC5/CapSense_CSD.c ****             
1888:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1889:Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR);
 1338              		.loc 1 1889 0
 1339 000a 054B     		ldr	r3, .L63
 1340 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1341 000e 9BB2     		uxth	r3, r3
 1342 0010 FB71     		strb	r3, [r7, #7]
1890:Generated_Source\PSoC5/CapSense_CSD.c ****             
1891:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1892:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1893:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1894:Generated_Source\PSoC5/CapSense_CSD.c ****         
1895:Generated_Source\PSoC5/CapSense_CSD.c ****         return (prescaler);
 1343              		.loc 1 1895 0
 1344 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1896:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1345              		.loc 1 1896 0
 1346 0014 1846     		mov	r0, r3
 1347 0016 0C37     		adds	r7, r7, #12
 1348              		.cfi_def_cfa_offset 4
 1349 0018 BD46     		mov	sp, r7
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 58


 1350              		.cfi_def_cfa_register 13
 1351              		@ sp needed
 1352 001a 80BC     		pop	{r7}
 1353              		.cfi_restore 7
 1354              		.cfi_def_cfa_offset 0
 1355 001c 7047     		bx	lr
 1356              	.L64:
 1357 001e 00BF     		.align	2
 1358              	.L63:
 1359 0020 044F0040 		.word	1073762052
 1360              		.cfi_endproc
 1361              	.LFE16:
 1362              		.size	CapSense_CSD_GetPrescaler, .-CapSense_CSD_GetPrescaler
 1363              		.section	.text.CapSense_CSD_SetScanSpeed,"ax",%progbits
 1364              		.align	2
 1365              		.global	CapSense_CSD_SetScanSpeed
 1366              		.thumb
 1367              		.thumb_func
 1368              		.type	CapSense_CSD_SetScanSpeed, %function
 1369              	CapSense_CSD_SetScanSpeed:
 1370              	.LFB17:
1897:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_PRESCALER_OPTIONS */
1898:Generated_Source\PSoC5/CapSense_CSD.c **** 
1899:Generated_Source\PSoC5/CapSense_CSD.c **** 
1900:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1901:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSpeed
1902:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1903:Generated_Source\PSoC5/CapSense_CSD.c **** *
1904:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1905:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets ScanSpeed divider.
1906:Generated_Source\PSoC5/CapSense_CSD.c **** *
1907:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1908:Generated_Source\PSoC5/CapSense_CSD.c **** *  scanspeed:  Sets ScanSpeed divider.
1909:Generated_Source\PSoC5/CapSense_CSD.c **** *
1910:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1911:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1912:Generated_Source\PSoC5/CapSense_CSD.c **** *
1913:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1914:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSpeed(uint8 scanSpeed) 
1915:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1371              		.loc 1 1915 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 8
 1374              		@ frame_needed = 1, uses_anonymous_args = 0
 1375              		@ link register save eliminated.
 1376 0000 80B4     		push	{r7}
 1377              		.cfi_def_cfa_offset 4
 1378              		.cfi_offset 7, -4
 1379 0002 83B0     		sub	sp, sp, #12
 1380              		.cfi_def_cfa_offset 16
 1381 0004 00AF     		add	r7, sp, #0
 1382              		.cfi_def_cfa_register 7
 1383 0006 0346     		mov	r3, r0
 1384 0008 FB71     		strb	r3, [r7, #7]
1916:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = scanSpeed; 
 1385              		.loc 1 1916 0
 1386 000a 044A     		ldr	r2, .L66
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 59


 1387 000c FB79     		ldrb	r3, [r7, #7]
 1388 000e 1370     		strb	r3, [r2]
1917:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1389              		.loc 1 1917 0
 1390 0010 00BF     		nop
 1391 0012 0C37     		adds	r7, r7, #12
 1392              		.cfi_def_cfa_offset 4
 1393 0014 BD46     		mov	sp, r7
 1394              		.cfi_def_cfa_register 13
 1395              		@ sp needed
 1396 0016 80BC     		pop	{r7}
 1397              		.cfi_restore 7
 1398              		.cfi_def_cfa_offset 0
 1399 0018 7047     		bx	lr
 1400              	.L67:
 1401 001a 00BF     		.align	2
 1402              	.L66:
 1403 001c 8D640040 		.word	1073767565
 1404              		.cfi_endproc
 1405              	.LFE17:
 1406              		.size	CapSense_CSD_SetScanSpeed, .-CapSense_CSD_SetScanSpeed
 1407              		.section	.text.CapSense_CSD_SetAnalogSwitchesSource,"ax",%progbits
 1408              		.align	2
 1409              		.global	CapSense_CSD_SetAnalogSwitchesSource
 1410              		.thumb
 1411              		.thumb_func
 1412              		.type	CapSense_CSD_SetAnalogSwitchesSource, %function
 1413              	CapSense_CSD_SetAnalogSwitchesSource:
 1414              	.LFB18:
1918:Generated_Source\PSoC5/CapSense_CSD.c **** 
1919:Generated_Source\PSoC5/CapSense_CSD.c **** 
1920:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_PRS_OPTIONS)
1921:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1922:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetAnalogSwitchesSource
1923:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1924:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1925:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1926:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1927:Generated_Source\PSoC5/CapSense_CSD.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1928:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is used in auto-tuning procedure.
1929:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1930:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1931:Generated_Source\PSoC5/CapSense_CSD.c ****     *  src:  analog switches source:
1932:Generated_Source\PSoC5/CapSense_CSD.c ****     *           CapSense_CSD_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1933:Generated_Source\PSoC5/CapSense_CSD.c ****     *           CapSense_CSD_ANALOG_SWITCHES_SRC_PRS - selects PRS
1934:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1935:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1936:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1937:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1938:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1939:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1940:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1941:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetAnalogSwitchesSource(uint8 src)
1942:Generated_Source\PSoC5/CapSense_CSD.c ****                       
1943:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1415              		.loc 1 1943 0
 1416              		.cfi_startproc
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 60


 1417              		@ args = 0, pretend = 0, frame = 8
 1418              		@ frame_needed = 1, uses_anonymous_args = 0
 1419              		@ link register save eliminated.
 1420 0000 80B4     		push	{r7}
 1421              		.cfi_def_cfa_offset 4
 1422              		.cfi_offset 7, -4
 1423 0002 83B0     		sub	sp, sp, #12
 1424              		.cfi_def_cfa_offset 16
 1425 0004 00AF     		add	r7, sp, #0
 1426              		.cfi_def_cfa_register 7
 1427 0006 0346     		mov	r3, r0
 1428 0008 FB71     		strb	r3, [r7, #7]
1944:Generated_Source\PSoC5/CapSense_CSD.c ****         if(src == CapSense_CSD_ANALOG_SWITCHES_SRC_PRESCALER)
 1429              		.loc 1 1944 0
 1430 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1431 000c 012B     		cmp	r3, #1
 1432 000e 08D1     		bne	.L69
1945:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1946:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= (uint8)~0x10u;
 1433              		.loc 1 1946 0
 1434 0010 0A4A     		ldr	r2, .L72
 1435 0012 0A4B     		ldr	r3, .L72
 1436 0014 1B78     		ldrb	r3, [r3]
 1437 0016 DBB2     		uxtb	r3, r3
 1438 0018 23F01003 		bic	r3, r3, #16
 1439 001c DBB2     		uxtb	r3, r3
 1440 001e 1370     		strb	r3, [r2]
1947:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1948:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1949:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1950:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= 0x10u;
1951:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1952:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1441              		.loc 1 1952 0
 1442 0020 07E0     		b	.L71
 1443              	.L69:
1950:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 1444              		.loc 1 1950 0
 1445 0022 064A     		ldr	r2, .L72
 1446 0024 054B     		ldr	r3, .L72
 1447 0026 1B78     		ldrb	r3, [r3]
 1448 0028 DBB2     		uxtb	r3, r3
 1449 002a 43F01003 		orr	r3, r3, #16
 1450 002e DBB2     		uxtb	r3, r3
 1451 0030 1370     		strb	r3, [r2]
 1452              	.L71:
 1453              		.loc 1 1952 0
 1454 0032 00BF     		nop
 1455 0034 0C37     		adds	r7, r7, #12
 1456              		.cfi_def_cfa_offset 4
 1457 0036 BD46     		mov	sp, r7
 1458              		.cfi_def_cfa_register 13
 1459              		@ sp needed
 1460 0038 80BC     		pop	{r7}
 1461              		.cfi_restore 7
 1462              		.cfi_def_cfa_offset 0
 1463 003a 7047     		bx	lr
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 61


 1464              	.L73:
 1465              		.align	2
 1466              	.L72:
 1467 003c 7C640040 		.word	1073767548
 1468              		.cfi_endproc
 1469              	.LFE18:
 1470              		.size	CapSense_CSD_SetAnalogSwitchesSource, .-CapSense_CSD_SetAnalogSwitchesSource
 1471              		.text
 1472              	.Letext0:
 1473              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1474              		.section	.debug_info,"",%progbits
 1475              	.Ldebug_info0:
 1476 0000 2F050000 		.4byte	0x52f
 1477 0004 0400     		.2byte	0x4
 1478 0006 00000000 		.4byte	.Ldebug_abbrev0
 1479 000a 04       		.byte	0x4
 1480 000b 01       		.uleb128 0x1
 1481 000c 10000000 		.4byte	.LASF61
 1482 0010 0C       		.byte	0xc
 1483 0011 21020000 		.4byte	.LASF62
 1484 0015 8E040000 		.4byte	.LASF63
 1485 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1486 001d 00000000 		.4byte	0
 1487 0021 00000000 		.4byte	.Ldebug_line0
 1488 0025 02       		.uleb128 0x2
 1489 0026 01       		.byte	0x1
 1490 0027 06       		.byte	0x6
 1491 0028 0B010000 		.4byte	.LASF0
 1492 002c 02       		.uleb128 0x2
 1493 002d 01       		.byte	0x1
 1494 002e 08       		.byte	0x8
 1495 002f 8B030000 		.4byte	.LASF1
 1496 0033 02       		.uleb128 0x2
 1497 0034 02       		.byte	0x2
 1498 0035 05       		.byte	0x5
 1499 0036 99030000 		.4byte	.LASF2
 1500 003a 02       		.uleb128 0x2
 1501 003b 02       		.byte	0x2
 1502 003c 07       		.byte	0x7
 1503 003d 68020000 		.4byte	.LASF3
 1504 0041 02       		.uleb128 0x2
 1505 0042 04       		.byte	0x4
 1506 0043 05       		.byte	0x5
 1507 0044 42010000 		.4byte	.LASF4
 1508 0048 02       		.uleb128 0x2
 1509 0049 04       		.byte	0x4
 1510 004a 07       		.byte	0x7
 1511 004b 0F020000 		.4byte	.LASF5
 1512 004f 02       		.uleb128 0x2
 1513 0050 08       		.byte	0x8
 1514 0051 05       		.byte	0x5
 1515 0052 FD000000 		.4byte	.LASF6
 1516 0056 02       		.uleb128 0x2
 1517 0057 08       		.byte	0x8
 1518 0058 07       		.byte	0x7
 1519 0059 B8000000 		.4byte	.LASF7
 1520 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 62


 1521 005e 04       		.byte	0x4
 1522 005f 05       		.byte	0x5
 1523 0060 696E7400 		.ascii	"int\000"
 1524 0064 02       		.uleb128 0x2
 1525 0065 04       		.byte	0x4
 1526 0066 07       		.byte	0x7
 1527 0067 02020000 		.4byte	.LASF8
 1528 006b 04       		.uleb128 0x4
 1529 006c 80010000 		.4byte	.LASF9
 1530 0070 02       		.byte	0x2
 1531 0071 9201     		.2byte	0x192
 1532 0073 2C000000 		.4byte	0x2c
 1533 0077 04       		.uleb128 0x4
 1534 0078 00000000 		.4byte	.LASF10
 1535 007c 02       		.byte	0x2
 1536 007d 9301     		.2byte	0x193
 1537 007f 3A000000 		.4byte	0x3a
 1538 0083 04       		.uleb128 0x4
 1539 0084 A2010000 		.4byte	.LASF11
 1540 0088 02       		.byte	0x2
 1541 0089 9401     		.2byte	0x194
 1542 008b 48000000 		.4byte	0x48
 1543 008f 02       		.uleb128 0x2
 1544 0090 04       		.byte	0x4
 1545 0091 04       		.byte	0x4
 1546 0092 5C030000 		.4byte	.LASF12
 1547 0096 02       		.uleb128 0x2
 1548 0097 08       		.byte	0x8
 1549 0098 04       		.byte	0x4
 1550 0099 86010000 		.4byte	.LASF13
 1551 009d 02       		.uleb128 0x2
 1552 009e 01       		.byte	0x1
 1553 009f 08       		.byte	0x8
 1554 00a0 01040000 		.4byte	.LASF14
 1555 00a4 04       		.uleb128 0x4
 1556 00a5 86030000 		.4byte	.LASF15
 1557 00a9 02       		.byte	0x2
 1558 00aa 3C02     		.2byte	0x23c
 1559 00ac B0000000 		.4byte	0xb0
 1560 00b0 05       		.uleb128 0x5
 1561 00b1 6B000000 		.4byte	0x6b
 1562 00b5 04       		.uleb128 0x4
 1563 00b6 7A010000 		.4byte	.LASF16
 1564 00ba 02       		.byte	0x2
 1565 00bb 3D02     		.2byte	0x23d
 1566 00bd C1000000 		.4byte	0xc1
 1567 00c1 05       		.uleb128 0x5
 1568 00c2 77000000 		.4byte	0x77
 1569 00c6 04       		.uleb128 0x4
 1570 00c7 E5020000 		.4byte	.LASF17
 1571 00cb 02       		.byte	0x2
 1572 00cc 3E02     		.2byte	0x23e
 1573 00ce D2000000 		.4byte	0xd2
 1574 00d2 05       		.uleb128 0x5
 1575 00d3 83000000 		.4byte	0x83
 1576 00d7 02       		.uleb128 0x2
 1577 00d8 08       		.byte	0x8
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 63


 1578 00d9 04       		.byte	0x4
 1579 00da 0E030000 		.4byte	.LASF18
 1580 00de 02       		.uleb128 0x2
 1581 00df 04       		.byte	0x4
 1582 00e0 07       		.byte	0x7
 1583 00e1 05030000 		.4byte	.LASF19
 1584 00e5 06       		.uleb128 0x6
 1585 00e6 30010000 		.4byte	.LASF20
 1586 00ea 01       		.byte	0x1
 1587 00eb 63       		.byte	0x63
 1588 00ec 00000000 		.4byte	.LFB0
 1589 00f0 68010000 		.4byte	.LFE0-.LFB0
 1590 00f4 01       		.uleb128 0x1
 1591 00f5 9C       		.byte	0x9c
 1592 00f6 09010000 		.4byte	0x109
 1593 00fa 07       		.uleb128 0x7
 1594 00fb F5040000 		.4byte	.LASF22
 1595 00ff 01       		.byte	0x1
 1596 0100 6A       		.byte	0x6a
 1597 0101 6B000000 		.4byte	0x6b
 1598 0105 02       		.uleb128 0x2
 1599 0106 91       		.byte	0x91
 1600 0107 77       		.sleb128 -9
 1601 0108 00       		.byte	0
 1602 0109 08       		.uleb128 0x8
 1603 010a 7A040000 		.4byte	.LASF21
 1604 010e 01       		.byte	0x1
 1605 010f 4401     		.2byte	0x144
 1606 0111 00000000 		.4byte	.LFB1
 1607 0115 C0000000 		.4byte	.LFE1-.LFB1
 1608 0119 01       		.uleb128 0x1
 1609 011a 9C       		.byte	0x9c
 1610 011b 2F010000 		.4byte	0x12f
 1611 011f 09       		.uleb128 0x9
 1612 0120 F5040000 		.4byte	.LASF22
 1613 0124 01       		.byte	0x1
 1614 0125 4601     		.2byte	0x146
 1615 0127 6B000000 		.4byte	0x6b
 1616 012b 02       		.uleb128 0x2
 1617 012c 91       		.byte	0x91
 1618 012d 77       		.sleb128 -9
 1619 012e 00       		.byte	0
 1620 012f 0A       		.uleb128 0xa
 1621 0130 1A030000 		.4byte	.LASF23
 1622 0134 01       		.byte	0x1
 1623 0135 DD01     		.2byte	0x1dd
 1624 0137 00000000 		.4byte	.LFB2
 1625 013b 24000000 		.4byte	.LFE2-.LFB2
 1626 013f 01       		.uleb128 0x1
 1627 0140 9C       		.byte	0x9c
 1628 0141 0A       		.uleb128 0xa
 1629 0142 EF030000 		.4byte	.LASF24
 1630 0146 01       		.byte	0x1
 1631 0147 0202     		.2byte	0x202
 1632 0149 00000000 		.4byte	.LFB3
 1633 014d C0000000 		.4byte	.LFE3-.LFB3
 1634 0151 01       		.uleb128 0x1
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 64


 1635 0152 9C       		.byte	0x9c
 1636 0153 0B       		.uleb128 0xb
 1637 0154 06050000 		.4byte	.LASF33
 1638 0158 01       		.byte	0x1
 1639 0159 8C02     		.2byte	0x28c
 1640 015b 6B000000 		.4byte	0x6b
 1641 015f 00000000 		.4byte	.LFB4
 1642 0163 50000000 		.4byte	.LFE4-.LFB4
 1643 0167 01       		.uleb128 0x1
 1644 0168 9C       		.byte	0x9c
 1645 0169 9B010000 		.4byte	0x19b
 1646 016d 0C       		.uleb128 0xc
 1647 016e 07000000 		.4byte	.LASF27
 1648 0172 01       		.byte	0x1
 1649 0173 8C02     		.2byte	0x28c
 1650 0175 6B000000 		.4byte	0x6b
 1651 0179 02       		.uleb128 0x2
 1652 017a 91       		.byte	0x91
 1653 017b 6F       		.sleb128 -17
 1654 017c 0D       		.uleb128 0xd
 1655 017d 706F7300 		.ascii	"pos\000"
 1656 0181 01       		.byte	0x1
 1657 0182 8E02     		.2byte	0x28e
 1658 0184 6B000000 		.4byte	0x6b
 1659 0188 02       		.uleb128 0x2
 1660 0189 91       		.byte	0x91
 1661 018a 77       		.sleb128 -9
 1662 018b 09       		.uleb128 0x9
 1663 018c 37030000 		.4byte	.LASF25
 1664 0190 01       		.byte	0x1
 1665 0191 8F02     		.2byte	0x28f
 1666 0193 6B000000 		.4byte	0x6b
 1667 0197 02       		.uleb128 0x2
 1668 0198 91       		.byte	0x91
 1669 0199 76       		.sleb128 -10
 1670 019a 00       		.byte	0
 1671 019b 08       		.uleb128 0x8
 1672 019c 06040000 		.4byte	.LASF26
 1673 01a0 01       		.byte	0x1
 1674 01a1 2603     		.2byte	0x326
 1675 01a3 00000000 		.4byte	.LFB5
 1676 01a7 48000000 		.4byte	.LFE5-.LFB5
 1677 01ab 01       		.uleb128 0x1
 1678 01ac 9C       		.byte	0x9c
 1679 01ad D0010000 		.4byte	0x1d0
 1680 01b1 0C       		.uleb128 0xc
 1681 01b2 B3020000 		.4byte	.LASF28
 1682 01b6 01       		.byte	0x1
 1683 01b7 2603     		.2byte	0x326
 1684 01b9 6B000000 		.4byte	0x6b
 1685 01bd 02       		.uleb128 0x2
 1686 01be 91       		.byte	0x91
 1687 01bf 6F       		.sleb128 -17
 1688 01c0 09       		.uleb128 0x9
 1689 01c1 A3030000 		.4byte	.LASF29
 1690 01c5 01       		.byte	0x1
 1691 01c6 2803     		.2byte	0x328
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 65


 1692 01c8 6B000000 		.4byte	0x6b
 1693 01cc 02       		.uleb128 0x2
 1694 01cd 91       		.byte	0x91
 1695 01ce 77       		.sleb128 -9
 1696 01cf 00       		.byte	0
 1697 01d0 08       		.uleb128 0x8
 1698 01d1 CD020000 		.4byte	.LASF30
 1699 01d5 01       		.byte	0x1
 1700 01d6 9603     		.2byte	0x396
 1701 01d8 00000000 		.4byte	.LFB6
 1702 01dc 34000000 		.4byte	.LFE6-.LFB6
 1703 01e0 01       		.uleb128 0x1
 1704 01e1 9C       		.byte	0x9c
 1705 01e2 F6010000 		.4byte	0x1f6
 1706 01e6 0C       		.uleb128 0xc
 1707 01e7 7B020000 		.4byte	.LASF31
 1708 01eb 01       		.byte	0x1
 1709 01ec 9603     		.2byte	0x396
 1710 01ee 6B000000 		.4byte	0x6b
 1711 01f2 02       		.uleb128 0x2
 1712 01f3 91       		.byte	0x91
 1713 01f4 77       		.sleb128 -9
 1714 01f5 00       		.byte	0
 1715 01f6 0A       		.uleb128 0xa
 1716 01f7 A9010000 		.4byte	.LASF32
 1717 01fb 01       		.byte	0x1
 1718 01fc E303     		.2byte	0x3e3
 1719 01fe 00000000 		.4byte	.LFB7
 1720 0202 58000000 		.4byte	.LFE7-.LFB7
 1721 0206 01       		.uleb128 0x1
 1722 0207 9C       		.byte	0x9c
 1723 0208 0E       		.uleb128 0xe
 1724 0209 AA030000 		.4byte	.LASF64
 1725 020d 01       		.byte	0x1
 1726 020e 1804     		.2byte	0x418
 1727 0210 6B000000 		.4byte	0x6b
 1728 0214 00000000 		.4byte	.LFB8
 1729 0218 1C000000 		.4byte	.LFE8-.LFB8
 1730 021c 01       		.uleb128 0x1
 1731 021d 9C       		.byte	0x9c
 1732 021e 0B       		.uleb128 0xb
 1733 021f 27040000 		.4byte	.LASF34
 1734 0223 01       		.byte	0x1
 1735 0224 3104     		.2byte	0x431
 1736 0226 77000000 		.4byte	0x77
 1737 022a 00000000 		.4byte	.LFB9
 1738 022e 20000000 		.4byte	.LFE9-.LFB9
 1739 0232 01       		.uleb128 0x1
 1740 0233 9C       		.byte	0x9c
 1741 0234 48020000 		.4byte	0x248
 1742 0238 0C       		.uleb128 0xc
 1743 0239 7B020000 		.4byte	.LASF31
 1744 023d 01       		.byte	0x1
 1745 023e 3104     		.2byte	0x431
 1746 0240 6B000000 		.4byte	0x6b
 1747 0244 02       		.uleb128 0x2
 1748 0245 91       		.byte	0x91
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 66


 1749 0246 77       		.sleb128 -9
 1750 0247 00       		.byte	0
 1751 0248 08       		.uleb128 0x8
 1752 0249 CE010000 		.4byte	.LASF35
 1753 024d 01       		.byte	0x1
 1754 024e 4604     		.2byte	0x446
 1755 0250 00000000 		.4byte	.LFB10
 1756 0254 28000000 		.4byte	.LFE10-.LFB10
 1757 0258 01       		.uleb128 0x1
 1758 0259 9C       		.byte	0x9c
 1759 025a 6C020000 		.4byte	0x26c
 1760 025e 0D       		.uleb128 0xd
 1761 025f 6900     		.ascii	"i\000"
 1762 0261 01       		.byte	0x1
 1763 0262 4804     		.2byte	0x448
 1764 0264 6B000000 		.4byte	0x6b
 1765 0268 02       		.uleb128 0x2
 1766 0269 91       		.byte	0x91
 1767 026a 77       		.sleb128 -9
 1768 026b 00       		.byte	0
 1769 026c 08       		.uleb128 0x8
 1770 026d EB020000 		.4byte	.LASF36
 1771 0271 01       		.byte	0x1
 1772 0272 DC04     		.2byte	0x4dc
 1773 0274 00000000 		.4byte	.LFB11
 1774 0278 54000000 		.4byte	.LFE11-.LFB11
 1775 027c 01       		.uleb128 0x1
 1776 027d 9C       		.byte	0x9c
 1777 027e B0020000 		.4byte	0x2b0
 1778 0282 0C       		.uleb128 0xc
 1779 0283 7B020000 		.4byte	.LASF31
 1780 0287 01       		.byte	0x1
 1781 0288 DC04     		.2byte	0x4dc
 1782 028a 6B000000 		.4byte	0x6b
 1783 028e 02       		.uleb128 0x2
 1784 028f 91       		.byte	0x91
 1785 0290 6F       		.sleb128 -17
 1786 0291 09       		.uleb128 0x9
 1787 0292 E8010000 		.4byte	.LASF37
 1788 0296 01       		.byte	0x1
 1789 0297 DE04     		.2byte	0x4de
 1790 0299 6B000000 		.4byte	0x6b
 1791 029d 02       		.uleb128 0x2
 1792 029e 91       		.byte	0x91
 1793 029f 77       		.sleb128 -9
 1794 02a0 09       		.uleb128 0x9
 1795 02a1 C9010000 		.4byte	.LASF38
 1796 02a5 01       		.byte	0x1
 1797 02a6 DF04     		.2byte	0x4df
 1798 02a8 6B000000 		.4byte	0x6b
 1799 02ac 02       		.uleb128 0x2
 1800 02ad 91       		.byte	0x91
 1801 02ae 76       		.sleb128 -10
 1802 02af 00       		.byte	0
 1803 02b0 08       		.uleb128 0x8
 1804 02b1 82020000 		.4byte	.LASF39
 1805 02b5 01       		.byte	0x1
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 67


 1806 02b6 3105     		.2byte	0x531
 1807 02b8 00000000 		.4byte	.LFB12
 1808 02bc 58000000 		.4byte	.LFE12-.LFB12
 1809 02c0 01       		.uleb128 0x1
 1810 02c1 9C       		.byte	0x9c
 1811 02c2 F4020000 		.4byte	0x2f4
 1812 02c6 0C       		.uleb128 0xc
 1813 02c7 7B020000 		.4byte	.LASF31
 1814 02cb 01       		.byte	0x1
 1815 02cc 3105     		.2byte	0x531
 1816 02ce 6B000000 		.4byte	0x6b
 1817 02d2 02       		.uleb128 0x2
 1818 02d3 91       		.byte	0x91
 1819 02d4 6F       		.sleb128 -17
 1820 02d5 09       		.uleb128 0x9
 1821 02d6 E8010000 		.4byte	.LASF37
 1822 02da 01       		.byte	0x1
 1823 02db 3305     		.2byte	0x533
 1824 02dd 6B000000 		.4byte	0x6b
 1825 02e1 02       		.uleb128 0x2
 1826 02e2 91       		.byte	0x91
 1827 02e3 77       		.sleb128 -9
 1828 02e4 09       		.uleb128 0x9
 1829 02e5 C9010000 		.4byte	.LASF38
 1830 02e9 01       		.byte	0x1
 1831 02ea 3405     		.2byte	0x534
 1832 02ec 6B000000 		.4byte	0x6b
 1833 02f0 02       		.uleb128 0x2
 1834 02f1 91       		.byte	0x91
 1835 02f2 76       		.sleb128 -10
 1836 02f3 00       		.byte	0
 1837 02f4 08       		.uleb128 0x8
 1838 02f5 ED010000 		.4byte	.LASF40
 1839 02f9 01       		.byte	0x1
 1840 02fa 8505     		.2byte	0x585
 1841 02fc 00000000 		.4byte	.LFB13
 1842 0300 5C000000 		.4byte	.LFE13-.LFB13
 1843 0304 01       		.uleb128 0x1
 1844 0305 9C       		.byte	0x9c
 1845 0306 1A030000 		.4byte	0x31a
 1846 030a 0C       		.uleb128 0xc
 1847 030b 7B020000 		.4byte	.LASF31
 1848 030f 01       		.byte	0x1
 1849 0310 8505     		.2byte	0x585
 1850 0312 6B000000 		.4byte	0x6b
 1851 0316 02       		.uleb128 0x2
 1852 0317 91       		.byte	0x91
 1853 0318 77       		.sleb128 -9
 1854 0319 00       		.byte	0
 1855 031a 08       		.uleb128 0x8
 1856 031b 9D020000 		.4byte	.LASF41
 1857 031f 01       		.byte	0x1
 1858 0320 2D06     		.2byte	0x62d
 1859 0322 00000000 		.4byte	.LFB14
 1860 0326 98000000 		.4byte	.LFE14-.LFB14
 1861 032a 01       		.uleb128 0x1
 1862 032b 9C       		.byte	0x9c
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 68


 1863 032c 40030000 		.4byte	0x340
 1864 0330 0C       		.uleb128 0xc
 1865 0331 7B020000 		.4byte	.LASF31
 1866 0335 01       		.byte	0x1
 1867 0336 2D06     		.2byte	0x62d
 1868 0338 6B000000 		.4byte	0x6b
 1869 033c 02       		.uleb128 0x2
 1870 033d 91       		.byte	0x91
 1871 033e 77       		.sleb128 -9
 1872 033f 00       		.byte	0
 1873 0340 0F       		.uleb128 0xf
 1874 0341 9E000000 		.4byte	.LASF42
 1875 0345 01       		.byte	0x1
 1876 0346 3B07     		.2byte	0x73b
 1877 0348 00000000 		.4byte	.LFB15
 1878 034c 30000000 		.4byte	.LFE15-.LFB15
 1879 0350 01       		.uleb128 0x1
 1880 0351 9C       		.byte	0x9c
 1881 0352 66030000 		.4byte	0x366
 1882 0356 0C       		.uleb128 0xc
 1883 0357 62030000 		.4byte	.LASF43
 1884 035b 01       		.byte	0x1
 1885 035c 3B07     		.2byte	0x73b
 1886 035e 6B000000 		.4byte	0x6b
 1887 0362 02       		.uleb128 0x2
 1888 0363 91       		.byte	0x91
 1889 0364 77       		.sleb128 -9
 1890 0365 00       		.byte	0
 1891 0366 0B       		.uleb128 0xb
 1892 0367 6C030000 		.4byte	.LASF44
 1893 036b 01       		.byte	0x1
 1894 036c 5807     		.2byte	0x758
 1895 036e 6B000000 		.4byte	0x6b
 1896 0372 00000000 		.4byte	.LFB16
 1897 0376 24000000 		.4byte	.LFE16-.LFB16
 1898 037a 01       		.uleb128 0x1
 1899 037b 9C       		.byte	0x9c
 1900 037c 90030000 		.4byte	0x390
 1901 0380 09       		.uleb128 0x9
 1902 0381 62030000 		.4byte	.LASF43
 1903 0385 01       		.byte	0x1
 1904 0386 5A07     		.2byte	0x75a
 1905 0388 6B000000 		.4byte	0x6b
 1906 038c 02       		.uleb128 0x2
 1907 038d 91       		.byte	0x91
 1908 038e 77       		.sleb128 -9
 1909 038f 00       		.byte	0
 1910 0390 0F       		.uleb128 0xf
 1911 0391 D5030000 		.4byte	.LASF45
 1912 0395 01       		.byte	0x1
 1913 0396 7A07     		.2byte	0x77a
 1914 0398 00000000 		.4byte	.LFB17
 1915 039c 20000000 		.4byte	.LFE17-.LFB17
 1916 03a0 01       		.uleb128 0x1
 1917 03a1 9C       		.byte	0x9c
 1918 03a2 B6030000 		.4byte	0x3b6
 1919 03a6 0C       		.uleb128 0xc
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 69


 1920 03a7 2D030000 		.4byte	.LASF46
 1921 03ab 01       		.byte	0x1
 1922 03ac 7A07     		.2byte	0x77a
 1923 03ae 6B000000 		.4byte	0x6b
 1924 03b2 02       		.uleb128 0x2
 1925 03b3 91       		.byte	0x91
 1926 03b4 77       		.sleb128 -9
 1927 03b5 00       		.byte	0
 1928 03b6 0F       		.uleb128 0xf
 1929 03b7 22050000 		.4byte	.LASF47
 1930 03bb 01       		.byte	0x1
 1931 03bc 9507     		.2byte	0x795
 1932 03be 00000000 		.4byte	.LFB18
 1933 03c2 40000000 		.4byte	.LFE18-.LFB18
 1934 03c6 01       		.uleb128 0x1
 1935 03c7 9C       		.byte	0x9c
 1936 03c8 DC030000 		.4byte	0x3dc
 1937 03cc 10       		.uleb128 0x10
 1938 03cd 73726300 		.ascii	"src\000"
 1939 03d1 01       		.byte	0x1
 1940 03d2 9507     		.2byte	0x795
 1941 03d4 6B000000 		.4byte	0x6b
 1942 03d8 02       		.uleb128 0x2
 1943 03d9 91       		.byte	0x91
 1944 03da 77       		.sleb128 -9
 1945 03db 00       		.byte	0
 1946 03dc 07       		.uleb128 0x7
 1947 03dd 8D010000 		.4byte	.LASF48
 1948 03e1 01       		.byte	0x1
 1949 03e2 16       		.byte	0x16
 1950 03e3 6B000000 		.4byte	0x6b
 1951 03e7 05       		.uleb128 0x5
 1952 03e8 03       		.byte	0x3
 1953 03e9 00000000 		.4byte	CapSense_CSD_initVar
 1954 03ed 11       		.uleb128 0x11
 1955 03ee 47050000 		.4byte	.LASF49
 1956 03f2 01       		.byte	0x1
 1957 03f3 19       		.byte	0x19
 1958 03f4 B0000000 		.4byte	0xb0
 1959 03f8 05       		.uleb128 0x5
 1960 03f9 03       		.byte	0x3
 1961 03fa 00000000 		.4byte	CapSense_CSD_csv
 1962 03fe 11       		.uleb128 0x11
 1963 03ff 17010000 		.4byte	.LASF50
 1964 0403 01       		.byte	0x1
 1965 0404 1A       		.byte	0x1a
 1966 0405 B0000000 		.4byte	0xb0
 1967 0409 05       		.uleb128 0x5
 1968 040a 03       		.byte	0x3
 1969 040b 00000000 		.4byte	CapSense_CSD_sensorIndex
 1970 040f 12       		.uleb128 0x12
 1971 0410 77000000 		.4byte	0x77
 1972 0414 1F040000 		.4byte	0x41f
 1973 0418 13       		.uleb128 0x13
 1974 0419 DE000000 		.4byte	0xde
 1975 041d 00       		.byte	0
 1976 041e 00       		.byte	0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 70


 1977 041f 11       		.uleb128 0x11
 1978 0420 BE030000 		.4byte	.LASF51
 1979 0424 01       		.byte	0x1
 1980 0425 29       		.byte	0x29
 1981 0426 0F040000 		.4byte	0x40f
 1982 042a 05       		.uleb128 0x5
 1983 042b 03       		.byte	0x3
 1984 042c 00000000 		.4byte	CapSense_CSD_sensorRaw
 1985 0430 12       		.uleb128 0x12
 1986 0431 6B000000 		.4byte	0x6b
 1987 0435 40040000 		.4byte	0x440
 1988 0439 13       		.uleb128 0x13
 1989 043a DE000000 		.4byte	0xde
 1990 043e 00       		.byte	0
 1991 043f 00       		.byte	0
 1992 0440 11       		.uleb128 0x11
 1993 0441 3E030000 		.4byte	.LASF52
 1994 0445 01       		.byte	0x1
 1995 0446 2B       		.byte	0x2b
 1996 0447 30040000 		.4byte	0x430
 1997 044b 05       		.uleb128 0x5
 1998 044c 03       		.byte	0x3
 1999 044d 00000000 		.4byte	CapSense_CSD_sensorEnableMask
 2000 0451 12       		.uleb128 0x12
 2001 0452 67040000 		.4byte	0x467
 2002 0456 61040000 		.4byte	0x461
 2003 045a 13       		.uleb128 0x13
 2004 045b DE000000 		.4byte	0xde
 2005 045f 00       		.byte	0
 2006 0460 00       		.byte	0
 2007 0461 14       		.uleb128 0x14
 2008 0462 04       		.byte	0x4
 2009 0463 6B000000 		.4byte	0x6b
 2010 0467 15       		.uleb128 0x15
 2011 0468 61040000 		.4byte	0x461
 2012 046c 11       		.uleb128 0x11
 2013 046d B8020000 		.4byte	.LASF53
 2014 0471 01       		.byte	0x1
 2015 0472 2E       		.byte	0x2e
 2016 0473 7D040000 		.4byte	0x47d
 2017 0477 05       		.uleb128 0x5
 2018 0478 03       		.byte	0x3
 2019 0479 00000000 		.4byte	CapSense_CSD_pcTable
 2020 047d 15       		.uleb128 0x15
 2021 047e 51040000 		.4byte	0x451
 2022 0482 12       		.uleb128 0x12
 2023 0483 92040000 		.4byte	0x492
 2024 0487 92040000 		.4byte	0x492
 2025 048b 13       		.uleb128 0x13
 2026 048c DE000000 		.4byte	0xde
 2027 0490 00       		.byte	0
 2028 0491 00       		.byte	0
 2029 0492 15       		.uleb128 0x15
 2030 0493 6B000000 		.4byte	0x6b
 2031 0497 11       		.uleb128 0x11
 2032 0498 E6000000 		.4byte	.LASF54
 2033 049c 01       		.byte	0x1
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 71


 2034 049d 32       		.byte	0x32
 2035 049e A8040000 		.4byte	0x4a8
 2036 04a2 05       		.uleb128 0x5
 2037 04a3 03       		.byte	0x3
 2038 04a4 00000000 		.4byte	CapSense_CSD_portTable
 2039 04a8 15       		.uleb128 0x15
 2040 04a9 82040000 		.4byte	0x482
 2041 04ad 11       		.uleb128 0x11
 2042 04ae CF000000 		.4byte	.LASF55
 2043 04b2 01       		.byte	0x1
 2044 04b3 36       		.byte	0x36
 2045 04b4 BE040000 		.4byte	0x4be
 2046 04b8 05       		.uleb128 0x5
 2047 04b9 03       		.byte	0x3
 2048 04ba 00000000 		.4byte	CapSense_CSD_maskTable
 2049 04be 15       		.uleb128 0x15
 2050 04bf 82040000 		.4byte	0x482
 2051 04c3 12       		.uleb128 0x12
 2052 04c4 67040000 		.4byte	0x467
 2053 04c8 D3040000 		.4byte	0x4d3
 2054 04cc 13       		.uleb128 0x13
 2055 04cd DE000000 		.4byte	0xde
 2056 04d1 07       		.byte	0x7
 2057 04d2 00       		.byte	0
 2058 04d3 11       		.uleb128 0x11
 2059 04d4 65010000 		.4byte	.LASF56
 2060 04d8 01       		.byte	0x1
 2061 04d9 3A       		.byte	0x3a
 2062 04da E4040000 		.4byte	0x4e4
 2063 04de 05       		.uleb128 0x5
 2064 04df 03       		.byte	0x3
 2065 04e0 00000000 		.4byte	CapSense_CSD_csTable
 2066 04e4 15       		.uleb128 0x15
 2067 04e5 C3040000 		.4byte	0x4c3
 2068 04e9 11       		.uleb128 0x11
 2069 04ea 60040000 		.4byte	.LASF57
 2070 04ee 01       		.byte	0x1
 2071 04ef 40       		.byte	0x40
 2072 04f0 30040000 		.4byte	0x430
 2073 04f4 05       		.uleb128 0x5
 2074 04f5 03       		.byte	0x3
 2075 04f6 00000000 		.4byte	CapSense_CSD_idacSettings
 2076 04fa 11       		.uleb128 0x11
 2077 04fb 42040000 		.4byte	.LASF58
 2078 04ff 01       		.byte	0x1
 2079 0500 44       		.byte	0x44
 2080 0501 30040000 		.4byte	0x430
 2081 0505 05       		.uleb128 0x5
 2082 0506 03       		.byte	0x3
 2083 0507 00000000 		.4byte	CapSense_CSD_widgetResolution
 2084 050b 11       		.uleb128 0x11
 2085 050c 47020000 		.4byte	.LASF59
 2086 0510 01       		.byte	0x1
 2087 0511 48       		.byte	0x48
 2088 0512 30040000 		.4byte	0x430
 2089 0516 05       		.uleb128 0x5
 2090 0517 03       		.byte	0x3
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 72


 2091 0518 00000000 		.4byte	CapSense_CSD_analogSwitchDivider
 2092 051c 11       		.uleb128 0x11
 2093 051d 4B010000 		.4byte	.LASF60
 2094 0521 01       		.byte	0x1
 2095 0522 4C       		.byte	0x4c
 2096 0523 2D050000 		.4byte	0x52d
 2097 0527 05       		.uleb128 0x5
 2098 0528 03       		.byte	0x3
 2099 0529 00000000 		.4byte	CapSense_CSD_widgetNumber
 2100 052d 15       		.uleb128 0x15
 2101 052e 82040000 		.4byte	0x482
 2102 0532 00       		.byte	0
 2103              		.section	.debug_abbrev,"",%progbits
 2104              	.Ldebug_abbrev0:
 2105 0000 01       		.uleb128 0x1
 2106 0001 11       		.uleb128 0x11
 2107 0002 01       		.byte	0x1
 2108 0003 25       		.uleb128 0x25
 2109 0004 0E       		.uleb128 0xe
 2110 0005 13       		.uleb128 0x13
 2111 0006 0B       		.uleb128 0xb
 2112 0007 03       		.uleb128 0x3
 2113 0008 0E       		.uleb128 0xe
 2114 0009 1B       		.uleb128 0x1b
 2115 000a 0E       		.uleb128 0xe
 2116 000b 55       		.uleb128 0x55
 2117 000c 17       		.uleb128 0x17
 2118 000d 11       		.uleb128 0x11
 2119 000e 01       		.uleb128 0x1
 2120 000f 10       		.uleb128 0x10
 2121 0010 17       		.uleb128 0x17
 2122 0011 00       		.byte	0
 2123 0012 00       		.byte	0
 2124 0013 02       		.uleb128 0x2
 2125 0014 24       		.uleb128 0x24
 2126 0015 00       		.byte	0
 2127 0016 0B       		.uleb128 0xb
 2128 0017 0B       		.uleb128 0xb
 2129 0018 3E       		.uleb128 0x3e
 2130 0019 0B       		.uleb128 0xb
 2131 001a 03       		.uleb128 0x3
 2132 001b 0E       		.uleb128 0xe
 2133 001c 00       		.byte	0
 2134 001d 00       		.byte	0
 2135 001e 03       		.uleb128 0x3
 2136 001f 24       		.uleb128 0x24
 2137 0020 00       		.byte	0
 2138 0021 0B       		.uleb128 0xb
 2139 0022 0B       		.uleb128 0xb
 2140 0023 3E       		.uleb128 0x3e
 2141 0024 0B       		.uleb128 0xb
 2142 0025 03       		.uleb128 0x3
 2143 0026 08       		.uleb128 0x8
 2144 0027 00       		.byte	0
 2145 0028 00       		.byte	0
 2146 0029 04       		.uleb128 0x4
 2147 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 73


 2148 002b 00       		.byte	0
 2149 002c 03       		.uleb128 0x3
 2150 002d 0E       		.uleb128 0xe
 2151 002e 3A       		.uleb128 0x3a
 2152 002f 0B       		.uleb128 0xb
 2153 0030 3B       		.uleb128 0x3b
 2154 0031 05       		.uleb128 0x5
 2155 0032 49       		.uleb128 0x49
 2156 0033 13       		.uleb128 0x13
 2157 0034 00       		.byte	0
 2158 0035 00       		.byte	0
 2159 0036 05       		.uleb128 0x5
 2160 0037 35       		.uleb128 0x35
 2161 0038 00       		.byte	0
 2162 0039 49       		.uleb128 0x49
 2163 003a 13       		.uleb128 0x13
 2164 003b 00       		.byte	0
 2165 003c 00       		.byte	0
 2166 003d 06       		.uleb128 0x6
 2167 003e 2E       		.uleb128 0x2e
 2168 003f 01       		.byte	0x1
 2169 0040 3F       		.uleb128 0x3f
 2170 0041 19       		.uleb128 0x19
 2171 0042 03       		.uleb128 0x3
 2172 0043 0E       		.uleb128 0xe
 2173 0044 3A       		.uleb128 0x3a
 2174 0045 0B       		.uleb128 0xb
 2175 0046 3B       		.uleb128 0x3b
 2176 0047 0B       		.uleb128 0xb
 2177 0048 27       		.uleb128 0x27
 2178 0049 19       		.uleb128 0x19
 2179 004a 11       		.uleb128 0x11
 2180 004b 01       		.uleb128 0x1
 2181 004c 12       		.uleb128 0x12
 2182 004d 06       		.uleb128 0x6
 2183 004e 40       		.uleb128 0x40
 2184 004f 18       		.uleb128 0x18
 2185 0050 9642     		.uleb128 0x2116
 2186 0052 19       		.uleb128 0x19
 2187 0053 01       		.uleb128 0x1
 2188 0054 13       		.uleb128 0x13
 2189 0055 00       		.byte	0
 2190 0056 00       		.byte	0
 2191 0057 07       		.uleb128 0x7
 2192 0058 34       		.uleb128 0x34
 2193 0059 00       		.byte	0
 2194 005a 03       		.uleb128 0x3
 2195 005b 0E       		.uleb128 0xe
 2196 005c 3A       		.uleb128 0x3a
 2197 005d 0B       		.uleb128 0xb
 2198 005e 3B       		.uleb128 0x3b
 2199 005f 0B       		.uleb128 0xb
 2200 0060 49       		.uleb128 0x49
 2201 0061 13       		.uleb128 0x13
 2202 0062 02       		.uleb128 0x2
 2203 0063 18       		.uleb128 0x18
 2204 0064 00       		.byte	0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 74


 2205 0065 00       		.byte	0
 2206 0066 08       		.uleb128 0x8
 2207 0067 2E       		.uleb128 0x2e
 2208 0068 01       		.byte	0x1
 2209 0069 3F       		.uleb128 0x3f
 2210 006a 19       		.uleb128 0x19
 2211 006b 03       		.uleb128 0x3
 2212 006c 0E       		.uleb128 0xe
 2213 006d 3A       		.uleb128 0x3a
 2214 006e 0B       		.uleb128 0xb
 2215 006f 3B       		.uleb128 0x3b
 2216 0070 05       		.uleb128 0x5
 2217 0071 27       		.uleb128 0x27
 2218 0072 19       		.uleb128 0x19
 2219 0073 11       		.uleb128 0x11
 2220 0074 01       		.uleb128 0x1
 2221 0075 12       		.uleb128 0x12
 2222 0076 06       		.uleb128 0x6
 2223 0077 40       		.uleb128 0x40
 2224 0078 18       		.uleb128 0x18
 2225 0079 9642     		.uleb128 0x2116
 2226 007b 19       		.uleb128 0x19
 2227 007c 01       		.uleb128 0x1
 2228 007d 13       		.uleb128 0x13
 2229 007e 00       		.byte	0
 2230 007f 00       		.byte	0
 2231 0080 09       		.uleb128 0x9
 2232 0081 34       		.uleb128 0x34
 2233 0082 00       		.byte	0
 2234 0083 03       		.uleb128 0x3
 2235 0084 0E       		.uleb128 0xe
 2236 0085 3A       		.uleb128 0x3a
 2237 0086 0B       		.uleb128 0xb
 2238 0087 3B       		.uleb128 0x3b
 2239 0088 05       		.uleb128 0x5
 2240 0089 49       		.uleb128 0x49
 2241 008a 13       		.uleb128 0x13
 2242 008b 02       		.uleb128 0x2
 2243 008c 18       		.uleb128 0x18
 2244 008d 00       		.byte	0
 2245 008e 00       		.byte	0
 2246 008f 0A       		.uleb128 0xa
 2247 0090 2E       		.uleb128 0x2e
 2248 0091 00       		.byte	0
 2249 0092 3F       		.uleb128 0x3f
 2250 0093 19       		.uleb128 0x19
 2251 0094 03       		.uleb128 0x3
 2252 0095 0E       		.uleb128 0xe
 2253 0096 3A       		.uleb128 0x3a
 2254 0097 0B       		.uleb128 0xb
 2255 0098 3B       		.uleb128 0x3b
 2256 0099 05       		.uleb128 0x5
 2257 009a 27       		.uleb128 0x27
 2258 009b 19       		.uleb128 0x19
 2259 009c 11       		.uleb128 0x11
 2260 009d 01       		.uleb128 0x1
 2261 009e 12       		.uleb128 0x12
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 75


 2262 009f 06       		.uleb128 0x6
 2263 00a0 40       		.uleb128 0x40
 2264 00a1 18       		.uleb128 0x18
 2265 00a2 9642     		.uleb128 0x2116
 2266 00a4 19       		.uleb128 0x19
 2267 00a5 00       		.byte	0
 2268 00a6 00       		.byte	0
 2269 00a7 0B       		.uleb128 0xb
 2270 00a8 2E       		.uleb128 0x2e
 2271 00a9 01       		.byte	0x1
 2272 00aa 3F       		.uleb128 0x3f
 2273 00ab 19       		.uleb128 0x19
 2274 00ac 03       		.uleb128 0x3
 2275 00ad 0E       		.uleb128 0xe
 2276 00ae 3A       		.uleb128 0x3a
 2277 00af 0B       		.uleb128 0xb
 2278 00b0 3B       		.uleb128 0x3b
 2279 00b1 05       		.uleb128 0x5
 2280 00b2 27       		.uleb128 0x27
 2281 00b3 19       		.uleb128 0x19
 2282 00b4 49       		.uleb128 0x49
 2283 00b5 13       		.uleb128 0x13
 2284 00b6 11       		.uleb128 0x11
 2285 00b7 01       		.uleb128 0x1
 2286 00b8 12       		.uleb128 0x12
 2287 00b9 06       		.uleb128 0x6
 2288 00ba 40       		.uleb128 0x40
 2289 00bb 18       		.uleb128 0x18
 2290 00bc 9742     		.uleb128 0x2117
 2291 00be 19       		.uleb128 0x19
 2292 00bf 01       		.uleb128 0x1
 2293 00c0 13       		.uleb128 0x13
 2294 00c1 00       		.byte	0
 2295 00c2 00       		.byte	0
 2296 00c3 0C       		.uleb128 0xc
 2297 00c4 05       		.uleb128 0x5
 2298 00c5 00       		.byte	0
 2299 00c6 03       		.uleb128 0x3
 2300 00c7 0E       		.uleb128 0xe
 2301 00c8 3A       		.uleb128 0x3a
 2302 00c9 0B       		.uleb128 0xb
 2303 00ca 3B       		.uleb128 0x3b
 2304 00cb 05       		.uleb128 0x5
 2305 00cc 49       		.uleb128 0x49
 2306 00cd 13       		.uleb128 0x13
 2307 00ce 02       		.uleb128 0x2
 2308 00cf 18       		.uleb128 0x18
 2309 00d0 00       		.byte	0
 2310 00d1 00       		.byte	0
 2311 00d2 0D       		.uleb128 0xd
 2312 00d3 34       		.uleb128 0x34
 2313 00d4 00       		.byte	0
 2314 00d5 03       		.uleb128 0x3
 2315 00d6 08       		.uleb128 0x8
 2316 00d7 3A       		.uleb128 0x3a
 2317 00d8 0B       		.uleb128 0xb
 2318 00d9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 76


 2319 00da 05       		.uleb128 0x5
 2320 00db 49       		.uleb128 0x49
 2321 00dc 13       		.uleb128 0x13
 2322 00dd 02       		.uleb128 0x2
 2323 00de 18       		.uleb128 0x18
 2324 00df 00       		.byte	0
 2325 00e0 00       		.byte	0
 2326 00e1 0E       		.uleb128 0xe
 2327 00e2 2E       		.uleb128 0x2e
 2328 00e3 00       		.byte	0
 2329 00e4 3F       		.uleb128 0x3f
 2330 00e5 19       		.uleb128 0x19
 2331 00e6 03       		.uleb128 0x3
 2332 00e7 0E       		.uleb128 0xe
 2333 00e8 3A       		.uleb128 0x3a
 2334 00e9 0B       		.uleb128 0xb
 2335 00ea 3B       		.uleb128 0x3b
 2336 00eb 05       		.uleb128 0x5
 2337 00ec 27       		.uleb128 0x27
 2338 00ed 19       		.uleb128 0x19
 2339 00ee 49       		.uleb128 0x49
 2340 00ef 13       		.uleb128 0x13
 2341 00f0 11       		.uleb128 0x11
 2342 00f1 01       		.uleb128 0x1
 2343 00f2 12       		.uleb128 0x12
 2344 00f3 06       		.uleb128 0x6
 2345 00f4 40       		.uleb128 0x40
 2346 00f5 18       		.uleb128 0x18
 2347 00f6 9742     		.uleb128 0x2117
 2348 00f8 19       		.uleb128 0x19
 2349 00f9 00       		.byte	0
 2350 00fa 00       		.byte	0
 2351 00fb 0F       		.uleb128 0xf
 2352 00fc 2E       		.uleb128 0x2e
 2353 00fd 01       		.byte	0x1
 2354 00fe 3F       		.uleb128 0x3f
 2355 00ff 19       		.uleb128 0x19
 2356 0100 03       		.uleb128 0x3
 2357 0101 0E       		.uleb128 0xe
 2358 0102 3A       		.uleb128 0x3a
 2359 0103 0B       		.uleb128 0xb
 2360 0104 3B       		.uleb128 0x3b
 2361 0105 05       		.uleb128 0x5
 2362 0106 27       		.uleb128 0x27
 2363 0107 19       		.uleb128 0x19
 2364 0108 11       		.uleb128 0x11
 2365 0109 01       		.uleb128 0x1
 2366 010a 12       		.uleb128 0x12
 2367 010b 06       		.uleb128 0x6
 2368 010c 40       		.uleb128 0x40
 2369 010d 18       		.uleb128 0x18
 2370 010e 9742     		.uleb128 0x2117
 2371 0110 19       		.uleb128 0x19
 2372 0111 01       		.uleb128 0x1
 2373 0112 13       		.uleb128 0x13
 2374 0113 00       		.byte	0
 2375 0114 00       		.byte	0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 77


 2376 0115 10       		.uleb128 0x10
 2377 0116 05       		.uleb128 0x5
 2378 0117 00       		.byte	0
 2379 0118 03       		.uleb128 0x3
 2380 0119 08       		.uleb128 0x8
 2381 011a 3A       		.uleb128 0x3a
 2382 011b 0B       		.uleb128 0xb
 2383 011c 3B       		.uleb128 0x3b
 2384 011d 05       		.uleb128 0x5
 2385 011e 49       		.uleb128 0x49
 2386 011f 13       		.uleb128 0x13
 2387 0120 02       		.uleb128 0x2
 2388 0121 18       		.uleb128 0x18
 2389 0122 00       		.byte	0
 2390 0123 00       		.byte	0
 2391 0124 11       		.uleb128 0x11
 2392 0125 34       		.uleb128 0x34
 2393 0126 00       		.byte	0
 2394 0127 03       		.uleb128 0x3
 2395 0128 0E       		.uleb128 0xe
 2396 0129 3A       		.uleb128 0x3a
 2397 012a 0B       		.uleb128 0xb
 2398 012b 3B       		.uleb128 0x3b
 2399 012c 0B       		.uleb128 0xb
 2400 012d 49       		.uleb128 0x49
 2401 012e 13       		.uleb128 0x13
 2402 012f 3F       		.uleb128 0x3f
 2403 0130 19       		.uleb128 0x19
 2404 0131 02       		.uleb128 0x2
 2405 0132 18       		.uleb128 0x18
 2406 0133 00       		.byte	0
 2407 0134 00       		.byte	0
 2408 0135 12       		.uleb128 0x12
 2409 0136 01       		.uleb128 0x1
 2410 0137 01       		.byte	0x1
 2411 0138 49       		.uleb128 0x49
 2412 0139 13       		.uleb128 0x13
 2413 013a 01       		.uleb128 0x1
 2414 013b 13       		.uleb128 0x13
 2415 013c 00       		.byte	0
 2416 013d 00       		.byte	0
 2417 013e 13       		.uleb128 0x13
 2418 013f 21       		.uleb128 0x21
 2419 0140 00       		.byte	0
 2420 0141 49       		.uleb128 0x49
 2421 0142 13       		.uleb128 0x13
 2422 0143 2F       		.uleb128 0x2f
 2423 0144 0B       		.uleb128 0xb
 2424 0145 00       		.byte	0
 2425 0146 00       		.byte	0
 2426 0147 14       		.uleb128 0x14
 2427 0148 0F       		.uleb128 0xf
 2428 0149 00       		.byte	0
 2429 014a 0B       		.uleb128 0xb
 2430 014b 0B       		.uleb128 0xb
 2431 014c 49       		.uleb128 0x49
 2432 014d 13       		.uleb128 0x13
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 78


 2433 014e 00       		.byte	0
 2434 014f 00       		.byte	0
 2435 0150 15       		.uleb128 0x15
 2436 0151 26       		.uleb128 0x26
 2437 0152 00       		.byte	0
 2438 0153 49       		.uleb128 0x49
 2439 0154 13       		.uleb128 0x13
 2440 0155 00       		.byte	0
 2441 0156 00       		.byte	0
 2442 0157 00       		.byte	0
 2443              		.section	.debug_aranges,"",%progbits
 2444 0000 AC000000 		.4byte	0xac
 2445 0004 0200     		.2byte	0x2
 2446 0006 00000000 		.4byte	.Ldebug_info0
 2447 000a 04       		.byte	0x4
 2448 000b 00       		.byte	0
 2449 000c 0000     		.2byte	0
 2450 000e 0000     		.2byte	0
 2451 0010 00000000 		.4byte	.LFB0
 2452 0014 68010000 		.4byte	.LFE0-.LFB0
 2453 0018 00000000 		.4byte	.LFB1
 2454 001c C0000000 		.4byte	.LFE1-.LFB1
 2455 0020 00000000 		.4byte	.LFB2
 2456 0024 24000000 		.4byte	.LFE2-.LFB2
 2457 0028 00000000 		.4byte	.LFB3
 2458 002c C0000000 		.4byte	.LFE3-.LFB3
 2459 0030 00000000 		.4byte	.LFB4
 2460 0034 50000000 		.4byte	.LFE4-.LFB4
 2461 0038 00000000 		.4byte	.LFB5
 2462 003c 48000000 		.4byte	.LFE5-.LFB5
 2463 0040 00000000 		.4byte	.LFB6
 2464 0044 34000000 		.4byte	.LFE6-.LFB6
 2465 0048 00000000 		.4byte	.LFB7
 2466 004c 58000000 		.4byte	.LFE7-.LFB7
 2467 0050 00000000 		.4byte	.LFB8
 2468 0054 1C000000 		.4byte	.LFE8-.LFB8
 2469 0058 00000000 		.4byte	.LFB9
 2470 005c 20000000 		.4byte	.LFE9-.LFB9
 2471 0060 00000000 		.4byte	.LFB10
 2472 0064 28000000 		.4byte	.LFE10-.LFB10
 2473 0068 00000000 		.4byte	.LFB11
 2474 006c 54000000 		.4byte	.LFE11-.LFB11
 2475 0070 00000000 		.4byte	.LFB12
 2476 0074 58000000 		.4byte	.LFE12-.LFB12
 2477 0078 00000000 		.4byte	.LFB13
 2478 007c 5C000000 		.4byte	.LFE13-.LFB13
 2479 0080 00000000 		.4byte	.LFB14
 2480 0084 98000000 		.4byte	.LFE14-.LFB14
 2481 0088 00000000 		.4byte	.LFB15
 2482 008c 30000000 		.4byte	.LFE15-.LFB15
 2483 0090 00000000 		.4byte	.LFB16
 2484 0094 24000000 		.4byte	.LFE16-.LFB16
 2485 0098 00000000 		.4byte	.LFB17
 2486 009c 20000000 		.4byte	.LFE17-.LFB17
 2487 00a0 00000000 		.4byte	.LFB18
 2488 00a4 40000000 		.4byte	.LFE18-.LFB18
 2489 00a8 00000000 		.4byte	0
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 79


 2490 00ac 00000000 		.4byte	0
 2491              		.section	.debug_ranges,"",%progbits
 2492              	.Ldebug_ranges0:
 2493 0000 00000000 		.4byte	.LFB0
 2494 0004 68010000 		.4byte	.LFE0
 2495 0008 00000000 		.4byte	.LFB1
 2496 000c C0000000 		.4byte	.LFE1
 2497 0010 00000000 		.4byte	.LFB2
 2498 0014 24000000 		.4byte	.LFE2
 2499 0018 00000000 		.4byte	.LFB3
 2500 001c C0000000 		.4byte	.LFE3
 2501 0020 00000000 		.4byte	.LFB4
 2502 0024 50000000 		.4byte	.LFE4
 2503 0028 00000000 		.4byte	.LFB5
 2504 002c 48000000 		.4byte	.LFE5
 2505 0030 00000000 		.4byte	.LFB6
 2506 0034 34000000 		.4byte	.LFE6
 2507 0038 00000000 		.4byte	.LFB7
 2508 003c 58000000 		.4byte	.LFE7
 2509 0040 00000000 		.4byte	.LFB8
 2510 0044 1C000000 		.4byte	.LFE8
 2511 0048 00000000 		.4byte	.LFB9
 2512 004c 20000000 		.4byte	.LFE9
 2513 0050 00000000 		.4byte	.LFB10
 2514 0054 28000000 		.4byte	.LFE10
 2515 0058 00000000 		.4byte	.LFB11
 2516 005c 54000000 		.4byte	.LFE11
 2517 0060 00000000 		.4byte	.LFB12
 2518 0064 58000000 		.4byte	.LFE12
 2519 0068 00000000 		.4byte	.LFB13
 2520 006c 5C000000 		.4byte	.LFE13
 2521 0070 00000000 		.4byte	.LFB14
 2522 0074 98000000 		.4byte	.LFE14
 2523 0078 00000000 		.4byte	.LFB15
 2524 007c 30000000 		.4byte	.LFE15
 2525 0080 00000000 		.4byte	.LFB16
 2526 0084 24000000 		.4byte	.LFE16
 2527 0088 00000000 		.4byte	.LFB17
 2528 008c 20000000 		.4byte	.LFE17
 2529 0090 00000000 		.4byte	.LFB18
 2530 0094 40000000 		.4byte	.LFE18
 2531 0098 00000000 		.4byte	0
 2532 009c 00000000 		.4byte	0
 2533              		.section	.debug_line,"",%progbits
 2534              	.Ldebug_line0:
 2535 0000 54020000 		.section	.debug_str,"MS",%progbits,1
 2535      02004900 
 2535      00000201 
 2535      FB0E0D00 
 2535      01010101 
 2536              	.LASF10:
 2537 0000 75696E74 		.ascii	"uint16\000"
 2537      313600
 2538              	.LASF27:
 2539 0007 736E7349 		.ascii	"snsIndex\000"
 2539      6E646578 
 2539      00
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 80


 2540              	.LASF61:
 2541 0010 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2541      43313120 
 2541      352E342E 
 2541      31203230 
 2541      31363036 
 2542 0043 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2542      20726576 
 2542      6973696F 
 2542      6E203233 
 2542      37373135 
 2543 0076 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2543      66756E63 
 2543      74696F6E 
 2543      2D736563 
 2543      74696F6E 
 2544              	.LASF42:
 2545 009e 43617053 		.ascii	"CapSense_CSD_SetPrescaler\000"
 2545      656E7365 
 2545      5F435344 
 2545      5F536574 
 2545      50726573 
 2546              	.LASF7:
 2547 00b8 6C6F6E67 		.ascii	"long long unsigned int\000"
 2547      206C6F6E 
 2547      6720756E 
 2547      7369676E 
 2547      65642069 
 2548              	.LASF55:
 2549 00cf 43617053 		.ascii	"CapSense_CSD_maskTable\000"
 2549      656E7365 
 2549      5F435344 
 2549      5F6D6173 
 2549      6B546162 
 2550              	.LASF54:
 2551 00e6 43617053 		.ascii	"CapSense_CSD_portTable\000"
 2551      656E7365 
 2551      5F435344 
 2551      5F706F72 
 2551      74546162 
 2552              	.LASF6:
 2553 00fd 6C6F6E67 		.ascii	"long long int\000"
 2553      206C6F6E 
 2553      6720696E 
 2553      7400
 2554              	.LASF0:
 2555 010b 7369676E 		.ascii	"signed char\000"
 2555      65642063 
 2555      68617200 
 2556              	.LASF50:
 2557 0117 43617053 		.ascii	"CapSense_CSD_sensorIndex\000"
 2557      656E7365 
 2557      5F435344 
 2557      5F73656E 
 2557      736F7249 
 2558              	.LASF20:
 2559 0130 43617053 		.ascii	"CapSense_CSD_Init\000"
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 81


 2559      656E7365 
 2559      5F435344 
 2559      5F496E69 
 2559      7400
 2560              	.LASF4:
 2561 0142 6C6F6E67 		.ascii	"long int\000"
 2561      20696E74 
 2561      00
 2562              	.LASF60:
 2563 014b 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 2563      656E7365 
 2563      5F435344 
 2563      5F776964 
 2563      6765744E 
 2564              	.LASF56:
 2565 0165 43617053 		.ascii	"CapSense_CSD_csTable\000"
 2565      656E7365 
 2565      5F435344 
 2565      5F637354 
 2565      61626C65 
 2566              	.LASF16:
 2567 017a 72656731 		.ascii	"reg16\000"
 2567      3600
 2568              	.LASF9:
 2569 0180 75696E74 		.ascii	"uint8\000"
 2569      3800
 2570              	.LASF13:
 2571 0186 646F7562 		.ascii	"double\000"
 2571      6C6500
 2572              	.LASF48:
 2573 018d 43617053 		.ascii	"CapSense_CSD_initVar\000"
 2573      656E7365 
 2573      5F435344 
 2573      5F696E69 
 2573      74566172 
 2574              	.LASF11:
 2575 01a2 75696E74 		.ascii	"uint32\000"
 2575      333200
 2576              	.LASF32:
 2577 01a9 43617053 		.ascii	"CapSense_CSD_ScanEnabledWidgets\000"
 2577      656E7365 
 2577      5F435344 
 2577      5F536361 
 2577      6E456E61 
 2578              	.LASF38:
 2579 01c9 6D61736B 		.ascii	"mask\000"
 2579      00
 2580              	.LASF35:
 2581 01ce 43617053 		.ascii	"CapSense_CSD_ClearSensors\000"
 2581      656E7365 
 2581      5F435344 
 2581      5F436C65 
 2581      61725365 
 2582              	.LASF37:
 2583 01e8 706F7274 		.ascii	"port\000"
 2583      00
 2584              	.LASF40:
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 82


 2585 01ed 43617053 		.ascii	"CapSense_CSD_PreScan\000"
 2585      656E7365 
 2585      5F435344 
 2585      5F507265 
 2585      5363616E 
 2586              	.LASF8:
 2587 0202 756E7369 		.ascii	"unsigned int\000"
 2587      676E6564 
 2587      20696E74 
 2587      00
 2588              	.LASF5:
 2589 020f 6C6F6E67 		.ascii	"long unsigned int\000"
 2589      20756E73 
 2589      69676E65 
 2589      6420696E 
 2589      7400
 2590              	.LASF62:
 2591 0221 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSD.c\000"
 2591      72617465 
 2591      645F536F 
 2591      75726365 
 2591      5C50536F 
 2592              	.LASF59:
 2593 0247 43617053 		.ascii	"CapSense_CSD_analogSwitchDivider\000"
 2593      656E7365 
 2593      5F435344 
 2593      5F616E61 
 2593      6C6F6753 
 2594              	.LASF3:
 2595 0268 73686F72 		.ascii	"short unsigned int\000"
 2595      7420756E 
 2595      7369676E 
 2595      65642069 
 2595      6E7400
 2596              	.LASF31:
 2597 027b 73656E73 		.ascii	"sensor\000"
 2597      6F7200
 2598              	.LASF39:
 2599 0282 43617053 		.ascii	"CapSense_CSD_DisableSensor\000"
 2599      656E7365 
 2599      5F435344 
 2599      5F446973 
 2599      61626C65 
 2600              	.LASF41:
 2601 029d 43617053 		.ascii	"CapSense_CSD_PostScan\000"
 2601      656E7365 
 2601      5F435344 
 2601      5F506F73 
 2601      74536361 
 2602              	.LASF28:
 2603 02b3 736C6F74 		.ascii	"slot\000"
 2603      00
 2604              	.LASF53:
 2605 02b8 43617053 		.ascii	"CapSense_CSD_pcTable\000"
 2605      656E7365 
 2605      5F435344 
 2605      5F706354 
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 83


 2605      61626C65 
 2606              	.LASF30:
 2607 02cd 43617053 		.ascii	"CapSense_CSD_ScanSensor\000"
 2607      656E7365 
 2607      5F435344 
 2607      5F536361 
 2607      6E53656E 
 2608              	.LASF17:
 2609 02e5 72656733 		.ascii	"reg32\000"
 2609      3200
 2610              	.LASF36:
 2611 02eb 43617053 		.ascii	"CapSense_CSD_EnableSensor\000"
 2611      656E7365 
 2611      5F435344 
 2611      5F456E61 
 2611      626C6553 
 2612              	.LASF19:
 2613 0305 73697A65 		.ascii	"sizetype\000"
 2613      74797065 
 2613      00
 2614              	.LASF18:
 2615 030e 6C6F6E67 		.ascii	"long double\000"
 2615      20646F75 
 2615      626C6500 
 2616              	.LASF23:
 2617 031a 43617053 		.ascii	"CapSense_CSD_Start\000"
 2617      656E7365 
 2617      5F435344 
 2617      5F537461 
 2617      727400
 2618              	.LASF46:
 2619 032d 7363616E 		.ascii	"scanSpeed\000"
 2619      53706565 
 2619      6400
 2620              	.LASF25:
 2621 0337 656E4D61 		.ascii	"enMask\000"
 2621      736B00
 2622              	.LASF52:
 2623 033e 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 2623      656E7365 
 2623      5F435344 
 2623      5F73656E 
 2623      736F7245 
 2624              	.LASF12:
 2625 035c 666C6F61 		.ascii	"float\000"
 2625      7400
 2626              	.LASF43:
 2627 0362 70726573 		.ascii	"prescaler\000"
 2627      63616C65 
 2627      7200
 2628              	.LASF44:
 2629 036c 43617053 		.ascii	"CapSense_CSD_GetPrescaler\000"
 2629      656E7365 
 2629      5F435344 
 2629      5F476574 
 2629      50726573 
 2630              	.LASF15:
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 84


 2631 0386 72656738 		.ascii	"reg8\000"
 2631      00
 2632              	.LASF1:
 2633 038b 756E7369 		.ascii	"unsigned char\000"
 2633      676E6564 
 2633      20636861 
 2633      7200
 2634              	.LASF2:
 2635 0399 73686F72 		.ascii	"short int\000"
 2635      7420696E 
 2635      7400
 2636              	.LASF29:
 2637 03a3 77696467 		.ascii	"widget\000"
 2637      657400
 2638              	.LASF64:
 2639 03aa 43617053 		.ascii	"CapSense_CSD_IsBusy\000"
 2639      656E7365 
 2639      5F435344 
 2639      5F497342 
 2639      75737900 
 2640              	.LASF51:
 2641 03be 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 2641      656E7365 
 2641      5F435344 
 2641      5F73656E 
 2641      736F7252 
 2642              	.LASF45:
 2643 03d5 43617053 		.ascii	"CapSense_CSD_SetScanSpeed\000"
 2643      656E7365 
 2643      5F435344 
 2643      5F536574 
 2643      5363616E 
 2644              	.LASF24:
 2645 03ef 43617053 		.ascii	"CapSense_CSD_Stop\000"
 2645      656E7365 
 2645      5F435344 
 2645      5F53746F 
 2645      7000
 2646              	.LASF14:
 2647 0401 63686172 		.ascii	"char\000"
 2647      00
 2648              	.LASF26:
 2649 0406 43617053 		.ascii	"CapSense_CSD_SetScanSlotSettings\000"
 2649      656E7365 
 2649      5F435344 
 2649      5F536574 
 2649      5363616E 
 2650              	.LASF34:
 2651 0427 43617053 		.ascii	"CapSense_CSD_ReadSensorRaw\000"
 2651      656E7365 
 2651      5F435344 
 2651      5F526561 
 2651      6453656E 
 2652              	.LASF58:
 2653 0442 43617053 		.ascii	"CapSense_CSD_widgetResolution\000"
 2653      656E7365 
 2653      5F435344 
ARM GAS  C:\Users\nikol\AppData\Local\Temp\ccKeCJXx.s 			page 85


 2653      5F776964 
 2653      67657452 
 2654              	.LASF57:
 2655 0460 43617053 		.ascii	"CapSense_CSD_idacSettings\000"
 2655      656E7365 
 2655      5F435344 
 2655      5F696461 
 2655      63536574 
 2656              	.LASF21:
 2657 047a 43617053 		.ascii	"CapSense_CSD_Enable\000"
 2657      656E7365 
 2657      5F435344 
 2657      5F456E61 
 2657      626C6500 
 2658              	.LASF63:
 2659 048e 433A5C55 		.ascii	"C:\\Users\\nikol\\Documents\\git\\3. Semester\\PRJ3"
 2659      73657273 
 2659      5C6E696B 
 2659      6F6C5C44 
 2659      6F63756D 
 2660 04bb 5C706C61 		.ascii	"\\player_side_app\\CupSensor_IF\\CapSense_CSD_Desig"
 2660      7965725F 
 2660      73696465 
 2660      5F617070 
 2660      5C437570 
 2661 04eb 6E30312E 		.ascii	"n01.cydsn\000"
 2661      63796473 
 2661      6E00
 2662              	.LASF22:
 2663 04f5 656E6162 		.ascii	"enableInterrupts\000"
 2663      6C65496E 
 2663      74657272 
 2663      75707473 
 2663      00
 2664              	.LASF33:
 2665 0506 43617053 		.ascii	"CapSense_CSD_FindNextSensor\000"
 2665      656E7365 
 2665      5F435344 
 2665      5F46696E 
 2665      644E6578 
 2666              	.LASF47:
 2667 0522 43617053 		.ascii	"CapSense_CSD_SetAnalogSwitchesSource\000"
 2667      656E7365 
 2667      5F435344 
 2667      5F536574 
 2667      416E616C 
 2668              	.LASF49:
 2669 0547 43617053 		.ascii	"CapSense_CSD_csv\000"
 2669      656E7365 
 2669      5F435344 
 2669      5F637376 
 2669      00
 2670              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
